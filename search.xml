<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>小白向—2022腾讯游戏安全初赛分析（下）</title>
      <link href="/post/pojie/2022tencentFlag2/"/>
      <url>/post/pojie/2022tencentFlag2/</url>
      
        <content type="html"><![CDATA[<p>教程上：<a href="/post/pojie/2022tencentFlag1/">小白向—2022腾讯游戏安全初赛分析（上） </a></p><p>在上部分的最后，我们获取到了shellcode0每次调取时使用的参数，并且发现程序在运行4秒钟后将清除整个画板。</p><h1 id="移除清空逻辑"><a href="#移除清空逻辑" class="headerlink" title="移除清空逻辑"></a>移除清空逻辑</h1><p>首先我们先将运行4秒后的清除画板的逻辑移除，以方便之后结果的查看。</p><p>当时我们是在程序基地址+0x1090的函数的第68行打下了断点，而断点之后的那一行，调用了一个名为GetTickCount的Windows api函数</p><p>据ai介绍，此函数用于获取自系统启动以来经过的毫秒数</p><p>而在第74行的if，是一个实时的GetTickCount减去在第69行运行时获得的毫秒数，而后与0xFA0比较，0xFA0转为10进制即为4000，4000毫秒即为4秒，由此估计if内的逻辑即为清除画板，要避免执行这段逻辑，我们只需要调整跳转的条件<br><img src="https://i-blog.csdnimg.cn/direct/1b973f98a4f84a34bb4927b4dc6f1989.png" alt="请添加图片描述"></p><p>鼠标点击第74行的if，按下tab键，将进入到hex代码页（如果为graphs界面，则单击空格）<br><img src="https://i-blog.csdnimg.cn/direct/9d3f2135bd4e484e85a661feeaeeee3e.png" alt="请添加图片描述"></p><p>从上图可以看到，比较eax与0FA0h后，如果eax小于等于（jbe意味小于等于跳转）0FA0h，则跳转到loc_7FF60D00130C。而我们希望程序能一直以前四秒的逻辑运行，因此需要将jbe改为jmp，即无条件跳转。</p><p>修改方式为右键改行，在菜单中选择Patching→Change byte<br><img src="https://i-blog.csdnimg.cn/direct/e20847338b174ea1adcac028d1c1a346.png" alt="请添加图片描述"></p><p>然后在弹出的窗口中，将前两个值从0F 86修改为90 E9。0F 86意味小于等于条件，A1 00 00 00意为跳转，而90 E9则是占位符nop。这样修改后就将条件移除了。<br><img src="https://i-blog.csdnimg.cn/direct/636c776aa056456492bd69d42aaa5d4b.png" alt="请添加图片描述"></p><p>点击ok，可以看到原来的jbe变成了nop和jmp<br><img src="https://i-blog.csdnimg.cn/direct/246ff0b7b9f849079997e5f0f7ff6bc6.png" alt="请添加图片描述"></p><p>但就此还没有结束，还需要应用此次patch，如下图右键点击该行，然后在菜单中选择patching→Apply patches to… ，然后在弹出的窗口中点击Apply patches。那我们的修改就被应用到赛题的exe程序里了，再次打开就不会有4秒后清除面板的问题了。<br><img src="https://i-blog.csdnimg.cn/direct/6d2b578461c344879891fe2e0e30efdc.png" alt="请添加图片描述"></p><h1 id="图案参数分析"><a href="#图案参数分析" class="headerlink" title="图案参数分析"></a>图案参数分析</h1><p>分析时请保持IDA Pro为调试中的状态，不然所有动态的数据都无法查看</p><p>在（上）篇的最后，我们获取到了shellcode0在每次调用时使用的参数，并且分析出前两个参数是x,y坐标，以及黄点的坐标存在负数。<br><img src="https://i-blog.csdnimg.cn/direct/35e276c6f08a4519a996d04b4fc6c0c8.png" alt="请添加图片描述"></p><p>进入shellcode420，分析shellcode0调用时参数的来源<br><img src="https://i-blog.csdnimg.cn/direct/02db1396573d436a95e01ae3e062a617.png" alt="请添加图片描述"></p><p>函数的前四个参数取自v16，与v17；而对v16与v17进行的直接的使用或修改只有在第15-20行里进行了一次初始化，将v16与v17的值设置为0。但是根据调用shellcode0时的参数看，v16与v17的值是有改变的，这意味着并不是通过直接以v16&#x3D;.. v17&#x3D;…，的方式来进行值的修改。</p><p>v16与v17是与其他变量在同一块区域声明的，这些变量在内存中的位置也是相邻的，因此v16与v17可以通过其他变量访问，如v16可以通过*(&amp;v15 + sizeof(v15))，v17可以通过*(&amp;v15 + sizeof(v15) + sizeof(v16))来访问，v11、12、13、14同理可访问v16与v17<br><img src="https://i-blog.csdnimg.cn/direct/b2227d37b7f045ab9da98a449facc984.png" alt="请添加图片描述"></p><p>而对于取址号&amp;，只有case2与case3中有使用，用来获取v15的地址，因此推测 v16与v17的值是在case2与case3中设定的。<br><img src="https://i-blog.csdnimg.cn/direct/101746f7c55f4dd19a3ac876cd5625fc.png" alt="请添加图片描述"></p><p>但由于case2与case3中并不是通过调用函数来设置v16、v17，因此无法通过hook来查看设置过程</p><p>这里采用的方法是自己使用c++重写这段逻辑，然后载入这个while与switch结构所依赖的数据，在自己的代码中通过print函数监视这段逻辑的运行过程。</p><p>我们首先需要进一步分析这段代码，理清楚其依赖的数据。</p><p>依赖的数据一般有两种，一种是函数被调用时的参数，但是在这段结构里，从始至终没有用到任何一个参数，因此不考虑这个；另一种就是全局变量，在IDA Pro里的颜色是深蓝色</p><p>而这段结构里的深蓝色的有dword_1CE88031301，鼠标悬浮时会复现一个int[1855]意为int数组；HIDWORD，LODWORD 是c语言标准函数；还有case5,6中用于绘制图像的函数shellcode0。显然这里面所依赖的数据就是dword_1CE88031301<br><img src="https://i-blog.csdnimg.cn/direct/1048f9e92ae84fc49a1cb80a6d9b2222.png" alt="请添加图片描述"></p><p>所以我们需要获取这个数据，获取这个数据所用到的技术被称作dump。</p><h1 id="dump"><a href="#dump" class="headerlink" title="dump"></a>dump</h1><p>dump所做的就是从内存中拷贝数据，所以dump前需要知道自己所需数据的在内存中的起始地址以及结束地址</p><p>起始地址很明显，该变量去除前缀的1CE88031301就是，该数组的大小是1855，则结束地址为起始地址+1855</p><p>知道了起始地址与结束地址，就可以写dump脚本了</p><p>如图所示点击菜单<br><img src="https://i-blog.csdnimg.cn/direct/e2c6a6237a504139a1ac0f7495e231f4.png" alt="请添加图片描述"></p><p>在弹出的窗口中填入代码，修改start地址以及fopen中的路径（如果路径在c盘，则需要使用管理员权限打开ida pro）,点击Run按钮。<br><img src="https://i-blog.csdnimg.cn/direct/601f4178ea9b4297926da14bf37dff4d.png" alt="请添加图片描述"></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="title function_">main</span>(<span class="params"><span class="keyword">void</span></span>)</span><br><span class="line">&#123;</span><br><span class="line">auto fp, start, end, size, i;</span><br><span class="line">start = <span class="number">0x1CE88031301</span>;</span><br><span class="line">size = <span class="number">1855</span>;</span><br><span class="line">end = start + size;</span><br><span class="line">fp = <span class="title function_">fopen</span>(<span class="string">&quot;C:\\output.txt&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; size; i++ )&#123;</span><br><span class="line">   auto value = <span class="title function_">get_wide_dword</span>(start + i * <span class="number">4</span>);</span><br><span class="line">        <span class="title function_">fprintf</span>(fp, <span class="string">&quot;%d,&quot;</span>, value);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>脚本运行并不会有成功反馈，点击Run按钮, 需自行在fopen填入的路径中查找是否有对应的文件，如我所填的就可以在c盘找到一个output.txt文件<br><img src="https://i-blog.csdnimg.cn/direct/903d287a530b4fb7bcbf8e856cfab8a2.png" alt="请添加图片描述"></p><p>这个文件中记录的，就是数组的值了</p><p>获得了虚拟机运行所依赖的数据（该数据一般被称为操作符），接下来我们需要使用c++自己编写一段模拟该虚拟机运行的代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> code[<span class="number">1855</span>] = &#123;&#125;; <span class="comment">//将dump到的数据粘贴至&#123;&#125;内，由于数据太多，此处就不给出</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> RIP = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> reg;</span><br><span class="line">     <span class="comment">//即然v16与v17是通过v15的地址来访问的，</span></span><br><span class="line">     <span class="comment">//干脆直接使用数组来表示v15,v16,v17,v18,v19</span></span><br><span class="line">     <span class="comment">//int占1个位置，int64占两个，int128占四个位置，因此数组的大小是10</span></span><br><span class="line">    <span class="type">int</span> Stack[<span class="number">10</span>];</span><br><span class="line">    <span class="type">int</span> v13, v14;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;start\n&quot;</span>);</span><br><span class="line">    <span class="built_in">memset</span>(Stack, <span class="number">0</span>, <span class="built_in">sizeof</span>(Stack));</span><br><span class="line">    Stack[<span class="number">8</span>] = Stack[<span class="number">9</span>] = <span class="number">50</span>;<span class="comment">//stack[8]与stack[9]分别为 v18与v19</span></span><br><span class="line">    <span class="keyword">while</span> (RIP &lt;= <span class="number">0x1301</span>) &#123;</span><br><span class="line">        <span class="type">int</span> opcode = code[RIP];</span><br><span class="line">        RIP++;</span><br><span class="line">        <span class="keyword">switch</span> (opcode) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            Stack[<span class="number">0</span>] += Stack[<span class="number">1</span>]; <span class="comment">//等同于LODWORD(v15) = HIDWORD(v15) + v15;</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;case 0 stack[0]=%d+%d\n&quot;</span>, Stack[<span class="number">0</span>], Stack[<span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            Stack[<span class="number">0</span>] -= Stack[<span class="number">1</span>]; <span class="comment">//等同于LODWORD(v15) = v15 - HIDWORD(v15);</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;case 1 stack[0]=%d-%d\n&quot;</span>, Stack[<span class="number">0</span>], Stack[<span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            Stack[code[RIP + <span class="number">1</span>]] = Stack[code[RIP]];</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;case 2 Stack[%d]=Stack[%d]=%d\n&quot;</span>, code[RIP + <span class="number">1</span>], code[RIP], Stack[code[RIP]]);</span><br><span class="line">            RIP += <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            Stack[code[RIP + <span class="number">1</span>]] = code[RIP];</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;case 3 Stack[%d]=%d\n&quot;</span>, code[RIP + <span class="number">1</span>], code[RIP]);</span><br><span class="line">            RIP += <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            v13 = Stack[<span class="number">0</span>];</span><br><span class="line">            v14 = Stack[<span class="number">0</span>] * (Stack[<span class="number">1</span>] + <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;case 4 Origin: Stack[0]=%d Stack[1]=%d\n&quot;</span>, Stack[<span class="number">0</span>], Stack[<span class="number">1</span>]);</span><br><span class="line">            Stack[<span class="number">0</span>] = code[RIP] ^ <span class="number">0x414345</span>;</span><br><span class="line">            Stack[<span class="number">1</span>] = ((Stack[<span class="number">0</span>] ^ (Stack[<span class="number">1</span>] + v13)) % <span class="number">256</span> + (((Stack[<span class="number">0</span>] ^ (v13 * Stack[<span class="number">1</span>])) % <span class="number">256</span> + (((Stack[<span class="number">0</span>] ^ (Stack[<span class="number">1</span>] + v14)) % <span class="number">256</span>) &lt;&lt; <span class="number">8</span>)) &lt;&lt; <span class="number">8</span>));</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;       Target: Stack[0]=%d Stack[1]=%d\n&quot;</span>, Stack[<span class="number">0</span>], Stack[<span class="number">1</span>]);</span><br><span class="line">            RIP += <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="comment">//由于我们是在分析前5个参数的意义，因此便先省略后5个参数</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;case 5 paint(%d,%d,%d,%d,0xFFFFFF00);\n\n&quot;</span>, Stack[<span class="number">4</span>], Stack[<span class="number">5</span>], Stack[<span class="number">6</span>], Stack[<span class="number">7</span>]);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;case 6 paint(%d,%d,%d,%d,0xFF2DDBE7);\n\n&quot;</span>, Stack[<span class="number">4</span>], Stack[<span class="number">5</span>], Stack[<span class="number">6</span>], Stack[<span class="number">7</span>]);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;exit\n&quot;</span>);</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;exit\n&quot;</span>);</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>将dump出的数据赋值粘贴到code[1855]的声明里，就可以运行这段c++程序，查看这些操作符会使程序以什么样的顺序运行起来<br><img src="https://i-blog.csdnimg.cn/direct/0d456a36ebef483b9479f368c3f802a8.png" alt="请添加图片描述"></p><p>于是我们找一找成功的情况（蓝色点）是怎么运行的，而不成功的情况（黄色点）又是怎么运行的</p><p>先看控制台最先输出的三个黄色点，会注意到三者经历的流程并不相同，有的第五步是case0，有的是case1；而结束前，有的只有两步case2，而有的是4步case2</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">0</span>]=Stack[<span class="number">8</span>]=<span class="number">50</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">4</span>]=Stack[<span class="number">0</span>]=<span class="number">50</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">0</span>]=Stack[<span class="number">4</span>]=<span class="number">50</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span> Stack[<span class="number">1</span>]=<span class="number">1000</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span> stack[<span class="number">0</span>]=<span class="number">-950</span><span class="number">-1000</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">4</span>]=Stack[<span class="number">0</span>]=<span class="number">-950</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">0</span>]=Stack[<span class="number">9</span>]=<span class="number">50</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">5</span>]=Stack[<span class="number">0</span>]=<span class="number">50</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">0</span>]=Stack[<span class="number">4</span>]=<span class="number">-950</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">1</span>]=Stack[<span class="number">5</span>]=<span class="number">50</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span> Origin: Stack[<span class="number">0</span>]=<span class="number">-950</span> Stack[<span class="number">1</span>]=<span class="number">50</span></span><br><span class="line">       Target: Stack[<span class="number">0</span>]=<span class="number">1248208</span> Stack[<span class="number">1</span>]=<span class="number">-14703700</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">3</span>]=Stack[<span class="number">0</span>]=<span class="number">1248208</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">0</span>]=Stack[<span class="number">1</span>]=<span class="number">-14703700</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">1</span>]=Stack[<span class="number">3</span>]=<span class="number">1248208</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">6</span>]=Stack[<span class="number">0</span>]=<span class="number">-14703700</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">7</span>]=Stack[<span class="number">1</span>]=<span class="number">1248208</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span> <span class="built_in">paint</span>(<span class="number">-950</span>,<span class="number">50</span>,<span class="number">-14703700</span>,<span class="number">1248208</span>,<span class="number">0xFFFFFF00</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">0</span>]=Stack[<span class="number">8</span>]=<span class="number">50</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">4</span>]=Stack[<span class="number">0</span>]=<span class="number">50</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">0</span>]=Stack[<span class="number">9</span>]=<span class="number">50</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span> Stack[<span class="number">1</span>]=<span class="number">60</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span> stack[<span class="number">0</span>]=<span class="number">110</span>+<span class="number">60</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">5</span>]=Stack[<span class="number">0</span>]=<span class="number">110</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">0</span>]=Stack[<span class="number">5</span>]=<span class="number">110</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span> Stack[<span class="number">1</span>]=<span class="number">500</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span> stack[<span class="number">0</span>]=<span class="number">-390</span><span class="number">-500</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">5</span>]=Stack[<span class="number">0</span>]=<span class="number">-390</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">0</span>]=Stack[<span class="number">4</span>]=<span class="number">50</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">1</span>]=Stack[<span class="number">5</span>]=<span class="number">-390</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span> Origin: Stack[<span class="number">0</span>]=<span class="number">50</span> Stack[<span class="number">1</span>]=<span class="number">-390</span></span><br><span class="line">       Target: Stack[<span class="number">0</span>]=<span class="number">1822057</span> Stack[<span class="number">1</span>]=<span class="number">-1524539</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">6</span>]=Stack[<span class="number">0</span>]=<span class="number">1822057</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">7</span>]=Stack[<span class="number">1</span>]=<span class="number">-1524539</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span> <span class="built_in">paint</span>(<span class="number">50</span>,<span class="number">-390</span>,<span class="number">1822057</span>,<span class="number">-1524539</span>,<span class="number">0xFFFFFF00</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">0</span>]=Stack[<span class="number">8</span>]=<span class="number">50</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">4</span>]=Stack[<span class="number">0</span>]=<span class="number">50</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">0</span>]=Stack[<span class="number">4</span>]=<span class="number">50</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span> Stack[<span class="number">1</span>]=<span class="number">1000</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span> stack[<span class="number">0</span>]=<span class="number">-950</span><span class="number">-1000</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">4</span>]=Stack[<span class="number">0</span>]=<span class="number">-950</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">0</span>]=Stack[<span class="number">9</span>]=<span class="number">50</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span> Stack[<span class="number">1</span>]=<span class="number">120</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span> stack[<span class="number">0</span>]=<span class="number">170</span>+<span class="number">120</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">5</span>]=Stack[<span class="number">0</span>]=<span class="number">170</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">0</span>]=Stack[<span class="number">4</span>]=<span class="number">-950</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">1</span>]=Stack[<span class="number">5</span>]=<span class="number">170</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span> Origin: Stack[<span class="number">0</span>]=<span class="number">-950</span> Stack[<span class="number">1</span>]=<span class="number">170</span></span><br><span class="line">       Target: Stack[<span class="number">0</span>]=<span class="number">14227863</span> Stack[<span class="number">1</span>]=<span class="number">-7425437</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">3</span>]=Stack[<span class="number">0</span>]=<span class="number">14227863</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">0</span>]=Stack[<span class="number">1</span>]=<span class="number">-7425437</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">1</span>]=Stack[<span class="number">3</span>]=<span class="number">14227863</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">6</span>]=Stack[<span class="number">0</span>]=<span class="number">-7425437</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> Stack[<span class="number">7</span>]=Stack[<span class="number">1</span>]=<span class="number">14227863</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span> <span class="built_in">paint</span>(<span class="number">-950</span>,<span class="number">170</span>,<span class="number">-7425437</span>,<span class="number">14227863</span>,<span class="number">0xFFFFFF00</span>);</span><br></pre></td></tr></table></figure><p>然后看蓝色点的执行顺序，却发现是清一色的23022302224226，因此预计这可能是正确步骤。</p><p>但是我们不能将黄色点的执行顺序直接修改为23022302224226，因为执行的步骤数不同，会影响下一个点对数据，即code[1855]的读取。比如原本执行了16步，改为14步后，那下一个点读取的就从第17步的数据，变成了第15步的数据，这可能会引起很多无法预期的错误。</p><p>我们还是先思考黄色点负数坐标的产生，观察黄色点的执行顺序，注意到是case1出现了减法，然后紧接case1的case2就出现了负数。而在蓝色点的执行顺序中，没有使用过case1，因此预期正确的步骤不需要case1，由此修改case1的代码，去掉减法操作</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将case1修改为</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="comment">//Stack[0] -= Stack[1]; //等同于LODWORD(v15) = v15 - HIDWORD(v15);</span></span><br><span class="line">            <span class="comment">//printf(&quot;case 1 stack[0]=%d-%d\n&quot;, Stack[0], Stack[1]);</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;case 1&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><p>然后重新运行虚拟机程序</p><p>发现黄色点的坐标好像变正常了<br><img src="https://i-blog.csdnimg.cn/direct/8b4d576d797c43878fd9a53f4f869ace.png" alt="请添加图片描述"></p><p>在描点绘图的页面上尝试使用新的坐标进行绘图<br><img src="https://i-blog.csdnimg.cn/direct/2ada7b294a4f4834ac46b4c58dbd80f9.png" alt="请添加图片描述"></p><p>发现是赛题目标图形的上下翻转，说明坐标改对了</p><p>接下来就是把结果应用到原程序了，这里使用的还是hook</p><p>注入器代码不变，dllmain函数做出一些变化，监测绘制的是否是黄色的点，如果是，那么将坐标修改为新坐标，同时由于每个点绘制时，第三四个参数都是不同的，因此猜测第三、四个参数可能会起到验证作用，所以还需要把第三四个参数也修改为新的</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// dllmain.cpp : 定义 DLL 应用程序的入口点。</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;pch.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> __int64 (*Func)(<span class="type">int</span> a1, <span class="type">int</span> a2, <span class="type">int</span> a3, <span class="type">int</span> a4, <span class="type">int</span> a5, __int64 a6, __int64 a7, __int64 a8, __int64 a9, __int64 a10);</span><br><span class="line"><span class="function">__int64 <span class="title">GetBaseAddr</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    HMODULE hMode = <span class="built_in">GetModuleHandle</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="keyword">return</span> (__int64)hMode;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span>* shellcode = <span class="number">0</span>;</span><br><span class="line">BYTE HookCode[] = &#123;</span><br><span class="line">    <span class="number">0x48</span>,<span class="number">0xB8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,  <span class="comment">//mov rax,xxx</span></span><br><span class="line">    <span class="number">0xFF</span>,<span class="number">0xE0</span>                                           <span class="comment">//jmp rax </span></span><br><span class="line">&#125;;</span><br><span class="line">BYTE OriginCode[<span class="number">0x50</span>];</span><br><span class="line"><span class="type">size_t</span> HookLen = <span class="number">12</span>;</span><br><span class="line">__int64 times = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> r_x[<span class="number">11</span>] = &#123; <span class="number">50</span>,<span class="number">50</span>,<span class="number">50</span>,<span class="number">50</span>,<span class="number">50</span>,<span class="number">50</span>,<span class="number">110</span>,<span class="number">170</span>,<span class="number">230</span>,<span class="number">110</span>,<span class="number">170</span> &#125;;</span><br><span class="line"><span class="type">int</span> r_y[<span class="number">11</span>] = &#123; <span class="number">50</span>,<span class="number">110</span>,<span class="number">170</span>,<span class="number">230</span>,<span class="number">290</span>,<span class="number">350</span>,<span class="number">230</span>,<span class="number">230</span>,<span class="number">230</span>,<span class="number">110</span>,<span class="number">170</span>&#125;;</span><br><span class="line"><span class="type">int</span> r_x1[<span class="number">11</span>] = &#123; <span class="number">16258228</span>,<span class="number">1822057</span>,<span class="number">8889163</span>,<span class="number">1897472</span>,<span class="number">3743658</span>,<span class="number">14122466</span>,<span class="number">463184</span>,<span class="number">12856971</span>,<span class="number">3460907</span>,<span class="number">14280177</span>,<span class="number">12856715</span> &#125;;</span><br><span class="line"><span class="type">int</span> r_y1[<span class="number">11</span>] = &#123; <span class="number">1248208</span>,<span class="number">7673289</span>,<span class="number">14227863</span>,<span class="number">15215384</span>,<span class="number">5377790</span>,<span class="number">966258</span>,<span class="number">7898116</span>,<span class="number">13055771</span>,<span class="number">6000615</span>,<span class="number">13743405</span>,<span class="number">11759583</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">__int64 <span class="title">HackShellcode</span><span class="params">(<span class="type">int</span> a1, <span class="type">int</span> a2, <span class="type">int</span> a3, <span class="type">int</span> a4, <span class="type">int</span> a5, __int64 a6, __int64 a7, __int64 a8, __int64 a9, __int64 a10)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memcpy</span>(shellcode, OriginCode, HookLen);              <span class="comment">//unhook</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="type">int</span> x = a1, y = a2;</span><br><span class="line">    <span class="keyword">if</span> (a5 == <span class="number">0xffffff00</span>) &#123;</span><br><span class="line">        x = r_x[times];</span><br><span class="line">        y = r_y[times];</span><br><span class="line">        a3 = r_x1[times];</span><br><span class="line">        a4 = r_y1[times];</span><br><span class="line">        times++;</span><br><span class="line">        <span class="keyword">if</span> (times == <span class="number">11</span>) &#123;</span><br><span class="line">            times = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    __int64 ret = (*(Func)shellcode)(x, y, a3, a4, a5, a6, a7, a8, a9, a10);</span><br><span class="line">    <span class="built_in">memcpy</span>(shellcode, HookCode, HookLen);               <span class="comment">//rehook</span></span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">HookShellcode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    __int64 base = <span class="built_in">GetBaseAddr</span>();</span><br><span class="line">    __int64 Ptr = base + <span class="number">0x8308</span>;</span><br><span class="line"></span><br><span class="line">    shellcode = (<span class="type">void</span>*)(*(__int64*)Ptr);</span><br><span class="line">    <span class="keyword">while</span> (!shellcode) &#123;</span><br><span class="line">        shellcode = (<span class="type">void</span>*)(*(__int64*)Ptr);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Find shellcode Fail\n&quot;</span>);</span><br><span class="line">        <span class="built_in">Sleep</span>(<span class="number">200</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;shellcode addr=%p\n&quot;</span>, shellcode);</span><br><span class="line">    <span class="built_in">memcpy</span>(OriginCode, shellcode, HookLen);              <span class="comment">//saved</span></span><br><span class="line">    Func FuncPtr = HackShellcode;</span><br><span class="line">    *(__int64*)(HookCode + <span class="number">2</span>) = (__int64)FuncPtr;       <span class="comment">//construct</span></span><br><span class="line">    <span class="built_in">memcpy</span>(shellcode, HookCode, HookLen);               <span class="comment">//hook</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL APIENTRY <span class="title">DllMain</span><span class="params">(HMODULE hModule,</span></span></span><br><span class="line"><span class="params"><span class="function">    DWORD  ul_reason_for_call,</span></span></span><br><span class="line"><span class="params"><span class="function">    LPVOID lpReserved</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (ul_reason_for_call)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> DLL_PROCESS_ATTACH:</span><br><span class="line">        <span class="built_in">AllocConsole</span>();</span><br><span class="line">        <span class="built_in">freopen</span>(<span class="string">&quot;CONOUT$&quot;</span>, <span class="string">&quot;w&quot;</span>, stdout);</span><br><span class="line">        <span class="built_in">HookShellcode</span>();</span><br><span class="line">    <span class="keyword">case</span> DLL_THREAD_ATTACH:</span><br><span class="line">    <span class="keyword">case</span> DLL_THREAD_DETACH:</span><br><span class="line">    <span class="keyword">case</span> DLL_PROCESS_DETACH:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重新生成dll文件，然后运行赛题程序（好像patch后不能ida pro调试，会注入不了，需要通过双击exe文件运行赛题程序），运行注入器程序注入，观察结果<br><img src="https://i-blog.csdnimg.cn/direct/ddad85700ab9478dbafcc8841db1abfa.png" alt="请添加图片描述"></p><p>发现有几个点可以显示了，但有些点还是不行。将位置与绘图网站上绘制出的图案进行比对，判断出可以显示的点为(50,110)（50,290,）（110,230）（230,230）。重新运行虚拟机，观察这几个点的运行逻辑与其他点有什么区别<br><img src="https://i-blog.csdnimg.cn/direct/3564d8014d8e4e5fb3933f649441351a.png" alt="请添加图片描述"></p><p>能注意到显示失败的点，相比显示成功的点，在 case5前有多进行3次case2，对stack[0]与stack[1]的值进行了交换。于是我们尝试将显示失败的点的第三个参数与第四个参数再次进行交换，使得dllmain文件中的r_x1与r_y1变为</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> r_x1[<span class="number">11</span>] = &#123; <span class="number">16258228</span>,<span class="number">1822057</span>,<span class="number">8889163</span>,<span class="number">1897472</span>,<span class="number">3743658</span>,<span class="number">966258</span>,<span class="number">463184</span>,<span class="number">13055771</span>,<span class="number">3460907</span>,<span class="number">13743405</span>,<span class="number">11759583</span> &#125;;</span><br><span class="line"><span class="type">int</span> r_y1[<span class="number">11</span>] = &#123; <span class="number">1248208</span>,<span class="number">7673289</span>,<span class="number">14227863</span>,<span class="number">15215384</span>,<span class="number">5377790</span>,<span class="number">14122466</span>,<span class="number">7898116</span>,<span class="number">12856971</span>,<span class="number">6000615</span>,<span class="number">14280177</span>,<span class="number">12856715</span> &#125;;</span><br></pre></td></tr></table></figure><p>重新生成dll文件，运行赛题程序，注入。<br><img src="https://i-blog.csdnimg.cn/direct/e89d4f2a4a0346798c310a2bce85f797.png" alt="请添加图片描述"></p><p>修改成功</p><h1 id="追加——绑定exe与dll文件"><a href="#追加——绑定exe与dll文件" class="headerlink" title="追加——绑定exe与dll文件"></a>追加——绑定exe与dll文件</h1><p>到上面其实就可以结束了，但我想加一些东西。</p><p>目前要显示黄旗，每一次运行赛题程序，都要额外运行一次注入器代码，这样还是太麻烦了，最好还是将dll文件直接与exe程序绑定，使exe程序运行时自动引入dll文件</p><p>所需工具： “CFF Explorer”</p><p>使用CFF Explorer可以给exe程序注入dll文件引用，但在注入前，我们需要修改一下dll文件，修改为</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// dllmain.cpp : 定义 DLL 应用程序的入口点。</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;pch.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;thread&gt;</span>  <span class="comment">// 包含线程库</span></span></span><br><span class="line"><span class="keyword">typedef</span> __int64 (*Func)(<span class="type">int</span> a1, <span class="type">int</span> a2, <span class="type">int</span> a3, <span class="type">int</span> a4, <span class="type">int</span> a5, __int64 a6, __int64 a7, __int64 a8, __int64 a9, __int64 a10);</span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> __declspec(dllexport) <span class="function"><span class="type">void</span> <span class="title">InitializeHook</span><span class="params">()</span></span>;  <span class="comment">// 导出函数声明</span></span><br><span class="line"><span class="function">__int64 <span class="title">GetBaseAddr</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    HMODULE hMode = <span class="built_in">GetModuleHandle</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="keyword">return</span> (__int64)hMode;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span>* shellcode = <span class="number">0</span>;</span><br><span class="line">BYTE HookCode[] = &#123;</span><br><span class="line">    <span class="number">0x48</span>,<span class="number">0xB8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,  <span class="comment">//mov rax,xxx</span></span><br><span class="line">    <span class="number">0xFF</span>,<span class="number">0xE0</span>                                           <span class="comment">//jmp rax </span></span><br><span class="line">&#125;;</span><br><span class="line">BYTE OriginCode[<span class="number">0x50</span>];</span><br><span class="line"><span class="type">size_t</span> HookLen = <span class="number">12</span>;</span><br><span class="line">__int64 times = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> r_x[<span class="number">11</span>] = &#123; <span class="number">50</span>,<span class="number">50</span>,<span class="number">50</span>,<span class="number">50</span>,<span class="number">50</span>,<span class="number">50</span>,<span class="number">110</span>,<span class="number">170</span>,<span class="number">230</span>,<span class="number">110</span>,<span class="number">170</span> &#125;;</span><br><span class="line"><span class="type">int</span> r_y[<span class="number">11</span>] = &#123; <span class="number">50</span>,<span class="number">110</span>,<span class="number">170</span>,<span class="number">230</span>,<span class="number">290</span>,<span class="number">350</span>,<span class="number">230</span>,<span class="number">230</span>,<span class="number">230</span>,<span class="number">110</span>,<span class="number">170</span> &#125;;</span><br><span class="line"><span class="type">int</span> r_x1[<span class="number">11</span>] = &#123; <span class="number">1248208</span>,<span class="number">1822057</span>,<span class="number">14227863</span>,<span class="number">15215384</span>,<span class="number">3743658</span>,<span class="number">14122466</span>,<span class="number">463184</span>,<span class="number">12856971</span>,<span class="number">3460907</span>,<span class="number">14280177</span>,<span class="number">12856715</span> &#125;;</span><br><span class="line"><span class="type">int</span> r_y1[<span class="number">11</span>] = &#123; <span class="number">16258228</span>,<span class="number">7673289</span>,<span class="number">8889163</span>,<span class="number">1897472</span>,<span class="number">5377790</span>,<span class="number">966258</span>,<span class="number">7898116</span>,<span class="number">13055771</span>,<span class="number">6000615</span>,<span class="number">13743405</span>,<span class="number">11759583</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">__int64 <span class="title">HackShellcode</span><span class="params">(<span class="type">int</span> a1, <span class="type">int</span> a2, <span class="type">int</span> a3, <span class="type">int</span> a4, <span class="type">int</span> a5, __int64 a6, __int64 a7, __int64 a8, __int64 a9, __int64 a10)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memcpy</span>(shellcode, OriginCode, HookLen);              <span class="comment">//unhook</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="type">int</span> x = a1, y = a2;</span><br><span class="line">    <span class="keyword">if</span> (a5 == <span class="number">0xffffff00</span>) &#123;</span><br><span class="line">        x = r_x[times];</span><br><span class="line">        y = r_y[times];</span><br><span class="line">        a3 = r_x1[times];</span><br><span class="line">        a4 = r_y1[times];</span><br><span class="line">        times++;</span><br><span class="line">        <span class="keyword">if</span> (times == <span class="number">11</span>) &#123;</span><br><span class="line">            times = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    __int64 ret = (*(Func)shellcode)(x, y, a3, a4, a5, a6, a7, a8, a9, a10);</span><br><span class="line">    <span class="built_in">memcpy</span>(shellcode, HookCode, HookLen);               <span class="comment">//rehook</span></span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">HookShellcode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    __int64 base = <span class="built_in">GetBaseAddr</span>();</span><br><span class="line">    __int64 Ptr = base + <span class="number">0x8308</span>;</span><br><span class="line"></span><br><span class="line">    shellcode = (<span class="type">void</span>*)(*(__int64*)Ptr);</span><br><span class="line">    <span class="keyword">while</span> (!shellcode) &#123;</span><br><span class="line">        shellcode = (<span class="type">void</span>*)(*(__int64*)Ptr);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Find shellcode Fail\n&quot;</span>);</span><br><span class="line">        <span class="built_in">Sleep</span>(<span class="number">200</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;shellcode addr=%p\n&quot;</span>, shellcode);</span><br><span class="line">    <span class="built_in">memcpy</span>(OriginCode, shellcode, HookLen); <span class="comment">// saved</span></span><br><span class="line">    Func FuncPtr = HackShellcode;</span><br><span class="line">    *(__int64*)(HookCode + <span class="number">2</span>) = (__int64)FuncPtr; <span class="comment">// construct</span></span><br><span class="line">    <span class="built_in">memcpy</span>(shellcode, HookCode, HookLen); <span class="comment">// hook</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> __declspec(dllexport) <span class="function"><span class="type">void</span> <span class="title">InitializeHook</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//HookShellcode();</span></span><br><span class="line">    std::<span class="built_in">thread</span>(HookShellcode).<span class="built_in">detach</span>(); <span class="comment">// 启动新线程查找shellcode</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL APIENTRY <span class="title">DllMain</span><span class="params">(HMODULE hModule,</span></span></span><br><span class="line"><span class="params"><span class="function">    DWORD  ul_reason_for_call,</span></span></span><br><span class="line"><span class="params"><span class="function">    LPVOID lpReserved</span></span></span><br><span class="line"><span class="params"><span class="function">)</span>   </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (ul_reason_for_call)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> DLL_PROCESS_ATTACH:</span><br><span class="line"><span class="built_in">AllocConsole</span>();</span><br><span class="line"><span class="built_in">freopen</span>(<span class="string">&quot;CONOUT$&quot;</span>, <span class="string">&quot;w&quot;</span>, stdout);</span><br><span class="line">        <span class="built_in">InitializeHook</span>();  <span class="comment">// 调用导出函数</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> DLL_THREAD_ATTACH:</span><br><span class="line">    <span class="keyword">case</span> DLL_THREAD_DETACH:</span><br><span class="line">    <span class="keyword">case</span> DLL_PROCESS_DETACH:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>修改了两个地方，一个是增加了导出函数 extern “C” __declspec(dllexport) void InitializeHook，因为有导出函数的 dll文件才能被CFF Explorer注入</p><p>另一处是将HookShellcode由case DLL_PROCESS_ATTACH里直接调用，变为InitializeHook里新开一个线程来调用，因为不另开一个线程的话，Sleep(200)将阻塞主进程，使得shellcode没办法载入，!shellcode始终为真，不断调用Sleep(200)</p><p>修改代码后重新生成dll文件，接下来就可以注入了</p><p>使用CFF Explorer打开赛题程序<br><img src="https://i-blog.csdnimg.cn/direct/38d46d8c47964c3d88669af845da1b4f.png" alt="请添加图片描述"></p><p>进入“引入添加器”项，点击添加，选中之前生成的dll文件<br><img src="https://i-blog.csdnimg.cn/direct/92211f6b46914b3cbb182e6631c110ab.png" alt="请添加图片描述"></p><p>点击引出的函数→点击按序号引入（按名称引入也可以）→点击重建引入表→点击左上角的保存图形<br><img src="https://i-blog.csdnimg.cn/direct/f490cbe987d1460f803b87bc940cb7f1.png" alt="请添加图片描述"></p><p>为了备份等各种目的，不覆盖原文件，弹窗选择否（选择了是也没关系，备份也不一定用到）<br><img src="https://i-blog.csdnimg.cn/direct/52c4b4558fcf43e7bc002c42087a0fd6.png" alt="请添加图片描述"></p><p>然后可以在保存的文件夹里看到新文件（我保存的文件名为test.exe）<br><img src="https://i-blog.csdnimg.cn/direct/dd20b26a30d548758c90e1b70db8486f.png" alt="请添加图片描述"><br>双击运行，显示缺少dll文件<br><img src="https://i-blog.csdnimg.cn/direct/d47b79f577624dd39a1ee02e2c345911.png" alt="请添加图片描述"></p><p>我们需要把dll文件复制到exe同文件夹里<br><img src="https://i-blog.csdnimg.cn/direct/03ea28c766f34888b65ec7a115930812.png" alt="请添加图片描述"></p><p>再次双击运行exe程序，显示预期结果<br><img src="https://i-blog.csdnimg.cn/direct/86484ba36a7b489d9f3836ba985123e6.png" alt="请添加图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 逆向 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 逆向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小白向—2022腾讯游戏安全初赛分析（上）</title>
      <link href="/post/pojie/2022tencentFlag1/"/>
      <url>/post/pojie/2022tencentFlag1/</url>
      
        <content type="html"><![CDATA[<h1 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h1><p><a href="https://github.com/smallzhong/gslab-2022-competition?tab=readme-ov-file">smallzhong&#x2F;gslab-2022-competition: 2022腾讯游戏安全PC初赛答案 (github.com)</a></p><p><a href="https://www.52pojie.cn/thread-1904205-1-1.html">2022腾讯游戏安全大赛复盘 - 吾爱破解 - 52pojie.cn</a></p><p><a href="https://www.52pojie.cn/thread-1952072-1-1.html">2022腾讯游戏安全PC端初赛复现 - 吾爱破解 - 52pojie.cn</a></p><h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><p>在爱破网的精华帖里看到了对2022腾讯游戏安全初赛的分析（“参考”中的第二条链接），感觉挺有意思的，但因为当时看的时候楼主是纯小白（甚至没用过ida pro），完全看不懂，就想着去学一学，试一试。学到了很多东西，觉得是一次不错的入门经历，因此记录下来，向其他小白详细地介绍整个分析以及操作的流程。</p><h1 id="小白将学到"><a href="#小白将学到" class="headerlink" title="小白将学到"></a>小白将学到</h1><ol><li><p>ida pro的基本使用。</p></li><li><p>hook的概念以及操作方式</p></li><li><p>dump的概念以及操作方式</p></li></ol><h1 id="所需前置知识"><a href="#所需前置知识" class="headerlink" title="所需前置知识"></a>所需前置知识</h1><p>c语言基础</p><h1 id="所需工具"><a href="#所需工具" class="headerlink" title="所需工具"></a>所需工具</h1><p>IDA Pro</p><p>Visual Studio</p><h1 id="赛题说明"><a href="#赛题说明" class="headerlink" title="赛题说明"></a>赛题说明</h1><p>赛题下载链接：<a href="https://gslab.qq.com/html/competition/2022/doc/PC%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%AE%89%E5%85%A8-%E5%88%9D%E8%B5%9B%E8%B5%9B%E9%A2%98.zip">https://gslab.qq.com/html/competition/2022/doc/PC%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%AE%89%E5%85%A8-%E5%88%9D%E8%B5%9B%E8%B5%9B%E9%A2%98.zip</a></p><p>这里有一个画了flag的小程序，可好像出了点问题，flag丢失了，需要把它找回来。<br>题目：</p><p><img src="https://i-blog.csdnimg.cn/direct/5579ccc6e6fd4da792d259e328a6afb3.png" alt="请添加图片描述"><br>找回flag样例：</p><p><img src="https://i-blog.csdnimg.cn/direct/6d26c5ef5b104fa0a9348ab8dcef9b62.png" alt="请添加图片描述"></p><h1 id="操作与分析"><a href="#操作与分析" class="headerlink" title="操作与分析"></a>操作与分析</h1><p>接下来正式开始。</p><h2 id="使用IDA-Pro打开赛题的exe程序"><a href="#使用IDA-Pro打开赛题的exe程序" class="headerlink" title="使用IDA Pro打开赛题的exe程序"></a>使用IDA Pro打开赛题的exe程序</h2><p>首先使用ida pro打开赛题的exe程序<br><img src="https://i-blog.csdnimg.cn/direct/b0ad43d2179b471995e13e70f92b6100.png" alt="请添加图片描述"></p><p>在弹出的文件选择窗口中选择赛题的exe程序</p><p><img src="https://i-blog.csdnimg.cn/direct/f746e510d5b74f7297d977a6e8f3005e.png" alt="请添加图片描述"><br>之后弹出的第一个窗口直接选ok，第二个选择no。</p><p><img src="https://i-blog.csdnimg.cn/direct/c5d19c08718c45c7811fed96ea4e4bf7.png" alt="请添加图片描述"><br><img src="https://i-blog.csdnimg.cn/direct/70bee4a4ad014176a5836aef25f83048.png" alt="请添加图片描述"></p><p>文件就加载完成了</p><p><img src="https://i-blog.csdnimg.cn/direct/5ea0defdbdcb4d22b1700acaf7d59c93.png" alt="请添加图片描述"></p><h2 id="静态分析"><a href="#静态分析" class="headerlink" title="静态分析"></a>静态分析</h2><p>我们的主界面初始位于IDA View-A窗口，且看到的是一个被称为graphs的界面，按下空格键可在graphs界面与hex代码界面（这只是我的称呼，官方名称我也不太清楚）切换，其中展示的是汇编代码。</p><p>IDA的左边具有一个Functions窗口，罗列了系统检索到的函数，其中具有一个名为WinMain函数，类似于C中的main函数，是整个程序的起始函数。双击WinMain，IDA会跳转到WinMain汇编代码的部分。<br><img src="https://i-blog.csdnimg.cn/direct/cac3cded0eaf467385501940ecf1a3cd.png" alt="请添加图片描述"></p><p>汇编代码很难分析，我们想要看c语言代码，按下Tab键，将跳转到WinMain函数的c代码界面，即Pseudocode-A界面。<br><img src="https://i-blog.csdnimg.cn/direct/fb4b9f99b019411ea097c8bc35179026.png" alt="请添加图片描述"></p><p>现在我们可以开始分析代码的逻辑了。查看WinMain函数中的代码，可以发现在60行以前都是赋值，在第61行开始进行逻辑功能处理<br><img src="https://i-blog.csdnimg.cn/direct/d1cadd8dd8f5406b825d7bd1d1dac0cb.png" alt="请添加图片描述"></p><p>粉紫色的函数为windows提供的官方api，且经询问ai得知与图像绘制无关<br><img src="https://i-blog.csdnimg.cn/direct/8f65368971464a1ca8ba49ad3b9b8318.png" alt="请添加图片描述"></p><p>因此推测图像处理逻辑存在于else中的sub_140001090函数，双击此函数，进入其函数实现界面，观察代码<br><img src="https://i-blog.csdnimg.cn/direct/5ab14a9c1be54e6888afda0823005595.png" alt="请添加图片描述"></p><p>从第18行开始进入逻辑处理，观察代码，每遇到一个深蓝色变量都双击观察其是否具有初始值，如byte_140008314, 双击后显示db 为 “？”, 即没有初始值，不深究<br><img src="https://i-blog.csdnimg.cn/direct/cd575b50481743baae76a90630cd81b9.png" alt="请添加图片描述"></p><p>而xmmword_140003490双击后为<br><img src="https://i-blog.csdnimg.cn/direct/206c4c1782644cae8e5423b08dd739cd.png" alt="请添加图片描述"></p><p>617574726956657461636F6C6C41775Ah，尝试转换成字符串（末尾h表示16进制，且以两个数字为单位组合，如61表示a, 具体对应关系请查看ascall码表），得到autriVetacollAwZ</p><p>由于在内存中，两个数字为一个单位，且右边的单位为高位（比如1234，我们读是一千二百三十四，但是在内存中的顺序来读，则代表三千四百一十二），因此需要将字符串倒过来为ZwAllocateVirtua</p><p>结合第29行的lMemory，构成函数ZwAllocateVirtualMemory，用于申请内存。至于为什么能结合，在第14与第15行声明时，v14与ProcName时相邻声明的，因此在内存中其位置也是相邻的，无需再手动进行拼接。</p><p>而后通过第30、31行，使procAddress指代函数ZwAllocateVirtualMemory，并于33行调用，将内存分配到v9，内存的大小为v10，v10在第27行赋值为11257i64，很大，因此推测v9并不是用来存储普通变量，而是可能存储数组或者函数，但是这个程序并没有哪一处需要用到这么大的数组（绘制点的存储也不需要这么大），因此推测v9可能用来存储函数。</p><p>接下来要盯着v9，分析分配出的内存会被用来做什么。</p><p>第44行中，将unk_140005040的数据分配到v9<br><img src="https://i-blog.csdnimg.cn/direct/a9ef1c4d8388475ea61be72f2e65d180.png" alt="请添加图片描述"></p><p>但是双击unk_140005040查看其初始值，并不能直接获取到什么有效信息<br><img src="https://i-blog.csdnimg.cn/direct/2241c2e3229c4e0692a72f7ff2a54911.png" alt="请添加图片描述"><br>我们之前推测v9可能用来存储函数，如果真的是这样，那么unk_140005040应该就是那个函数。我们按下c键，IDA将把这些数据转化为汇编码<br><img src="https://i-blog.csdnimg.cn/direct/6a7aeed35f3246738eb5af4ba45cf77f.png" alt="请添加图片描述"></p><p>14000504A及之后的代码挺像一回事的，但是前部分作为函数的话缺少几个push，我们就先回到Pseudocode-A，看看之后有没有对函数进行其他处理。</p><p>分析代码逻辑，会发现第40行将v9的值赋值给了v6，而第51-53，65-67行，有使用v6来对函数所在内存的开头部分以及其他一些点重新赋值（使用地址定位来进行的小范围赋值一般称为patch）<br><img src="https://i-blog.csdnimg.cn/direct/652f4bfd16964b678c6513f8b37fbd50.png" alt="请添加图片描述"></p><p>我们想要查看重新赋值后的函数，就要进入动态分析</p><h2 id="动态分析"><a href="#动态分析" class="headerlink" title="动态分析"></a>动态分析</h2><p>点击菜单栏的Debugger，选中Select debugger<br><img src="https://i-blog.csdnimg.cn/direct/c7d81a708bdc4c47b777cbc97a1c157c.png" alt="请添加图片描述"></p><p>在弹出的窗口中选择Local Windows debugger，点击OK<br><img src="https://i-blog.csdnimg.cn/direct/7c85121b9f8549dc86eac84feb3a0d89.png" alt="请添加图片描述"></p><p>这样我们就设置好了调试器，接下来就是打断点</p><p>由于我们希望看到patch后的函数，因此直接在patch后的下一条指令打下断点即可<br><img src="https://i-blog.csdnimg.cn/direct/950216d8fb8146968c1b49fb7c3ac27a.png" alt="请添加图片描述"></p><p>再次点击菜单栏的Debugger, 会发现展开内容变化了，选择Start process，即开始调试。弹出的窗口全点yes或ok。<br><img src="https://i-blog.csdnimg.cn/direct/c41a57a608bd4d89ab51e8c0363f93e9.png" alt="请添加图片描述"></p><p>代码会停止在下断点处</p><p>这时我们就可以查看patch后的代码，查看方式为</p><p>鼠标悬浮在v6上，查看v6的值<br><img src="https://i-blog.csdnimg.cn/direct/437df4f645b143d19aa36161f40ecd1b.png" alt="请添加图片描述"></p><p>我们就得到了v6的值为0x17DD94E0000（不固定，每一次调试的具体值都可能不同），也就是说0x17DD94E0000指向代码的开始</p><p>按下g键，弹出地址跳转窗口，输入v6的值，点击ok。<br><img src="https://i-blog.csdnimg.cn/direct/1e511b8f455f403e97a320afd40fa2c5.png" alt="请添加图片描述"></p><p>跳转到新界面后按下c键，将数据转化为汇编代码<br><img src="https://i-blog.csdnimg.cn/direct/9906b5561df74b8f8a7700e41e14f31f.png" alt="请添加图片描述"></p><p>可以看到之前的nop都变成具体的代码了。想要看这些汇编代码对于的c语言代码，则右键函数的起始位置，即17DD94E0000 ，在菜单中选择create function<br><img src="https://i-blog.csdnimg.cn/direct/cdb3d11a50e0404e91e389e2c8e81017.png" alt="请添加图片描述"></p><p>点击后可以注意到代码再次产生了变化<br><img src="https://i-blog.csdnimg.cn/direct/32a9405b44824bfc96d2c76a75e3b227.png" alt="请添加图片描述"></p><p>这时选中函数名，按下tab键，就将跳转到c语言代码界面。<br><img src="https://i-blog.csdnimg.cn/direct/b8526c503dd74681bc7f82e80870aef7.png" alt="请添加图片描述"></p><p>这段代码有一些赋值以及看不明白的函数调用，搞不清楚，于是先回到winMain里的那个名为sub_140001090的函数。按下窗口左上角的左向箭头，返回上一个界面<br><img src="https://i-blog.csdnimg.cn/direct/bec6d39c71dd4521b812a8fa4072456c.png" alt="请添加图片描述"></p><p>回到sub_140001090，重新梳理程序逻辑，发现第一次调用v6指向的函数为第64行（__fastcall*即意为将之后的内存作为函数调用），会发现这里并不是调用v6的起始位置，而是还有一个1616（十进制，有0x前缀才为16进制）的偏移<br><img src="https://i-blog.csdnimg.cn/direct/fa1a017d42ff48a38f3eabf09fde0f00.png" alt="请添加图片描述"></p><p>这意味着v6指向的一大段内存中可能不止一个函数，因此我们再次按下g键，看一看v6偏移1616的函数。1616转为十六进制为0x650，因此函数的地址为：v6+650，以我这次运行的v6&#x3D;0x17DD94E0000，加上0x650的偏移，就是 0x17DD94E0650。</p><p>按下g键，输入地址，按下c键，转化为汇编码，右键函数起始，create function，选中函数名，按下tab，以操作0x17DD94E0000的步骤，操作0x17DD94E0650，查看其c语言代码<br><img src="https://i-blog.csdnimg.cn/direct/f8927424e0924d3c9eec92976ea440e0.png" alt="请添加图片描述"></p><p>结果还是莫名其妙的赋值以及函数调用</p><p>但在第111行的字符串中，看到了position，有看到了color，由此推测图像绘制的核心代码大概就存在于v6指向的那一大块代码里。<br><img src="https://i-blog.csdnimg.cn/direct/9fa57b2606764a00a7f4caee64e8fe99.png" alt="请添加图片描述"></p><p>由于sub_140001090中只有一处有调用v6内存中的函数——v6+650，因此对绘制图像的处理大概率存在于v6+650或是从v6+650中跳转。具体逻辑分析起来太过于繁杂，我们先看深蓝色的变量</p><p>前几个是对变量进行操作，由于操作的变量意义不明，因此这几步也看不出来什么<br><img src="https://i-blog.csdnimg.cn/direct/a0f470afbd324ddebc15189f661a2053.png" alt="请添加图片描述"></p><p>但在第249行可以注意到有调用一个函数，且地址为v6+0x420（函数默认名称去除前缀就是函数地址），这意味着v6+0x420处也存在一个函数，并且会在v6+0x650中进行调用。<br><img src="https://i-blog.csdnimg.cn/direct/63a788eeb43f48359aa742bfc76eb4e5.png" alt="请添加图片描述"></p><p>那我们就再看一看v6+0x420处的代码：按下g键，输入地址，按下c键，转化成汇编码，右键首行,create function；选中函数名，按下tab键查看c代码<br><img src="https://i-blog.csdnimg.cn/direct/6234ad357e3545349ba540f88bae02be.png" alt="请添加图片描述"></p><p>终于是一段能看明白结构的while + switch代码，这种结构被其他博主称作虚拟机结构。</p><p>看一下各个case，0,1,2,3,4都是做了些意义不明的运算，5,6调用了同一个函数，函数地址是v6+0，且只有第五个参数不同。为了之后遇到的时候更好辨认这个函数，我们给v6+0起一个名字。</p><p>右键单击函数，在菜单中选择Rename global item<br><img src="https://i-blog.csdnimg.cn/direct/1d4a43710a73448fab25fe7811c5f76d.png" alt="请添加图片描述"></p><p>我将其命名为shellCode0，点击ok。其他的可以同理命名为shellCode420，shellCode650。<br><img src="https://i-blog.csdnimg.cn/direct/abae6d122412433fa7f1f0d004a80fb4.png" alt="请添加图片描述"></p><p>重命名后，函数就好辨认多了<br><img src="https://i-blog.csdnimg.cn/direct/c051be0bff6f46caae861e08cb1198d6.png" alt="请添加图片描述"><br>shellCode0里只有第五个参数不同，因此想研究一下第五个参数的意义</p><p>鼠标悬浮在第五个参数时，会显示invsign，通过询问ai，得知invsign是倒数的意思，因此先把他从倒数转化会普通值（我这里莫名奇妙突然显示起了函数以及参数的类型，我也不太清楚是按到了哪个键，不过不影响之后的过程）<br><img src="https://i-blog.csdnimg.cn/direct/87ca6ee5ad0d4ade92db23055e9ae161.png" alt="请添加图片描述"></p><p>右键-256，在菜单中选择Hexadecimal，将其为普通值，同理转化case6的13771801<br><img src="https://i-blog.csdnimg.cn/direct/0d88b543190a4e49bbcceabb12115c0d.png" alt="请添加图片描述"></p><p>分别得到0xFFFFFF00，以及0xFF0DDBE7<br><img src="https://i-blog.csdnimg.cn/direct/7d5c3c6cea3c4740a2feeca0d92617bb.png" alt="请添加图片描述"></p><p>很像是16进制的颜色代码，因此在取色表看一下，发现真的是题目绘制需要的两种颜色，前置的两个ff应该是占位。既然shellcode0需要用到颜色，因此推测shellcode0即为绘制代码。<br><img src="https://i-blog.csdnimg.cn/direct/de51a7739a3648438e19e2fa0e336942.png" alt="请添加图片描述"></p><p>但shecode0我们只知道第五个参数的含义（颜色），其他参数连具体值都不知道，因此我们尝试获取每一次调取shellcode0时的各个参数。</p><h2 id="hook"><a href="#hook" class="headerlink" title="hook"></a>hook</h2><p>我们将使用hook技术获取到每一次调取shellcode0时的十个参数。</p><p>hook技术分为几种，这里使用inline hook，我学习inline hook技术的文章有：</p><p><a href="https://zhuanlan.zhihu.com/p/459912527">InlineHook &amp; 原理与实现 - 知乎 (zhihu.com)</a></p><p><a href="https://www.cnblogs.com/northeast-coder/p/15782665.html">万字长文！inlinehook看这一篇足矣！ - 东北码农 - 博客园 (cnblogs.com)</a></p><p>hook的细节请查看这两篇文章学习，这里只是结合赛题简单讲一讲hook</p><p>简单来说hook就是将函数的开头代码修改为一段跳转代码，跳转到一个自定义的函数。比如我们现在想要获取到每一次调取shellcode0时的十个参数，就将函数的开头修改为跳转到一个自定义的print函数，将参数全部打印输出。</p><p>hook一般需要两个东西，一个是自己编写的dll文件，用于实现修改函数开头，以及实现自定义函数；还有一个被称为注入器，用于将dll文件注入到进程中。</p><p>首先是注入器的代码，思路就是查看是否有名为”2022游戏安全技术竞赛初赛.exe”的进程，如果有，则使用windows提供的api注入最后一句代码路径中的dll文件。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注入器代码</span></span><br><span class="line">#include&lt;windows.<span class="property">h</span>&gt;</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;time.<span class="property">h</span>&gt;</span><br><span class="line">#include&lt;stdlib.<span class="property">h</span>&gt;</span><br><span class="line">#include&lt;<span class="title class_">TlHelp32</span>.<span class="property">h</span>&gt;</span><br><span class="line">#define <span class="variable constant_">EXEFILEW</span> L<span class="string">&quot;2022游戏安全技术竞赛初赛.exe&quot;</span></span><br><span class="line">#define <span class="variable constant_">EXEFILE</span> <span class="string">&quot;2022游戏安全技术竞赛初赛.exe&quot;</span></span><br><span class="line"><span class="variable constant_">DWORD</span> old;</span><br><span class="line"><span class="variable constant_">SIZE_T</span> written;</span><br><span class="line"><span class="variable constant_">DWORD</span> <span class="title class_">FindProcess</span>() &#123;</span><br><span class="line">    <span class="variable constant_">HANDLE</span> hSnap = <span class="title class_">CreateToolhelp32Snapshot</span>(<span class="title class_">TH32CS</span>_SNAPPROCESS, <span class="number">0</span>);</span><br><span class="line">    <span class="title class_">PROCESSENTRY32</span> pe32;</span><br><span class="line">    pe32 = &#123; <span class="title function_">sizeof</span>(pe32) &#125;;</span><br><span class="line">    <span class="variable constant_">BOOL</span> ret = <span class="title class_">Process32First</span>(hSnap, &amp;pe32);</span><br><span class="line">    <span class="keyword">while</span> (ret)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_">wcsncmp</span>(pe32.<span class="property">szExeFile</span>, <span class="variable constant_">EXEFILEW</span>, <span class="title function_">lstrlen</span>(<span class="variable constant_">EXEFILEW</span>))) &#123;</span><br><span class="line">            <span class="title function_">printf</span>(<span class="string">&quot;找到程序 %s ,PID=%d\n&quot;</span>, <span class="variable constant_">EXEFILE</span>, pe32.<span class="property">th32ProcessID</span>);</span><br><span class="line">            <span class="keyword">return</span> pe32.<span class="property">th32ProcessID</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ret = <span class="title class_">Process32Next</span>(hSnap, &amp;pe32);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> <span class="title class_">InjectModule</span>(<span class="variable constant_">DWORD</span> <span class="title class_">ProcessId</span>, <span class="keyword">const</span> char* szPath)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable constant_">HANDLE</span> hProcess = <span class="title class_">OpenProcess</span>(<span class="variable constant_">PROCESS_ALL_ACCESS</span>, <span class="variable constant_">FALSE</span>, <span class="title class_">ProcessId</span>);</span><br><span class="line">    <span class="title function_">printf</span>(<span class="string">&quot;进程句柄:%p\n&quot;</span>, hProcess);</span><br><span class="line">    <span class="variable constant_">LPVOID</span> lpAddress = <span class="title class_">VirtualAllocEx</span>(hProcess, <span class="variable constant_">NULL</span>, <span class="number">0x100</span>, <span class="variable constant_">MEM_COMMIT</span> | <span class="variable constant_">MEM_RESERVE</span>, <span class="variable constant_">PAGE_READWRITE</span>);</span><br><span class="line">    <span class="variable constant_">SIZE_T</span> dwWriteLength = <span class="number">0</span>;</span><br><span class="line">    <span class="title class_">WriteProcessMemory</span>(hProcess, lpAddress, szPath, <span class="title function_">strlen</span>(szPath), &amp;dwWriteLength);</span><br><span class="line">    <span class="variable constant_">HANDLE</span> hThread = <span class="title class_">CreateRemoteThread</span>(hProcess, <span class="variable constant_">NULL</span>, <span class="variable constant_">NULL</span>, (<span class="variable constant_">LPTHREAD_START_ROUTINE</span>)<span class="title class_">LoadLibraryA</span>, lpAddress, <span class="variable constant_">NULL</span>, <span class="variable constant_">NULL</span>);</span><br><span class="line">    <span class="title class_">WaitForSingleObject</span>(hThread, -<span class="number">1</span>);</span><br><span class="line">    <span class="title class_">VirtualFreeEx</span>(hProcess, lpAddress, <span class="number">0</span>, <span class="variable constant_">MEM_RELEASE</span>);</span><br><span class="line">    <span class="title class_">CloseHandle</span>(hProcess);</span><br><span class="line">    <span class="title class_">CloseHandle</span>(hThread);</span><br><span class="line">&#125;</span><br><span class="line">int <span class="title function_">main</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable constant_">DWORD</span> <span class="title class_">ProcessId</span> = <span class="title class_">FindProcess</span>();</span><br><span class="line">    <span class="keyword">while</span> (!<span class="title class_">ProcessId</span>) &#123;</span><br><span class="line">        <span class="title function_">printf</span>(<span class="string">&quot;未找到%s程序，等待两秒中再试\n&quot;</span>, <span class="variable constant_">EXEFILE</span>);</span><br><span class="line">        <span class="title class_">Sleep</span>(<span class="number">2000</span>);</span><br><span class="line">        <span class="title class_">ProcessId</span> = <span class="title class_">FindProcess</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title class_">InjectModule</span>(<span class="title class_">ProcessId</span>, <span class="string">&quot;C:\\ZencyData\\CODE\\C_plus_plus\\injectionDll\\x64\\Debug\\injectionDll.dll&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后是 dll文件，首先打开visual studio，创建一个dll新项目</p><p><img src="https://i-blog.csdnimg.cn/direct/e671a1643fac43c189374578aab4e52e.png" alt="请添加图片描述"></p><p>将新项目的dllmain.cpp文件中的代码修改为</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// dllmain.cpp : 定义 DLL 应用程序的入口点。</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;pch.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> __int64 (*Func)(<span class="type">int</span> a1, <span class="type">int</span> a2, <span class="type">int</span> a3, <span class="type">int</span> a4, <span class="type">int</span> a5, __int64 a6, __int64 a7, __int64 a8, __int64 a9, __int64 a10);</span><br><span class="line"><span class="function">__int64 <span class="title">GetBaseAddr</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    HMODULE hMode = <span class="built_in">GetModuleHandle</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="keyword">return</span> (__int64)hMode;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span>* shellcode = <span class="number">0</span>;</span><br><span class="line">BYTE HookCode[] = &#123; <span class="comment">//目标将开头修改成HookCode</span></span><br><span class="line">    <span class="number">0x48</span>,<span class="number">0xB8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,  <span class="comment">//mov rax,xxx</span></span><br><span class="line">    <span class="number">0xFF</span>,<span class="number">0xE0</span>                                           <span class="comment">//jmp rax </span></span><br><span class="line">&#125;;</span><br><span class="line">BYTE OriginCode[<span class="number">0x50</span>]; <span class="comment">//存储修改前的开头</span></span><br><span class="line"><span class="type">size_t</span> HookLen = <span class="number">12</span>;  <span class="comment">// 修改内存大小为100</span></span><br><span class="line">__int64 times = <span class="number">100</span>;  <span class="comment">//只输出100次hook结果</span></span><br><span class="line"><span class="function">__int64 <span class="title">HackShellcode</span><span class="params">(<span class="type">int</span> a1, <span class="type">int</span> a2, <span class="type">int</span> a3, <span class="type">int</span> a4, <span class="type">int</span> a5, __int64 a6, __int64 a7, __int64 a8, __int64 a9, __int64 a10)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memcpy</span>(shellcode, OriginCode,HookLen);              <span class="comment">//将开头恢复成原来的样子</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="type">int</span> x = a1, y = a2;</span><br><span class="line">    __int64 ret=(*(Func)shellcode)(x, y, a3, a4, a5, a6, a7, a8, a9, a10); <span class="comment">//</span></span><br><span class="line">    times--;</span><br><span class="line">    <span class="keyword">if</span> (times&gt;<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;call shellcode(%d,%d,%d,%d,%d,%p,%p,%p,%p,%p)\n&quot;</span>,x, y, a3, a4, a5, a6, a7, a8, a9, a10);          </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memcpy</span>(shellcode, HookCode, HookLen);               <span class="comment">//将开头修改为跳转到自定义函数</span></span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">HookShellcode</span><span class="params">()</span> </span>&#123; <span class="comment">// 第一次hook代码</span></span><br><span class="line">    __int64 base = <span class="built_in">GetBaseAddr</span>(); <span class="comment">//程序基地址</span></span><br><span class="line">    __int64 Ptr = base + <span class="number">0x8308</span>; <span class="comment">//指针的地址为程序地址 + 0x8308</span></span><br><span class="line"></span><br><span class="line">    shellcode = (<span class="type">void</span>*)(*(__int64*)Ptr); <span class="comment">//获取shellcode0代码起始地址</span></span><br><span class="line">    <span class="keyword">while</span> (!shellcode) &#123; <span class="comment">//上一步获取失败，间隔0.2秒后再次尝试</span></span><br><span class="line">        shellcode = (<span class="type">void</span>*)(*(__int64*)Ptr);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Find shellcode Fail\n&quot;</span>);</span><br><span class="line">        <span class="built_in">Sleep</span>(<span class="number">200</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;shellcode addr=%p\n&quot;</span>, shellcode); <span class="comment">//输出shellcode0代码起始地址</span></span><br><span class="line">    <span class="built_in">memcpy</span>(OriginCode, shellcode,HookLen);              <span class="comment">//存储原本起始地址</span></span><br><span class="line">    Func FuncPtr = HackShellcode;                <span class="comment">//获取自定义函数地址</span></span><br><span class="line">    *(__int64*)(HookCode + <span class="number">2</span>) = (__int64)FuncPtr;    <span class="comment">//将HookCode跳转到的地址改为自定义函数地址</span></span><br><span class="line">    <span class="built_in">memcpy</span>(shellcode, HookCode, HookLen);               <span class="comment">//将原本函数开头修改为跳转指令</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL APIENTRY <span class="title">DllMain</span><span class="params">( HMODULE hModule,</span></span></span><br><span class="line"><span class="params"><span class="function">                      DWORD  ul_reason_for_call,</span></span></span><br><span class="line"><span class="params"><span class="function">                      LPVOID lpReserved</span></span></span><br><span class="line"><span class="params"><span class="function">                     )</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//dll文件的main函数</span></span><br><span class="line">    <span class="keyword">switch</span> (ul_reason_for_call)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> DLL_PROCESS_ATTACH:<span class="comment">//dll文件被注入时调用</span></span><br><span class="line">            <span class="built_in">AllocConsole</span>();<span class="comment">//启动一个控制台</span></span><br><span class="line">            <span class="built_in">freopen</span>(<span class="string">&quot;CONOUT$&quot;</span>, <span class="string">&quot;w&quot;</span>, stdout);<span class="comment">//设置输出</span></span><br><span class="line">            <span class="built_in">HookShellcode</span>();<span class="comment">//进行第一次hook</span></span><br><span class="line">        <span class="keyword">case</span> DLL_THREAD_ATTACH:</span><br><span class="line">        <span class="keyword">case</span> DLL_THREAD_DETACH:</span><br><span class="line">        <span class="keyword">case</span> DLL_PROCESS_DETACH:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>整个dll文件的逻辑也比较清晰，就是将shellcode0的开头修改成一个跳转指令，跳转到HackShellcode函数；然后在HackShellcode中print输出参数，并且将开头恢复为修改前的状态，重新调用一次shellcode0，完成shellcode0原本需要完成的功能；调用完成后，再将开头修改为跳转，以输出shellcode0的下一次调用。</p><p>这里主要解释HookShellcode函数第二行的0x8308是怎么来的。</p><p>hook时，我们需要知道函数的地址。在我们重命名前，shellcode0我们称为v6+0，因为它的地址是v6偏移量为0的地址。所以我们需要去看v6的值。</p><p>按下窗口左上角 左向箭头旁边的扩展力，点击倒数第三个选项（具体名称大概不一样，但是地址以1090结尾），我们就能跳转回v6出现的那个界面<br><img src="https://i-blog.csdnimg.cn/direct/e06339bfe7c84d4dbaa3aeed78274678.png" alt="请添加图片描述"></p><p>我们发现，在给v6赋值的时候，还将v9的值赋值给了一个全局变量qword_7FF60D008308，这意味着qword_7FF60D008308的值即为v6，即v9，也即shellcode0的地址，而qword_7FF60D008308的地址为0x7FF60D008308，根据右边第二个窗口中可以看到，此程序的基地址为0x7FF6D000000（不一定一样，甚至每次调试都可能变化），也就是qword_7FF60D008308的地址为基地址+0x8308，因此在dll文件中，通过基地址+8308可以获取到qword_7FF60D008308的值，然后这个值就是shellcode的地址。<br><img src="https://i-blog.csdnimg.cn/direct/c5f7d4eb04c64e988496cad8251cf84f.png" alt="请添加图片描述"></p><p>接下来我们就生成dll文件。</p><p>生成之前，还需要加在pch.cpp中增加一句宏定义代码，取消visual studio的默认安全模式</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;pch.h&quot;</span></span></span><br></pre></td></tr></table></figure><p><img src="https://i-blog.csdnimg.cn/direct/86d7c8514c61419d81b501eceb15e7d4.png" alt="请添加图片描述"></p><p>鼠标右击项目名，菜单中点击“生成”<br><img src="https://i-blog.csdnimg.cn/direct/a7ea8dae3b9842e296b1ef0b4ee0e210.png" alt="请添加图片描述"></p><p>dll文件就生成了，生成路径就在窗口底部的输出中。<br><img src="https://i-blog.csdnimg.cn/direct/b510290e21964140989eabd43a1f7814.png" alt="请添加图片描述"></p><p>接下来准备运行注入器，vs新建一个控制台项目，并将主文件的代码修改为之前给出的注入器代码（要修改末尾的dll文件路径）。</p><p>运行注入器代码（请确定此时ida pro还在调试），弹出命令行窗口显示找到句柄后，再点击 ida pro这个运行按钮，跳过打下的断点。<br><img src="https://i-blog.csdnimg.cn/direct/530bf6aa8f934d20baa8b5d5b95841ab.png" alt="请添加图片描述"><br>在弹出的窗口中可以看到100次调用shellcode0时使用的参数，并且可以看到箭头指向的两个地方参数是开始重复的。也就是说绘图不只调用一次。<br><img src="https://i-blog.csdnimg.cn/direct/83147a0612e74fe58662b7fab4dc7127.png" alt="请添加图片描述"></p><p>但是注意到赛题程序界面是一片白<br><img src="https://i-blog.csdnimg.cn/direct/ef4b52520fe34cb2a6ef1408b063ceef.png" alt="请添加图片描述"></p><p>不知道是不是hook出问题了，于是不调试，直接在文件夹中打开赛题程序，然后发现程序是显示绘制的图像大概4秒，就会清空，然后显示一片白，由此看出不是hook的问题，大概只是4秒过了。</p><p>通过hook的结果可以看到，参数不重复的调用一共有42次，而赛题目标的图案中正好有42个点，且第五个参数为-256的有11个点，为-13771801的有31个点，与赛题目标黄蓝点的数量也相同，由此更加确认shellcode就是绘制图像的函数。</p><p>然后观察参数，我们已知第五个是颜色，后五个参数每次调用都相同，那应该就是前4个参数控制位置。前两个参数的格式像是x,y坐标，于是尝试将其视为坐标进行绘制，由于蓝色图案的显示是正常的，因此尝试将x,y理解为坐标，绘制蓝色图案<br><img src="https://i-blog.csdnimg.cn/direct/5fb74ce882c648fdb30de0b2e6ca2c08.png" alt="请添加图片描述"><br>发现是赛题中给出图案的上下翻转。由此确定前两个参数确实为坐标，而黄色图案的前两个参数中存在负数，可能这就是无法显示的原因，具体分析请见下期教程</p>]]></content>
      
      
      <categories>
          
          <category> 逆向 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 逆向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>逆向微信-实现微信多开</title>
      <link href="/post/pojie/mutilWechat/"/>
      <url>/post/pojie/mutilWechat/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在吾爱破解网上看到一个小白向的微信逆向过程，之前一直对逆向有点兴趣，因此跟着教程实操了一次，在此记录一下。</p></blockquote><h1 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h1><p>x64dbg</p><p>微信3.9.10.27 （不同版本的具体操作存在一定区别，但大致思路相同）</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.52pojie.cn/thread-1951224-1-1.html">https://www.52pojie.cn/thread-1951224-1-1.html</a></p><h1 id="具体过程"><a href="#具体过程" class="headerlink" title="具体过程"></a>具体过程</h1><h2 id="1-找到一个切入点"><a href="#1-找到一个切入点" class="headerlink" title="1. 找到一个切入点"></a>1. 找到一个切入点</h2><p>参考博客中，博主先调查出Windows下微信实现多开限制的方式——调用Windows的CreateMutex api来构建一个互斥体，之后便是通过追踪CreateMutex函数来打下第一个断点。</p><h2 id="2-基于切入点分析"><a href="#2-基于切入点分析" class="headerlink" title="2.基于切入点分析"></a>2.基于切入点分析</h2><ol><li>打开微信，不用登陆</li><li>打开xdbg64,  附加微信</li></ol><p><img src="https://i-blog.csdnimg.cn/direct/fb9a088139af4900b9f7fe7be809b748.png" alt="Untitled"></p><ol start="3"><li><p>先搜索wechat 选择 “附加”</p><p> <img src="https://i-blog.csdnimg.cn/direct/122a47f23e114151ab4e7cae1f89e5c8.png" alt="Untitled"></p><p> 附加后，x64dbg就可以对微信进行调试</p></li><li><p>重新打开微信，无需登陆。这一步是为了使得之后x64dbg所操作的微信会进入多开限制相关的代码段中</p></li><li><p>选择断点页面, 删除所有默认断点</p><p> <img src="https://i-blog.csdnimg.cn/direct/c9cae9c876e445679d7c0fa25774d42f.png" alt="Untitled"></p></li><li><p>选择cpu页面 CTRL + G 跳转搜索函数CreateMutex，有四个结果</p><p> <img src="https://i-blog.csdnimg.cn/direct/d051922432714ac0a573f9dc7c95613e.png" alt="Untitled"></p></li><li><p>一个一个选择，并跳转到对应位置后，发现来源于同一处，都打一个断点</p><p> <img src="https://i-blog.csdnimg.cn/direct/8910ba99b82440989d58bf61d9e59324.png" alt="Untitled"></p></li><li><p>先点击循环箭头重启调试微信</p><p> <img src="https://i-blog.csdnimg.cn/direct/0cf3dca55ae9491ab75ee2e8cdbb574e.png" alt="Untitled"></p></li><li><p>多次点击运行或者按快捷键F9，直到到达我们设定断点处。（之所以按多次，是因为在运行过程中，会自动创建一些断点）</p><p> <img src="https://i-blog.csdnimg.cn/direct/5a9b57bcdf404e0db37bfe8c14009a4b.png" alt="Untitled"></p><p> 到达设定的断点处</p><p> <img src="https://i-blog.csdnimg.cn/direct/d54849cc97e54e769f7f59cbc7bc5709.png" alt="Untitled"></p><p> 可以看到，是直接停在第四个红点处，这意味着微信调用的是CreateMutexW接口，而没有用另外三个。</p></li><li><p>接下来开始按F8, 一步一步执行程序，直到出现多开限制导致的现象——即第4步中打开的微信窗口被唤起</p><p><img src="https://i-blog.csdnimg.cn/direct/ee4ca5ee9ef547d2b2abfa14a9c42b43.png" alt="Untitled"></p><p>执行到图中标记的这一句时（该行右侧的“打开窗口”为我自己注释所得，并非原来就有），右边的微信窗口自动唤起，此时我们就能确定多开限制相关的代码段的大致范围，从 CreateMutexW 所在的代码行，到窗口被唤起时，所执行到的代码行。</p></li><li><p>接下来要收缩代码范围，根据模块进行收缩</p><p>窗口的左上角会显示模块的名称，如微信窗口被唤起时，所在的模块为wechatwin.dll</p><p><img src="https://i-blog.csdnimg.cn/direct/453b913b81e442d99fe8fa308bfe5981.png" alt="Untitled"></p><p>而根据之前的图，CreateMutex断点所在模块为kernel32.dll, 在执行过程中，还加载过名为ntdll.dll等的其他模块，kernel32.dll与ntdll.dll模块等是系统模块（判断的方式请见第15步），不应该进行修改，否则可能会影响到其他软件甚至系统的使用，而wechatwin.dll是只有微信用的模块（判断的方式请见第15步），修改时无需担心影响到其他软件。因此我们需要重新执行一次8、9、10步，实时观察所在模块，找到第一次进入到wechatwin.dll是在哪一行，给该行加入注释，如下图</p><p><img src="https://i-blog.csdnimg.cn/direct/9d0a3a85ba494c17ba61319b923c06e4.png" alt="Untitled"></p><p>可以看到，我们将范围缩短到了32行。</p></li><li><p>接下来就按F8逐步执行这个范围里的语句，并打注释记录条件跳转语句（je与jne）是否进行了跳转，如图，其中，“有不跳”意味着：在已经有一个微信窗口的情况下，该语句不会进行跳转</p><p><img src="https://i-blog.csdnimg.cn/direct/6cf529780f5e4a1494ccc609628a0ccf.png" alt="Untitled"></p></li><li><p>关闭第4步中打开的微信窗口，则之后x64dbg所启动的微信就不会进入导致多开限制相关的代码段，重新测试第9步范围内的条件跳转语句，并进行标注。其中，“无不跳”意为：“在无其他微信窗口的情况下，该语句不会进行跳转”，“无跳”意为：“在无其他微信窗口的情况下，该语句会进行跳转”</p><p><img src="https://i-blog.csdnimg.cn/direct/4d27f890d29544c8921e1ebc6b2ec7cd.png" alt="Untitled"></p><p>在第二个条件跳转语句，“已有微信窗口”与“无其他微信窗口”的行为就有了区分；但无法排除剩下两个跳转语句会产生影响的可能性，因此对剩下的两个跳转语句打上断点，不断按“F9”，观察在微信窗口出现之前，这两个断点是否会激活。</p><p><img src="https://i-blog.csdnimg.cn/direct/dfa7802ce2e94418a0e75c3db9601c9e.png" alt="Untitled"></p><p>在该过程中，断点并未激活，因此可以排除剩下两个条件跳转语句对结果会起影响的可能性。</p></li><li><p>修改跳转条件，将jne修改为jmp</p><p><img src="https://i-blog.csdnimg.cn/direct/f948ab5c32674bb68910a1f9ea062168.png" alt="Untitled"></p><p><img src="https://i-blog.csdnimg.cn/direct/87351e9f98d4480fba537cc991876a8f.png" alt="Untitled"></p></li><li><p>构建补丁</p><p><img src="https://i-blog.csdnimg.cn/direct/c64d925b2cfc4d3bb0c20f2f027aaa64.png" alt="Untitled"></p><p><img src="https://i-blog.csdnimg.cn/direct/2bea24d730704c9290a5c24e82d4ae0d.png" alt="Untitled"></p><p><img src="https://i-blog.csdnimg.cn/direct/28551ea2b27146fb91e455349e496e07.png" alt="Untitled"></p><p>点击修补文件后，弹出的文件管理器所在的路径即为当前模块所在的路径，可以根据该路径判断模块是系统模块还是单个应用的模块。将文件名设置为 模块名+New.dll，进行保存。</p></li><li><p>备份源文件，启用补丁</p><p>打开文件管理器，进入文件保存路径，将原来的模块（即WeChatWin.dll）命名为WeChatWin.dll.bak, 用于出问题时软件恢复，再将我们保存的文件（即WeChatWinNew.dll）命名为WeChatWin.dll。</p></li><li><p>重启微信，可以进行多开，预期目标完成</p><p><img src="https://i-blog.csdnimg.cn/direct/f539f5a34e814f518ae19294ad5dce04.png" alt="Untitled"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 逆向 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
            <tag> 破解 </tag>
            
            <tag> 逆向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于MCTS的黑白棋ai</title>
      <link href="/post/other/Othello/"/>
      <url>/post/other/Othello/</url>
      
        <content type="html"><![CDATA[<blockquote><p>人工智能课程最近布置了这样的一份作业，完成后把注释还算详细的代码分享出来，供大家借鉴参考。如果你也是左职钟老师的学生，为保证完成地不过于相似，还请结合自己的理解进行修改。欢迎大家来捉虫</p></blockquote><p>参考文章：<a href="https://blog.csdn.net/weixin_45807161/article/details/122452952">python使用蒙特卡洛树(MCTS)算法实现黑白棋miniAlphaGo for Reversi_黑白棋(mini alphago) 1 实验介绍 1.1 实验背景 黑白棋 (reversi),也叫-CSDN博客</a></p><h1 id="1-实验内容与要求"><a href="#1-实验内容与要求" class="headerlink" title="1.实验内容与要求"></a>1.实验内容与要求</h1><h2 id="1-1-实验内容"><a href="#1-1-实验内容" class="headerlink" title="1.1 实验内容"></a><strong>1.1 实验内容</strong></h2><p>黑白棋(Reversi)，也叫苹果棋，翻转棋，是一个经典的策略性游戏。一般棋子双面为黑白两色，故称“黑白棋”。因为行棋之时将对方棋子翻转，变为己方棋子，故又称“翻转棋”(Reversi)。棋子双面为红、绿色的称为“苹果棋”。它使用8x8的棋盘,由两人执黑子和白子轮流下棋，最后子多方为胜方。随着网络的普及，黑白棋作为一种最适合在网上玩的棋类游戏正在逐渐流行起来。中国主要的黑白棋游戏站点有Yahoo游戏、中国游戏网、联众游戏等。</p><p><strong>游戏规则</strong>：</p><p>棋局开始时黑棋位于e4和d5，白棋位于d4和e5。</p><ol><li><p>黑方先行，双方交替下棋。</p></li><li><p>一步合法的棋步包括：在一个空格新落下一个棋子，并且翻转对手一个或多个棋子。</p></li><li><p>新落下的棋子与棋盘上已有的同色棋子间，对方被夹住的所有棋子都要翻转过来。可以是横着夹，竖着夹，或是斜着夹。夹住的位置上必须全部是对手的棋子，不能有空格。</p></li><li><p>一步棋可以在数个（横向，纵向，对角线）方向上翻棋，任何被夹住的棋子都必须被翻转过来，棋手无权选择不去翻某个棋子。</p></li><li><p>除非至少翻转了对手的一个棋子，否则就不能落子。如果一方没有合法棋步，也就是说不管他下到哪里，都不能至少翻转对手的一个棋子，那他这一轮只能弃权，而由他的对手继续落子直到他有合法棋步可下。</p></li><li><p>如果一方至少有一步合法棋步可下，他就必须落子，不得弃权。</p></li><li><p>棋局持续下去，直到棋盘填满或者双方都无合法棋步可下。</p></li><li><p>如果某一方落子时间超过1分钟，则判该方失败。</p></li></ol><h2 id="1-2-实验要求"><a href="#1-2-实验要求" class="headerlink" title="1.2. 实验要求"></a><strong>1.2.</strong> <strong>实验要求</strong></h2><ol><li>a)使用MCTS算法实现Mini AlphaGo for Reversi, 有能力的同学可以采用最大最小算法进行对比.</li><li>b)MCTS算法部分需要自己实现，尽量不使用现成的包，工具或者接口.实验报告不能直接复制、粘贴网上内容，请理清思路，转化为自身知识.珍惜每一次训练机会</li><li>c)在博弈过程中，Mini AlphaGo每一步所花费的时间以及总时间需要显示出来.</li><li>d)需要有简单的图形界面用于人机博弈交互.</li><li>e) 可使用Python语言，也可以使用其他编程语言实现.</li></ol><h1 id="2-概念理解"><a href="#2-概念理解" class="headerlink" title="2.概念理解"></a>2.概念理解</h1><p>在初次接触，并且尝试编写代码时，最大且最直接的问题往往是，MCTS算法是什么？和翻转棋有什么关系？在本文中，将尽力解释这两点。</p><h2 id="2-1-核心思想"><a href="#2-1-核心思想" class="headerlink" title="2.1 核心思想"></a>2.1 核心思想</h2><p>一位杰出的棋手往往能够根据对手的上一步选择，分析出对手后几步的动向。同样的，若要实现一个具备一定实力的ai，也需要预判对手随后的操作，而后做出最稳妥的选择</p><h2 id="2-2-数据结构"><a href="#2-2-数据结构" class="headerlink" title="2.2 数据结构"></a>2.2 数据结构</h2><p>落子具有先后顺序，并且一方落完之后，另一方有多种落子可能。因此本程序采用树状结构，每一个节点代表一种个落子可能，“节点间的父子关系”表征“落子的先后顺序“，”一个父节点可能具备多个子节点“表征”一方落子后另一方的多种落子可能“。</p><h2 id="2-3-MCTS算法对树的操作"><a href="#2-3-MCTS算法对树的操作" class="headerlink" title="2.3 MCTS算法对树的操作"></a>2.3 MCTS算法对树的操作</h2><p>MCTS算法常被分为”选择“、”拓展“、”模拟“、”反向传播“四个部分，接下来将介绍各个部分对节点树的操作。</p><h3 id="2-3-1-选择"><a href="#2-3-1-选择" class="headerlink" title="2.3.1 选择"></a>2.3.1 选择</h3><p>当我有多个落子位置可选时，我会希望选择胜率最大的位置。而当对手有多个落子位置可选时，他同样会希望选择到他胜率最大，也就是我胜率最小的位置。但我要如何确定这个胜率？</p><p>1.遍历棋盘的所有情况，然后计算胜场？算力不够</p><p>2.在已有棋盘落子+此处落子的基础上，进行一定场次的随机模拟（2.3.3将会对随机模拟做出更详细的介绍），每次随机模拟中双方都在符合规则的前提下随机落子，然后计算胜率？有一定的参考价值，并且”模拟“阶段就是这么做的，但这显然没有考虑到对局中敌我的主观能动性，参考价值较为有限。</p><p>事实上，选择阶段就是在第二种胜率计算方法的基础上增加”主观能动性“的因素。使得胜率更具备参考意义。</p><p>由于无法遍历所有情况，所以通过随机落子来计算一个参考概率是很有必要的。但是，只要我在随机落子之前进行越多步的非随机落子——贴近敌我行动可能的非随机落子，那么在此之后通过随机落子计算出的胜率，就包含更多的对”敌我主观能动性“的考量。</p><p>我们通过一个例子来讲解</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/eb94e6c37c0053cc18f10f2b98218ff6.png#pic_center" alt="节点树例"></p><p>对于这一棵树，A是当前的棋盘。B层是黑方（我们假设此时是黑方回合，假设成白方其实也同理~）在此回合可以落子的位置，此处我们假设只有3处可以落子，命名为B1,B2,B3。编号之下的百分比数字是通过多场随机落子计算出的胜率。C层是在黑方落子后，白方的可落子位置（如黑方落子B1,之后白方符合规则的落点则为C1,C2），名称下的数字仍然是胜率（黑方的胜率），且同样为通过多场随机模拟落子计算出的结果。</p><p>可以注意到，到这里仍然全是随机值，接下来我们要往其中添加主观能动性。</p><p><strong>首先，白方会希望黑方胜率尽可能小。</strong></p><p>这意味着，根据当前的胜率信息，当黑方落子B1时，白方大概率落子C2；黑方B2时，白方C4；黑方B3时，白方C5。</p><p>那么，在C2的基础上进行的模拟对局就比C1上更加符合未来可能发生的情况，同理，C4比C3更符合，C5比C6更符合。</p><p>而在B1的基础上进行的模拟对局，可能会进入C1，因此通过B1模拟计算得到的胜率也会更多得受一些“未来小概率才会出现的情况”干扰，因此通过B1模拟得出的胜率的现实指导意义要弱于从C2模拟。同理，B2弱于C4 , B3弱于C5。</p><p>接下来是判断C2,C4,C6哪个在未来有更大概率发生。</p><p>这需要用到黑方的选择偏好：</p><p><strong>黑方会希望黑方胜率尽可能大。</strong></p><p>因此根据<strong>目前</strong>的信息，黑方更有可能走B1，即C2在未来有更大概率发生。</p><p>初学者看到这里可能会产生一个疑惑：既然都确定走B1了，还有什么模拟下去的必要吗？C层的信息也没用上啊？</p><p>答案就在着重标记的”<strong>目前</strong>“二字里。</p><p>由于概率是随机模拟得到的，无论是哪个节点，再多模拟几次可能值都会产生变动。并且目前的B1可能仍在很大程度上受C1影响（当然也可以让B1值直接等于C2，最大最小算法似乎就是直接将子节点的值赋给父节点），因此要进行更多次模拟，而且是更贴近未来可能的模拟，即基于C2的模拟。而后根据新模拟的场数与胜利数重新调整B1与C2的胜率。</p><p>在这样的调整后，B1的胜率未必还是B层中的最高者。但无论怎样，在每一次的调整中，总是选择B层中的最大值，以及其对应C子节点中的最小值作为基础，开始新的模拟。直到一定的调整次数之后，选择最终胜率最高的落点位置，作为结果。</p><p>以上为ucb公式中常数c为0的情况。uba公式的作用是给节点评分，评分的依据是节点的胜率以及其对父节点的影响比例。当c不为0时，整体的流程仍是相同的，不过是我们做出选择的依据从胜率变成了ucb公式给出的评分</p><p>由于”选择“阶段既处理还未被MCTS算法调整过的树，还处理已经被MCTS算法调整过的树。因此在上面的论述中，其实还包括了”模拟“以及”反向传播“两个过程，并且大致介绍了MCTS整个算法的思想</p><p>提取并总结一下，<strong>选择</strong>阶段的作用是：选择出一条未来更可能发生的路径（在例子中，<strong>目前</strong>该路径为B1C2,但在实际应用时并不一定只有两层，还可以不断向下拓展，甚至穷举完所有可能）。</p><p>而<strong>拓展</strong>、<strong>模拟</strong>、<strong>反向传播</strong>三个阶段则是通过这条路径，对第一级子节点的胜率进行调整，参入对敌我动向的分析，使该胜率更可信。</p><p>最终就能通过各个可落子位置的较可信的胜率，确定落子方案。这就是MCTS算法在翻转棋上的应用原理。</p><h3 id="2-3-2-拓展"><a href="#2-3-2-拓展" class="headerlink" title="2.3.2 拓展"></a>2.3.2 拓展</h3><p>这里继续使用上面的例子。</p><p><strong>目前</strong>而言，其实不只B层的胜率是随机、不完全可信的，C层的胜率同样也是通过随机落子对局计算出来的，也不完全正确。在选择阶段，我们确定了路径[B1-C2] , 现在我们希望C2的胜率也能参入对敌我动向的分析，怎么办呢？</p><p>给C2也加上子节点——这就是”拓展“的含义</p><p>我们假设C2之后黑方有3个可落子位置，由于3个位置都有可能落子，因此需要将3个位置全都作为子节点接到C2之后，我们将其编号为D1，D2，D3。</p><h3 id="2-3-3-模拟"><a href="#2-3-3-模拟" class="headerlink" title="2.3.3 模拟"></a>2.3.3 模拟</h3><p>对敌我动向的分析需要使用各个节点的胜率作为依据，因此在得到D1，D2，D3后，首要任务是计算出一个参考胜率。计算方法是进行多局随机模拟。</p><p><strong>随机模拟：</strong></p><p>在一回合内可选的落子位置往往有多处，随机模拟即为：在目前的基础上（在D1开始的随机模拟的基础即为 棋盘上已经有了棋子+于B1落黑子+于C2落白子+于D1落黑子，回合转至白方）继续对局，之后交战的两方在其回合都是无策略地随机选一处落子，直到游戏结束。</p><p>然后将<strong>各自</strong>多局随机模拟中的胜率作为参考胜率赋值给D1，D2，D3</p><p>由于D层可能接着扩展E层，为了调整胜率方便，往往是记录对局数与胜利数，而不是仅记录胜率。</p><h3 id="2-3-4-反向传播"><a href="#2-3-4-反向传播" class="headerlink" title="2.3.4 反向传播"></a>2.3.4 反向传播</h3><p>D1的模拟既是在D1自己的基础上，同时也是在C2，B1的基础上进行的，因此不仅要将对局数与胜利数赋值给D1自生，还需要修改C2，B1的对局数与胜利数，实现对C2，B1胜率的调整。D2，D3同理。</p><h3 id="2-3-5-循环"><a href="#2-3-5-循环" class="headerlink" title="2.3.5 循环"></a>2.3.5 循环</h3><p>C1拓展出了D层，D又可以拓展出E层，同理后面还有F，G层。在ai确定落子位置之前，往往不会只执行一次”选择“→”拓展”→”模拟”→”反向传播”，而是会在”反向传播“后再次对修改后的树执行选择操作，不断循环。而循环的具体次数，可根据性能与智能要求做出自己的调整。次数越多ai越强，次数越少ai越快。</p><h1 id="3-具体实现"><a href="#3-具体实现" class="headerlink" title="3.具体实现"></a>3.具体实现</h1><h2 id="3-1-棋盘逻辑"><a href="#3-1-棋盘逻辑" class="headerlink" title="3.1 棋盘逻辑"></a>3.1 棋盘逻辑</h2><h3 id="3-1-1-UI界面"><a href="#3-1-1-UI界面" class="headerlink" title="3.1.1 UI界面"></a>3.1.1 UI界面</h3><p>棋盘主要为一个tkinter Canvas，通过监听鼠标左键的点击事件，根据鼠标对于窗口的相对点击位置确认鼠标点击的单元格，接着再判断点击单元格是否可以落子，若可以落子则更新棋盘、画面、计算ai落子位置；若不可落子则直接结束该点击事件，等待下一次点击。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ReversiBoard</span>(Tk.Canvas):</span><br><span class="line">    <span class="comment"># 创建了Reversi类继承Tk.Canvas，负责棋盘部分</span></span><br><span class="line">    <span class="comment"># 定义棋盘单元格的大小、边距</span></span><br><span class="line">    cell_size = <span class="number">54</span> <span class="comment">#单元格大小</span></span><br><span class="line">    margin = <span class="number">20</span> <span class="comment">#边框</span></span><br><span class="line">    board = rvs.getInitialBoard() <span class="comment">#棋盘的情况</span></span><br><span class="line">    validBoard = <span class="literal">True</span> <span class="comment">#棋盘是否能够继续</span></span><br><span class="line">    isPayerTurn = <span class="literal">True</span> <span class="comment">#是否玩家先手</span></span><br><span class="line">    step = []   <span class="comment">#记录操作的数组</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 构造函数</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, master</span>):</span><br><span class="line">        cwidth = rvs.BOARD_SIZE * self.cell_size + <span class="number">2</span>*self.margin <span class="comment">#计算单元格宽度</span></span><br><span class="line">        <span class="comment">#设置Canvas属性</span></span><br><span class="line">        Tk.Canvas.__init__(self, master, bd=<span class="number">1</span>, bg=<span class="string">&#x27;#e4c8a9&#x27;</span>, width=cwidth, height=cwidth,cursor=<span class="string">&quot;hand2&quot;</span>)</span><br><span class="line">        self.bind(<span class="string">&quot;&lt;1&gt;&quot;</span>, self.put_stones) <span class="comment">#绑定实际按put_stones到鼠标左键</span></span><br><span class="line">        <span class="comment"># 绘制棋盘</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(rvs.BOARD_SIZE):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(rvs.BOARD_SIZE):</span><br><span class="line">                <span class="keyword">if</span>((i+j)%<span class="number">2</span>==<span class="number">0</span>):</span><br><span class="line">                    bcolor = <span class="string">&quot;#c1914f&quot;</span> <span class="comment">#给相间的单元格添加不同的颜色</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    bcolor = <span class="string">&quot;#cba470&quot;</span></span><br><span class="line">                x0 = i * self.cell_size + self.margin</span><br><span class="line">                y0 = j * self.cell_size + self.margin</span><br><span class="line">                self.create_rectangle(x0, y0, x0 + self.cell_size, y0 + self.cell_size, fill=bcolor, width=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        self.refresh(rvs.PLAYER_NUM) <span class="comment">#显示落子</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">not</span> self.isPayerTurn): <span class="comment">#判断ai先后手</span></span><br><span class="line">            rvs.PLAYER_NUM = <span class="number">1</span></span><br><span class="line">            rvs.COMPUTER_NUM = -<span class="number">1</span></span><br><span class="line">            self.AI_move()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-1-2-数据结构"><a href="#3-1-2-数据结构" class="headerlink" title="3.1.2 数据结构"></a>3.1.2 数据结构</h3><p>整个棋盘由一个8*8的数字二维数组board表征，其中board[i][j]表征棋盘第i+1行，j+1列对应的单元格，其可能值有0——表示空，-1——黑子，1——白子。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">getInitialBoard</span>(): <span class="comment"># 初始化棋盘数组</span></span><br><span class="line">    board = &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, BOARD_SIZE):</span><br><span class="line">        board[i] = &#123;&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, BOARD_SIZE):</span><br><span class="line">            board[i][j] = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    board[BOARD_SIZE / <span class="number">2</span> - <span class="number">1</span>][BOARD_SIZE / <span class="number">2</span> - <span class="number">1</span>] = WHITE_NUM</span><br><span class="line">    board[BOARD_SIZE / <span class="number">2</span>][BOARD_SIZE / <span class="number">2</span>] = WHITE_NUM</span><br><span class="line"></span><br><span class="line">    board[BOARD_SIZE / <span class="number">2</span> - <span class="number">1</span>][BOARD_SIZE / <span class="number">2</span>] = BLACK_NUM</span><br><span class="line">    board[BOARD_SIZE / <span class="number">2</span>][BOARD_SIZE / <span class="number">2</span> - <span class="number">1</span>] = BLACK_NUM</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> board</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-1-3-检测可落子位置"><a href="#3-1-3-检测可落子位置" class="headerlink" title="3.1.3 检测可落子位置"></a>3.1.3 检测可落子位置</h3><p>遍历棋盘每一个位置，检测其是否值为0，且相邻对方棋子，且沿着相邻对方棋子方向前进最终会遇到一个自己的棋子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">possible_positions</span>(<span class="params">board, tile</span>): <span class="comment"># 返回一个颜色棋子可落子位置</span></span><br><span class="line">    positions = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, BOARD_SIZE):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, BOARD_SIZE):</span><br><span class="line">            <span class="keyword">if</span> board[i][j] != <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> isok(board, tile, i, j):</span><br><span class="line">                positions.append((i, j))</span><br><span class="line">    <span class="keyword">return</span> positions</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">isOnBoard</span>(<span class="params">x, y</span>): <span class="comment">#检测对应位置是否在棋盘</span></span><br><span class="line">    <span class="keyword">return</span> x &gt;= <span class="number">0</span> <span class="keyword">and</span> x &lt;= <span class="number">7</span> <span class="keyword">and</span> y &gt;= <span class="number">0</span> <span class="keyword">and</span> y &lt;= <span class="number">7</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">isok</span>(<span class="params">board,tile,i,j</span>): <span class="comment">#检测该位置是否可以落子</span></span><br><span class="line">    change = -tile</span><br><span class="line">    <span class="keyword">if</span>(board[i][j]!=<span class="number">0</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> xdirection, ydirection <span class="keyword">in</span> direction:</span><br><span class="line">        x, y = i, j</span><br><span class="line">        x += xdirection</span><br><span class="line">        y += ydirection</span><br><span class="line">        <span class="keyword">if</span> isOnBoard(x, y) <span class="keyword">and</span> board[x][y] == change: <span class="comment">#该点朝一dirction方向相邻一个棋子，且相邻的棋子为可以被翻转的数字</span></span><br><span class="line">            <span class="comment"># 一直走到出界或不是对方棋子的位置</span></span><br><span class="line">            <span class="keyword">while</span> board[x][y] == change:</span><br><span class="line">                x += xdirection</span><br><span class="line">                y += ydirection</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> isOnBoard(x, y):</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="comment"># 出界了，则直接进行下一个方向的查找</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> isOnBoard(x, y):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="comment"># 是自己的棋子，中间的所有棋子都要翻转</span></span><br><span class="line">            <span class="keyword">if</span> board[x][y] == tile:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><h3 id="3-1-4-翻转"><a href="#3-1-4-翻转" class="headerlink" title="3.1.4 翻转"></a>3.1.4 翻转</h3><p>从落点位置向八个方向拓展，检测其是否相邻对方棋子，且沿着相邻对方棋子方向前进最终会遇到一个自己的棋子, 如果是，则将经过的对方棋子翻转。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">updateBoard</span>(<span class="params">board, tile, i, j</span>):</span><br><span class="line">    direction = [[<span class="number">0</span>, <span class="number">1</span>], [<span class="number">1</span>, <span class="number">1</span>], [<span class="number">1</span>, <span class="number">0</span>], [<span class="number">1</span>, -<span class="number">1</span>], [<span class="number">0</span>, -<span class="number">1</span>], [-<span class="number">1</span>, -<span class="number">1</span>], [-<span class="number">1</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">1</span>]]</span><br><span class="line">    change = -tile</span><br><span class="line">    need_turn = [] <span class="comment"># 要被翻转的棋子</span></span><br><span class="line">    <span class="keyword">for</span> xdirection, ydirection <span class="keyword">in</span> direction:</span><br><span class="line">        x, y = i, j</span><br><span class="line">        x += xdirection</span><br><span class="line">        y += ydirection</span><br><span class="line">        <span class="keyword">if</span> isOnBoard(x, y) <span class="keyword">and</span> board[x][y] == change: <span class="comment">#该点朝一dirction方向相邻一个棋子，且相邻的棋子为可以被翻转的数字</span></span><br><span class="line">            <span class="comment"># 一直走到出界或不是对方棋子的位置</span></span><br><span class="line">            <span class="keyword">while</span> board[x][y] == change:</span><br><span class="line">                x += xdirection</span><br><span class="line">                y += ydirection</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> isOnBoard(x, y):</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="comment"># 出界了，则直接进行下一个方向的查找</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> isOnBoard(x, y):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="comment"># 是自己的棋子，中间的所有棋子都要翻转</span></span><br><span class="line">            <span class="keyword">if</span> board[x][y] == tile:</span><br><span class="line">                <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                    x -= xdirection</span><br><span class="line">                    y -= ydirection</span><br><span class="line">                    <span class="comment"># 回到了起点则结束</span></span><br><span class="line">                    <span class="keyword">if</span> x == i <span class="keyword">and</span> y == j:</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                    <span class="comment"># 需要翻转的棋子</span></span><br><span class="line">                    need_turn.append([x, y])</span><br><span class="line">    <span class="comment"># 翻转棋子</span></span><br><span class="line">    board[i][j] = tile</span><br><span class="line">    <span class="keyword">for</span> x, y <span class="keyword">in</span> need_turn:</span><br><span class="line">        board[x][y] = tile</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">len</span>(need_turn)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-1-5-判断胜负"><a href="#3-1-5-判断胜负" class="headerlink" title="3.1.5 判断胜负"></a>3.1.5 判断胜负</h3><p>当双方可落点位置数都为0时，遍历棋盘，计算双方棋子的数量，数量多者胜利。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">eval_board</span>(<span class="params">tep_board</span>): <span class="comment">#比较二者的棋子数目，判断胜负</span></span><br><span class="line">    tileNum,negTilenum = countTile(tep_board,playerNum)</span><br><span class="line">    <span class="keyword">if</span> tileNum &gt; negTilenum:</span><br><span class="line">        <span class="comment">#tile代表的棋胜</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="comment">#tile代表的棋负</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><h2 id="3-2-MCTS相关"><a href="#3-2-MCTS相关" class="headerlink" title="3.2 MCTS相关"></a>3.2 MCTS相关</h2><h3 id="3-2-1-首次扩展-模拟"><a href="#3-2-1-首次扩展-模拟" class="headerlink" title="3.2.1 首次扩展&amp;模拟"></a>3.2.1 首次扩展&amp;模拟</h3><p>本阶段用于初始化mcts树，扩展出第一层子节点，并进行一定场数的模拟，根据模拟结果修改结点的模拟总次数与模拟胜利次数。以此使之后的第一次mcts循环中的选择阶段具有选择的依据，并且可以避免除以0的异常情况。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">global</span> PATHROOT <span class="comment">#节点树</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(PATHROOT) == <span class="number">0</span>:</span><br><span class="line">    PATHROOT = expand(board,playerNum)</span><br><span class="line">    <span class="keyword">for</span> index, rootChild <span class="keyword">in</span> <span class="built_in">enumerate</span>(PATHROOT):</span><br><span class="line">        current_board =  copy.deepcopy(board) <span class="comment">#current_board记录在某处落子后的棋盘</span></span><br><span class="line">        parent, t_playout, reward, t_childrens = rootChild</span><br><span class="line">        updateBoard(current_board, playerNum, parent[<span class="number">0</span>] , parent[<span class="number">1</span>]) <span class="comment">#对落子于此处的棋盘进行随机落子，使得能对其使用ucb算法（避免除以0的情况）</span></span><br><span class="line">        t_playout =<span class="number">10</span></span><br><span class="line">        reward = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">21</span>):</span><br><span class="line">            current_board2 = copy.deepcopy(current_board) <span class="comment">#current_board2是用来进行随机落点判断胜负的临时表盘</span></span><br><span class="line">            isWon = find_playout(current_board2, -playerNum) <span class="comment">#tile表示下一步谁执行</span></span><br><span class="line">            <span class="keyword">if</span>(isWon):</span><br><span class="line">                reward+=<span class="number">1</span></span><br><span class="line">        PATHROOT[index] = (parent,t_playout,reward,t_childrens)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-2-2-MCTS循环"><a href="#3-2-2-MCTS循环" class="headerlink" title="3.2.2 MCTS循环"></a>3.2.2 MCTS循环</h3><p><strong>选择</strong></p><p>选择阶段首先根据uba算法计算第一层级各个结点的估值，而后选择估值最高者，遍历其一级子结点以计算各结点的uba估值，选择估值最小的结点。像这样不断深入，交替选择最大或最小值，直到达到叶子结点。记录下这一路每次选择的结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">find_path</span>(<span class="params">root</span>):</span><br><span class="line">    current_path = []</span><br><span class="line">    child = root</span><br><span class="line">    parent_playout = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> child: <span class="comment">#计算父节点遍历过的次数</span></span><br><span class="line">        name, nplayout, reward, childrens = item</span><br><span class="line">        parent_playout+=nplayout</span><br><span class="line">    isMCTSTurn = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(child) == <span class="number">0</span>: <span class="comment">#无可落子的位置,直接结束</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        maxidxlist = [<span class="number">0</span>]</span><br><span class="line">        cidx = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> isMCTSTurn:</span><br><span class="line">            maxval = -<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            maxval = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> n_tuple <span class="keyword">in</span> child:  <span class="comment">#对每一个可落子的位置进行最大最小搜索</span></span><br><span class="line">            <span class="comment">#实现最大最小搜索，电脑选择最大值，玩家选择最小值</span></span><br><span class="line">            <span class="keyword">if</span> isMCTSTurn:</span><br><span class="line">                <span class="comment">#ucb返回各个结点的值，之后就依靠这个值来进行最大最小算法</span></span><br><span class="line">                cval = ucb(n_tuple, parent_playout)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> cval &gt;= maxval:</span><br><span class="line">                    <span class="comment"># 获取子结点中值最大的一项,并记录其id(即cidx)</span></span><br><span class="line">                    <span class="keyword">if</span> cval == maxval:</span><br><span class="line">                        maxidxlist.append(cidx)</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        maxidxlist = [cidx]</span><br><span class="line">                        maxval = cval</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                cval = ucb(n_tuple, parent_playout)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> cval &lt;= maxval:</span><br><span class="line">                    <span class="comment">#获取子节点中值最小的一项</span></span><br><span class="line">                    <span class="keyword">if</span> cval == maxval:</span><br><span class="line">                        maxidxlist.append(cidx)</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        maxidxlist = [cidx]</span><br><span class="line">                        maxval = cval</span><br><span class="line"></span><br><span class="line">            cidx += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 从最值结点中随机选择一处落子</span></span><br><span class="line">        maxidx = maxidxlist[random.randrange(<span class="number">0</span>, <span class="built_in">len</span>(maxidxlist))]</span><br><span class="line">        parent, t_playout, reward, t_childrens = child[maxidx]</span><br><span class="line">        current_path.append(parent)</span><br><span class="line">        parent_playout = t_playout</span><br><span class="line">        <span class="comment"># 选择子节点进入下一次循环</span></span><br><span class="line">        child = t_childrens</span><br><span class="line">        isMCTSTurn = <span class="keyword">not</span> (isMCTSTurn)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 返回根据最大最小规则选择出来的一条路径</span></span><br><span class="line">    <span class="keyword">return</span> current_path</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>扩展</strong></p><p>拷贝带落点棋盘到一临时棋盘，根据”选择”阶段获得的结点集，在临时棋盘上完成多次落点，完成落点后，检测临时棋盘的下一回合可落点位置，将这些可落点位置更新到结点树中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#扩展结点,返回tep_board的子节点数组</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">expand</span>(<span class="params">tep_board, tile</span>):</span><br><span class="line">    positions = possible_positions(tep_board, tile)</span><br><span class="line">    result = []</span><br><span class="line">    <span class="keyword">for</span> temp <span class="keyword">in</span> positions:</span><br><span class="line">        result.append((temp, <span class="number">0</span>, <span class="number">0</span>, []))</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>单词模拟</strong></p><p>对”扩展“阶段得到的每一可落点位置，在临时棋盘的基础上，于该位置落子。随后双方继续在此基础上不断地随机落子（符合规则的随机），直到游戏结束。如此进行多局后，将对局数与胜利数更新到该可落点位置在树中对应的节点。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">find_playout</span>(<span class="params">tep_board, tile, depth=<span class="number">0</span></span>): <span class="comment">#对tep_board进行了系列随机落点后，返回最终结果胜负</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eval_board</span>(<span class="params">tep_board</span>): <span class="comment">#比较二者的棋子数目，判断胜负</span></span><br><span class="line">        tileNum,negTilenum = countTile(tep_board,playerNum)</span><br><span class="line">        <span class="keyword">if</span> tileNum &gt; negTilenum:</span><br><span class="line">            <span class="comment">#tile代表的棋胜</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">            <span class="comment">#tile代表的棋负</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(depth&lt;<span class="number">120</span>):<span class="comment">#进行最多120次循环后返回结果</span></span><br><span class="line">        turn_positions = possible_positions(tep_board, tile)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(turn_positions) == <span class="number">0</span>: <span class="comment">#如果没位置下棋，切换到对手回合</span></span><br><span class="line">            tile = -tile</span><br><span class="line">            neg_turn_positions = possible_positions(tep_board, tile)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(neg_turn_positions) == <span class="number">0</span>: <span class="comment">#对方也没位置下棋，结束游戏</span></span><br><span class="line">                <span class="keyword">return</span> eval_board(tep_board)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                turn_positions = neg_turn_positions</span><br><span class="line"></span><br><span class="line">        temp = turn_positions[random.randrange(<span class="number">0</span>, <span class="built_in">len</span>(turn_positions))] <span class="comment"># 随机放置一个棋子</span></span><br><span class="line">        updateBoard(tep_board, tile, temp[<span class="number">0</span>], temp[<span class="number">1</span>])</span><br><span class="line">        <span class="comment"># 转换轮次</span></span><br><span class="line">        tile = -tile</span><br><span class="line">        depth+=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> eval_board(tep_board)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>拓展&amp;模拟&amp;反向传播</strong></p><p>根据”模拟”阶段的对局数与胜利数，更新可落点位置在树中对应的节点的所有祖先节点。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#扩展与模拟过程</span></span><br><span class="line">child = PATHROOT</span><br><span class="line">randomTime = <span class="number">0</span> <span class="comment">#进行随机落子的盘数</span></span><br><span class="line">rewardSum = <span class="number">0</span> <span class="comment">#胜利总次数</span></span><br><span class="line"><span class="keyword">for</span> temp <span class="keyword">in</span> current_path:</span><br><span class="line">    <span class="comment">#遍历最佳路径</span></span><br><span class="line">    idx = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> n_tuple <span class="keyword">in</span> child:</span><br><span class="line">        <span class="comment">#找到最佳路径中此节点对应的子节点</span></span><br><span class="line">        parent, t_playout, reward, t_childrens = n_tuple</span><br><span class="line">        <span class="keyword">if</span> temp[<span class="number">0</span>] == parent[<span class="number">0</span>] <span class="keyword">and</span> temp[<span class="number">1</span>] == parent[<span class="number">1</span>]:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        idx += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> temp[<span class="number">0</span>] == parent[<span class="number">0</span>] <span class="keyword">and</span> temp[<span class="number">1</span>] == parent[<span class="number">1</span>]:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(t_childrens) == <span class="number">0</span>:</span><br><span class="line">            <span class="comment">#找到路径的叶子结点，进行拓展</span></span><br><span class="line">            tempStartTime = time.time()</span><br><span class="line">            t_childrens = expand(current_board, tile) <span class="comment">#扩展过程</span></span><br><span class="line">            tempEndTime = time.time()</span><br><span class="line">            expendTime += tempEndTime-tempStartTime</span><br><span class="line">            randomTime = <span class="built_in">len</span>(t_childrens) *<span class="number">10</span> <span class="comment">#进行随机落子的盘数</span></span><br><span class="line">            rewardSum = <span class="number">0</span> <span class="comment">#胜利总次数</span></span><br><span class="line">            tempStartTime = time.time() <span class="comment">#模拟过程</span></span><br><span class="line">            <span class="keyword">for</span> index, rootChild <span class="keyword">in</span> <span class="built_in">enumerate</span>(t_childrens):<span class="comment">#对落子于此处的棋盘进行随机落子，使得能对其使用ucb算法（避免除以0的情况）</span></span><br><span class="line">                child_board =  copy.deepcopy(current_board) <span class="comment">#current_board记录在某处落子后的棋盘</span></span><br><span class="line">                child_parent, child_playout, reward, child_childrens = rootChild</span><br><span class="line">                tempTile = tile</span><br><span class="line">                tempNegTile = -tempTile</span><br><span class="line">                updateBoard(child_board, tempTile, child_parent[<span class="number">0</span>] , child_parent[<span class="number">1</span>])</span><br><span class="line">                child_playout =<span class="number">10</span></span><br><span class="line">                reward = <span class="number">0</span></span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">21</span>):</span><br><span class="line">                    current_board2 = copy.deepcopy(child_board) <span class="comment">#current_board2是用来进行随机落点判断胜负的临时表盘</span></span><br><span class="line">                    simulationTimes+=<span class="number">1</span></span><br><span class="line">                    isWon = find_playout(current_board2, tempNegTile) <span class="comment">#tile表示下一步谁执行</span></span><br><span class="line">                    <span class="keyword">if</span>(isWon):</span><br><span class="line">                        reward+=<span class="number">1</span></span><br><span class="line">                rewardSum+=reward</span><br><span class="line">                t_childrens[index] = (child_parent,child_playout,reward,child_childrens)</span><br><span class="line">            tempEndTime = time.time()</span><br><span class="line">            simulationTime += tempEndTime-tempStartTime</span><br><span class="line">        <span class="comment">#应用修改到本体</span></span><br><span class="line">        child[idx] = (parent, t_playout, reward, t_childrens)</span><br><span class="line">    <span class="comment">#继续处理子结点</span></span><br><span class="line">    child = t_childrens</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> randomTime!=<span class="number">0</span>:</span><br><span class="line">    tempStartTime = time.time() <span class="comment">#反向传播过程</span></span><br><span class="line">    child = PATHROOT</span><br><span class="line">    <span class="keyword">for</span> temp <span class="keyword">in</span> current_path:</span><br><span class="line">        <span class="comment">#遍历最佳路径</span></span><br><span class="line">        idx = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> n_tuple <span class="keyword">in</span> child:</span><br><span class="line">            <span class="comment">#找到最佳路径中此节点对应的子节点</span></span><br><span class="line">            parent, t_playout, reward, t_childrens = n_tuple</span><br><span class="line">            <span class="keyword">if</span> temp[<span class="number">0</span>] == parent[<span class="number">0</span>] <span class="keyword">and</span> temp[<span class="number">1</span>] == parent[<span class="number">1</span>]:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            idx += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> temp[<span class="number">0</span>] == parent[<span class="number">0</span>] <span class="keyword">and</span> temp[<span class="number">1</span>] == parent[<span class="number">1</span>]:</span><br><span class="line">            <span class="comment">#找到了对应的结点，修改场数与胜利数</span></span><br><span class="line">            t_playout += randomTime</span><br><span class="line">            reward += rewardSum</span><br><span class="line"></span><br><span class="line">            <span class="comment">#应用修改到本体</span></span><br><span class="line">            child[idx] = (parent, t_playout, reward, t_childrens)</span><br><span class="line">        <span class="comment">#继续处理子结点</span></span><br><span class="line">        child = t_childrens</span><br><span class="line">    tempEndTime = time.time()</span><br><span class="line">    BackTime += tempEndTime-tempStartTime</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="返回结果"><a href="#返回结果" class="headerlink" title="返回结果"></a>返回结果</h3><p>遍历树的第一层节点，选择胜率最高的节点对应的落点位置返回。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> n_tuple <span class="keyword">in</span> PATHROOT:</span><br><span class="line">    parent, t_playout, reward, t_childrens = n_tuple</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (t_playout &gt; <span class="number">0</span>) <span class="keyword">and</span> (reward / t_playout &gt; max_avg_reward):</span><br><span class="line">        mt_result = parent</span><br><span class="line">        max_avg_reward = reward / t_playout</span><br><span class="line"><span class="keyword">return</span> mt_result</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="4-运行结果"><a href="#4-运行结果" class="headerlink" title="4.运行结果"></a>4.运行结果</h1><p><img src="https://i-blog.csdnimg.cn/blog_migrate/475a3b3d2cf55fbf035638ebda98ab34.png#pic_center" alt="在这里插入图片描述"></p><h1 id="5-完整原码"><a href="#5-完整原码" class="headerlink" title="5.完整原码"></a>5.完整原码</h1><h2 id="5-1-game-py"><a href="#5-1-game-py" class="headerlink" title="5.1 game.py"></a>5.1 game.py</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> MCTS <span class="keyword">as</span> rvs</span><br><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> Tk</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> tkinter.messagebox</span><br><span class="line">total=[]</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ReversiBoard</span>(Tk.Canvas):</span><br><span class="line">    <span class="comment"># 创建了Reversi类继承Tk.Canvas，负责棋盘部分</span></span><br><span class="line">    <span class="comment"># 定义棋盘单元格的大小、边距</span></span><br><span class="line">    cell_size = <span class="number">54</span> <span class="comment">#单元格大小</span></span><br><span class="line">    margin = <span class="number">20</span> <span class="comment">#边框</span></span><br><span class="line">    board = rvs.getInitialBoard() <span class="comment">#棋盘的情况</span></span><br><span class="line">    validBoard = <span class="literal">True</span> <span class="comment">#棋盘是否能够继续</span></span><br><span class="line">    isPayerTurn = <span class="literal">True</span> <span class="comment">#是否玩家先手</span></span><br><span class="line">    step = []   <span class="comment">#记录操作的数组</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 构造函数</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, master</span>):</span><br><span class="line">        cwidth = rvs.BOARD_SIZE * self.cell_size + <span class="number">2</span>*self.margin <span class="comment">#计算单元格宽度</span></span><br><span class="line">        <span class="comment">#设置Canvas属性</span></span><br><span class="line">        Tk.Canvas.__init__(self, master, bd=<span class="number">1</span>, bg=<span class="string">&#x27;#e4c8a9&#x27;</span>, width=cwidth, height=cwidth,cursor=<span class="string">&quot;hand2&quot;</span>)</span><br><span class="line">        self.bind(<span class="string">&quot;&lt;1&gt;&quot;</span>, self.put_stones) <span class="comment">#绑定实际按put_stones到鼠标左键</span></span><br><span class="line">        <span class="comment"># 绘制棋盘</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(rvs.BOARD_SIZE):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(rvs.BOARD_SIZE):</span><br><span class="line">                <span class="keyword">if</span>((i+j)%<span class="number">2</span>==<span class="number">0</span>):</span><br><span class="line">                    bcolor = <span class="string">&quot;#c1914f&quot;</span> <span class="comment">#给相间的单元格添加不同的颜色</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    bcolor = <span class="string">&quot;#cba470&quot;</span></span><br><span class="line">                x0 = i * self.cell_size + self.margin</span><br><span class="line">                y0 = j * self.cell_size + self.margin</span><br><span class="line">                self.create_rectangle(x0, y0, x0 + self.cell_size, y0 + self.cell_size, fill=bcolor, width=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        self.refresh(rvs.PLAYER_NUM) <span class="comment">#显示落子</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">not</span> self.isPayerTurn): <span class="comment">#判断ai先后手</span></span><br><span class="line">            rvs.PLAYER_NUM = <span class="number">1</span></span><br><span class="line">            rvs.COMPUTER_NUM = -<span class="number">1</span></span><br><span class="line">            self.AI_move()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">put_stones</span>(<span class="params">self, event</span>):  <span class="comment">#  在界面上放置棋子</span></span><br><span class="line">        <span class="comment"># 是否游戏结束</span></span><br><span class="line">        <span class="keyword">if</span> self.validBoard == <span class="literal">False</span>:</span><br><span class="line">            <span class="comment">#游戏结束</span></span><br><span class="line">            self.validBoard = <span class="literal">True</span></span><br><span class="line">            <span class="comment">#重新生成棋盘</span></span><br><span class="line">            self.board = rvs.getInitialBoard()</span><br><span class="line">            self.isPayerTurn = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">#清除操作记录</span></span><br><span class="line">            <span class="keyword">for</span> numid <span class="keyword">in</span> self.step:</span><br><span class="line">                self.delete(numid)</span><br><span class="line">            self.step = []</span><br><span class="line">            self.refresh(rvs.PLAYER_NUM)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 电脑轮次</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> (self.isPayerTurn):</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="comment"># 玩家轮次</span></span><br><span class="line">        x = self.canvasx(event.x)</span><br><span class="line">        y = self.canvasy(event.y)</span><br><span class="line">        <span class="comment"># 根据点击位置确定格子</span></span><br><span class="line">        i = <span class="built_in">int</span>((x-self.margin) / self.cell_size)</span><br><span class="line">        j = <span class="built_in">int</span>((y-self.margin) / self.cell_size)</span><br><span class="line">        <span class="keyword">if</span> self.board[i][j] != <span class="number">0</span> <span class="keyword">or</span> <span class="keyword">not</span> rvs.isok(self.board, rvs.PLAYER_NUM, i, j): <span class="comment">#点击位置不符合规则，直接返回</span></span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        rvs.updateBoard(self.board, rvs.PLAYER_NUM, i, j)</span><br><span class="line">        rvs.updatePathRoot(i,j) <span class="comment">#记录落点位置</span></span><br><span class="line">        self.refresh(rvs.COMPUTER_NUM) <span class="comment">#更新棋盘界面</span></span><br><span class="line">        isPayerTurn = <span class="literal">False</span></span><br><span class="line">        self.after(<span class="number">100</span>, self.AI_move)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">AI_move</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="comment">#获取此时人类以及机器可以落子的结点</span></span><br><span class="line">            mcts_possibility = <span class="built_in">len</span>(rvs.possible_positions(self.board, rvs.COMPUTER_NUM))</span><br><span class="line">            <span class="comment">#判断机器是否有棋可下</span></span><br><span class="line">            <span class="keyword">if</span> mcts_possibility == <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            start= time.time()</span><br><span class="line">            <span class="comment"># 根据mcts算法获取落子位置</span></span><br><span class="line">            stone_pos = rvs.mctsNextPosition(self.board,<span class="number">0.7</span>,rvs.COMPUTER_NUM)</span><br><span class="line">            end =time.time()</span><br><span class="line">            one_time=end-start</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;落子位置&quot;</span>, stone_pos)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;总落子时间为&quot;</span>,<span class="built_in">format</span>(one_time, <span class="string">&#x27;.4f&#x27;</span>),<span class="string">&quot;s&quot;</span>)</span><br><span class="line">            total.append(one_time)</span><br><span class="line">            rvs.updateBoard(self.board, rvs.COMPUTER_NUM, stone_pos[<span class="number">0</span>], stone_pos[<span class="number">1</span>])</span><br><span class="line">            rvs.updatePathRoot(stone_pos[<span class="number">0</span>],stone_pos[<span class="number">1</span>]) <span class="comment">#更新pathRoot</span></span><br><span class="line">            self.refresh(rvs.PLAYER_NUM)</span><br><span class="line"></span><br><span class="line">            player_possibility = <span class="built_in">len</span>(rvs.possible_positions(self.board, rvs.PLAYER_NUM))</span><br><span class="line">            mcts_possibility = <span class="built_in">len</span>(rvs.possible_positions(self.board, rvs.COMPUTER_NUM))</span><br><span class="line"></span><br><span class="line">            <span class="comment">#判断人类是否有棋可下</span></span><br><span class="line">            <span class="keyword">if</span>  player_possibility &gt; <span class="number">0</span> <span class="keyword">or</span> mcts_possibility == <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        player_possibility = <span class="built_in">len</span>(rvs.possible_positions(self.board, rvs.PLAYER_NUM))</span><br><span class="line">        <span class="keyword">if</span> player_possibility == <span class="number">0</span> <span class="keyword">and</span> mcts_possibility == <span class="number">0</span>:</span><br><span class="line">            self.showResult()</span><br><span class="line">            self.validBoard = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">        self.isPayerTurn = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">showResult</span>(<span class="params">self</span>):</span><br><span class="line">        player_stone,mcts_stone = rvs.countTile(self.board,rvs.PLAYER_NUM)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> player_stone &gt; mcts_stone:</span><br><span class="line">            tkinter.messagebox.showinfo(<span class="string">&#x27;游戏结束&#x27;</span>, <span class="string">&quot;你获胜了&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> player_stone == mcts_stone:</span><br><span class="line">            tkinter.messagebox.showinfo(<span class="string">&#x27;游戏结束&#x27;</span>, <span class="string">&quot;平局&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            tkinter.messagebox.showinfo(<span class="string">&#x27;游戏结束&#x27;</span>, <span class="string">&quot;你失败了&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;ai整局用时&quot;</span>,<span class="built_in">sum</span>(total))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">refresh</span>(<span class="params">self,tile</span>): <span class="comment">#刷新整个棋盘</span></span><br><span class="line">        self.delete(<span class="string">&quot;probale&quot;</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(rvs.BOARD_SIZE):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(rvs.BOARD_SIZE):</span><br><span class="line">                x0 = i * self.cell_size + self.margin</span><br><span class="line">                y0 = j * self.cell_size + self.margin</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> self.board[i][j] == <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                <span class="keyword">if</span> self.board[i][j] == rvs.BLACK_NUM:</span><br><span class="line">                    bcolor = <span class="string">&quot;#000000&quot;</span></span><br><span class="line">                <span class="keyword">if</span> self.board[i][j] == rvs.WHITE_NUM:</span><br><span class="line">                    bcolor = <span class="string">&quot;#ffffff&quot;</span></span><br><span class="line">                self.create_oval(x0 + <span class="number">8</span>, y0 + <span class="number">8</span>, x0 + self.cell_size - <span class="number">8</span>, y0 + self.cell_size - <span class="number">8</span>, fill=bcolor, width=<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">if</span> tile == rvs.PLAYER_NUM:</span><br><span class="line">            probale = rvs.possible_positions(self.board,tile) <span class="comment">#显示可落子位置</span></span><br><span class="line">            bcolor = <span class="string">&quot;#ffcc33&quot;</span></span><br><span class="line">            <span class="keyword">for</span> pos <span class="keyword">in</span> probale:</span><br><span class="line">                x0 = pos[<span class="number">0</span>] * self.cell_size + self.margin</span><br><span class="line">                y0 = pos[<span class="number">1</span>] * self.cell_size + self.margin</span><br><span class="line">                self.create_oval(x0 + <span class="number">18</span>, y0 + <span class="number">18</span>, x0 + self.cell_size-<span class="number">18</span>, y0 + self.cell_size - <span class="number">18</span>, fill=bcolor, width=<span class="number">0</span>,tags=<span class="string">&quot;probale&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Reversi</span>(Tk.Frame):</span><br><span class="line">    <span class="comment"># 创建了Reversi类继承Tk.Frame，负责整个窗口</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, master=<span class="literal">None</span></span>):</span><br><span class="line">        Tk.Frame.__init__(self, master,bg=<span class="string">&quot;#51150b&quot;</span>)</span><br><span class="line">        self.master.title(<span class="string">&quot;黑白棋&quot;</span>)</span><br><span class="line">        <span class="comment"># ReversiBoard为自定义的棋盘类，放置在窗口中</span></span><br><span class="line">        self.f_board = ReversiBoard(self)</span><br><span class="line">        self.f_board.pack(padx=<span class="number">20</span>, pady=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = Reversi()</span><br><span class="line">    app.pack()</span><br><span class="line">    app.mainloop()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="5-2-MCTS-py"><a href="#5-2-MCTS-py" class="headerlink" title="5.2 MCTS.py"></a>5.2 MCTS.py</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> copy</span><br><span class="line"></span><br><span class="line">BOARD_SIZE = <span class="number">8</span> <span class="comment">#棋盘行数与列数</span></span><br><span class="line">PLAYER_NUM = -<span class="number">1</span> <span class="comment">#在board中代表玩家的数字</span></span><br><span class="line">COMPUTER_NUM = <span class="number">1</span> <span class="comment">#在board中代表带电脑的数字</span></span><br><span class="line">MAX_THINK_TIME = <span class="number">5</span>  <span class="comment">#电脑的最大思考时间</span></span><br><span class="line">direction = [[<span class="number">0</span>, <span class="number">1</span>], [<span class="number">1</span>, <span class="number">1</span>], [<span class="number">1</span>, <span class="number">0</span>], [<span class="number">1</span>, -<span class="number">1</span>], [<span class="number">0</span>, -<span class="number">1</span>], [-<span class="number">1</span>, -<span class="number">1</span>], [-<span class="number">1</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">1</span>]]</span><br><span class="line">BLACK_NUM = -<span class="number">1</span> <span class="comment">#代表黑棋的数字</span></span><br><span class="line">WHITE_NUM = <span class="number">1</span> <span class="comment">#代表白棋的数字</span></span><br><span class="line">PATHROOT = [] <span class="comment">#节点树</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getInitialBoard</span>(): <span class="comment"># 初始化棋盘数组</span></span><br><span class="line">    board = &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, BOARD_SIZE):</span><br><span class="line">        board[i] = &#123;&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, BOARD_SIZE):</span><br><span class="line">            board[i][j] = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    board[BOARD_SIZE / <span class="number">2</span> - <span class="number">1</span>][BOARD_SIZE / <span class="number">2</span> - <span class="number">1</span>] = WHITE_NUM</span><br><span class="line">    board[BOARD_SIZE / <span class="number">2</span>][BOARD_SIZE / <span class="number">2</span>] = WHITE_NUM</span><br><span class="line"></span><br><span class="line">    board[BOARD_SIZE / <span class="number">2</span> - <span class="number">1</span>][BOARD_SIZE / <span class="number">2</span>] = BLACK_NUM</span><br><span class="line">    board[BOARD_SIZE / <span class="number">2</span>][BOARD_SIZE / <span class="number">2</span> - <span class="number">1</span>] = BLACK_NUM</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> board</span><br><span class="line"></span><br><span class="line"><span class="comment"># 返回棋子数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">countTile</span>(<span class="params">board,tile</span>):</span><br><span class="line">    stones = <span class="number">0</span></span><br><span class="line">    negstones = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, BOARD_SIZE):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, BOARD_SIZE):</span><br><span class="line">            <span class="keyword">if</span> board[i][j] == tile:</span><br><span class="line">                stones+=<span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> board[i][j] == -tile:</span><br><span class="line">                negstones+=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> stones,negstones</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">possible_positions</span>(<span class="params">board, tile</span>): <span class="comment"># 返回一个颜色棋子可落子位置</span></span><br><span class="line">    positions = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, BOARD_SIZE):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, BOARD_SIZE):</span><br><span class="line">            <span class="keyword">if</span> board[i][j] != <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> isok(board, tile, i, j):</span><br><span class="line">                positions.append((i, j))</span><br><span class="line">    <span class="keyword">return</span> positions</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">isOnBoard</span>(<span class="params">x, y</span>): <span class="comment">#检测对应位置是否在棋盘</span></span><br><span class="line">    <span class="keyword">return</span> x &gt;= <span class="number">0</span> <span class="keyword">and</span> x &lt;= <span class="number">7</span> <span class="keyword">and</span> y &gt;= <span class="number">0</span> <span class="keyword">and</span> y &lt;= <span class="number">7</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">isok</span>(<span class="params">board,tile,i,j</span>): <span class="comment">#检测该位置是否可以落子</span></span><br><span class="line">    change = -tile</span><br><span class="line">    <span class="keyword">if</span>(board[i][j]!=<span class="number">0</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> xdirection, ydirection <span class="keyword">in</span> direction:</span><br><span class="line">        x, y = i, j</span><br><span class="line">        x += xdirection</span><br><span class="line">        y += ydirection</span><br><span class="line">        <span class="keyword">if</span> isOnBoard(x, y) <span class="keyword">and</span> board[x][y] == change: <span class="comment">#该点朝一dirction方向相邻一个棋子，且相邻的棋子为可以被翻转的数字</span></span><br><span class="line">            <span class="comment"># 一直走到出界或不是对方棋子的位置</span></span><br><span class="line">            <span class="keyword">while</span> board[x][y] == change:</span><br><span class="line">                x += xdirection</span><br><span class="line">                y += ydirection</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> isOnBoard(x, y):</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="comment"># 出界了，则直接进行下一个方向的查找</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> isOnBoard(x, y):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="comment"># 是自己的棋子，中间的所有棋子都要翻转</span></span><br><span class="line">            <span class="keyword">if</span> board[x][y] == tile:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否是合法走法，如果合法返回需要翻转的棋子列表</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">updateBoard</span>(<span class="params">board, tile, i, j</span>):</span><br><span class="line">    change = -tile</span><br><span class="line">    need_turn = [] <span class="comment"># 要被翻转的棋子</span></span><br><span class="line">    <span class="keyword">for</span> xdirection, ydirection <span class="keyword">in</span> direction:</span><br><span class="line">        x, y = i, j</span><br><span class="line">        x += xdirection</span><br><span class="line">        y += ydirection</span><br><span class="line">        <span class="keyword">if</span> isOnBoard(x, y) <span class="keyword">and</span> board[x][y] == change: <span class="comment">#该点朝一dirction方向相邻一个棋子，且相邻的棋子为可以被翻转的数字</span></span><br><span class="line">            <span class="comment"># 一直走到出界或不是对方棋子的位置</span></span><br><span class="line">            <span class="keyword">while</span> board[x][y] == change:</span><br><span class="line">                x += xdirection</span><br><span class="line">                y += ydirection</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> isOnBoard(x, y):</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="comment"># 出界了，则直接进行下一个方向的查找</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> isOnBoard(x, y):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="comment"># 是自己的棋子，中间的所有棋子都要翻转</span></span><br><span class="line">            <span class="keyword">if</span> board[x][y] == tile:</span><br><span class="line">                <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                    x -= xdirection</span><br><span class="line">                    y -= ydirection</span><br><span class="line">                    <span class="comment"># 回到了起点则结束</span></span><br><span class="line">                    <span class="keyword">if</span> x == i <span class="keyword">and</span> y == j:</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                    <span class="comment"># 需要翻转的棋子</span></span><br><span class="line">                    need_turn.append([x, y])</span><br><span class="line">    <span class="comment"># 翻转棋子</span></span><br><span class="line">    board[i][j] = tile</span><br><span class="line">    <span class="keyword">for</span> x, y <span class="keyword">in</span> need_turn:</span><br><span class="line">        board[x][y] = tile</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">len</span>(need_turn)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">updatePathRoot</span>(<span class="params">i,j</span>):</span><br><span class="line">    <span class="keyword">global</span> PATHROOT</span><br><span class="line">    <span class="keyword">for</span> n_tuple <span class="keyword">in</span> PATHROOT:</span><br><span class="line">        <span class="comment">#找到最佳路径中此节点对应的子节点</span></span><br><span class="line">        parent, t_playout, reward, t_childrens = n_tuple</span><br><span class="line">        <span class="keyword">if</span> i == parent[<span class="number">0</span>] <span class="keyword">and</span> j == parent[<span class="number">1</span>]:</span><br><span class="line">            PATHROOT = t_childrens</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 蒙特卡洛树搜索</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mctsNextPosition</span>(<span class="params">board,ucb_c,playerNum</span>): <span class="comment">#棋盘、ucb公式中常数c的值</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">ucb</span>(<span class="params">node_tuple, t</span>): <span class="comment">#t为进行循环的次数</span></span><br><span class="line">        <span class="comment">#  返回各个结点用于进行ucb算法的值</span></span><br><span class="line">        name, nplayout, reward, childrens = node_tuple <span class="comment">#四个值分别对应 落点位置、模拟对局次数 、赢的次数、子节点</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> nplayout == <span class="number">0</span>: <span class="comment">#避免意外情况</span></span><br><span class="line">            nplayout = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> t == <span class="number">0</span>:<span class="comment">#避免意外情况</span></span><br><span class="line">            t = <span class="number">1</span></span><br><span class="line">        <span class="comment">#reward 是赢的次数 nplayout是模拟对局次数,cval是常数</span></span><br><span class="line">        <span class="keyword">return</span> (reward / nplayout) + ucb_c * math.sqrt(math.log(t) / nplayout)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">find_playout</span>(<span class="params">tep_board, tile, depth=<span class="number">0</span></span>): <span class="comment">#对tep_board进行了系列随机落点后，返回最终结果胜负</span></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">eval_board</span>(<span class="params">tep_board</span>): <span class="comment">#比较二者的棋子数目，判断胜负</span></span><br><span class="line">            tileNum,negTilenum = countTile(tep_board,playerNum)</span><br><span class="line">            <span class="keyword">if</span> tileNum &gt; negTilenum:</span><br><span class="line">                <span class="comment">#tile代表的棋胜</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">                <span class="comment">#tile代表的棋负</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(depth&lt;<span class="number">120</span>):<span class="comment">#进行最多120次递归后返回结果</span></span><br><span class="line">            turn_positions = possible_positions(tep_board, tile)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(turn_positions) == <span class="number">0</span>: <span class="comment">#如果没位置下棋，切换到对手回合</span></span><br><span class="line">                tile = -tile</span><br><span class="line">                neg_turn_positions = possible_positions(tep_board, tile)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(neg_turn_positions) == <span class="number">0</span>: <span class="comment">#对方也没位置下棋，结束游戏</span></span><br><span class="line">                    <span class="keyword">return</span> eval_board(tep_board)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    turn_positions = neg_turn_positions</span><br><span class="line"></span><br><span class="line">            temp = turn_positions[random.randrange(<span class="number">0</span>, <span class="built_in">len</span>(turn_positions))] <span class="comment"># 随机放置一个棋子</span></span><br><span class="line">            updateBoard(tep_board, tile, temp[<span class="number">0</span>], temp[<span class="number">1</span>])</span><br><span class="line">            <span class="comment"># 转换轮次</span></span><br><span class="line">            tile = -tile</span><br><span class="line">            depth+=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> eval_board(tep_board)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#扩展结点,返回tep_board的子节点数组</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">expand</span>(<span class="params">tep_board, tile</span>):</span><br><span class="line">        positions = possible_positions(tep_board, tile)</span><br><span class="line">        result = []</span><br><span class="line">        <span class="keyword">for</span> temp <span class="keyword">in</span> positions:</span><br><span class="line">            result.append((temp, <span class="number">0</span>, <span class="number">0</span>, []))</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">find_path</span>(<span class="params">root</span>):</span><br><span class="line">        current_path = []</span><br><span class="line">        child = root</span><br><span class="line">        parent_playout = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> child: <span class="comment">#计算父节点遍历过的次数</span></span><br><span class="line">            name, nplayout, reward, childrens = item</span><br><span class="line">            parent_playout+=nplayout</span><br><span class="line">        isMCTSTurn = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(child) == <span class="number">0</span>: <span class="comment">#无可落子的位置,直接结束</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            maxidxlist = [<span class="number">0</span>]</span><br><span class="line">            cidx = <span class="number">0</span></span><br><span class="line">            <span class="keyword">if</span> isMCTSTurn:</span><br><span class="line">                maxval = -<span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                maxval = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> n_tuple <span class="keyword">in</span> child:  <span class="comment">#对每一个可落子的位置进行最大最小搜索</span></span><br><span class="line">                <span class="comment">#实现最大最小搜索，电脑选择最大值，玩家选择最小值</span></span><br><span class="line">                <span class="keyword">if</span> isMCTSTurn:</span><br><span class="line">                    <span class="comment">#ucb返回各个结点的值，之后就依靠这个值来进行最大最小算法</span></span><br><span class="line">                    cval = ucb(n_tuple, parent_playout)</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> cval &gt;= maxval:</span><br><span class="line">                        <span class="comment"># 获取子结点中值最大的一项,并记录其id(即cidx)</span></span><br><span class="line">                        <span class="keyword">if</span> cval == maxval:</span><br><span class="line">                            maxidxlist.append(cidx)</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            maxidxlist = [cidx]</span><br><span class="line">                            maxval = cval</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    cval = ucb(n_tuple, parent_playout)</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> cval &lt;= maxval:</span><br><span class="line">                        <span class="comment">#获取子节点中值最小的一项</span></span><br><span class="line">                        <span class="keyword">if</span> cval == maxval:</span><br><span class="line">                            maxidxlist.append(cidx)</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            maxidxlist = [cidx]</span><br><span class="line">                            maxval = cval</span><br><span class="line"></span><br><span class="line">                cidx += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 从最值结点中随机选择一处落子</span></span><br><span class="line">            maxidx = maxidxlist[random.randrange(<span class="number">0</span>, <span class="built_in">len</span>(maxidxlist))]</span><br><span class="line">            parent, t_playout, reward, t_childrens = child[maxidx]</span><br><span class="line">            current_path.append(parent)</span><br><span class="line">            parent_playout = t_playout</span><br><span class="line">            <span class="comment"># 选择子节点进入下一次循环</span></span><br><span class="line">            child = t_childrens</span><br><span class="line">            isMCTSTurn = <span class="keyword">not</span> (isMCTSTurn)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 返回根据最大最小规则选择出来的一条路径</span></span><br><span class="line">        <span class="keyword">return</span> current_path</span><br><span class="line"></span><br><span class="line">    <span class="keyword">global</span> PATHROOT <span class="comment">#节点树</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(PATHROOT) == <span class="number">0</span>:</span><br><span class="line">        PATHROOT = expand(board,playerNum)</span><br><span class="line">        <span class="keyword">for</span> index, rootChild <span class="keyword">in</span> <span class="built_in">enumerate</span>(PATHROOT):</span><br><span class="line">            current_board =  copy.deepcopy(board) <span class="comment">#current_board记录在某处落子后的棋盘</span></span><br><span class="line">            parent, t_playout, reward, t_childrens = rootChild</span><br><span class="line">            updateBoard(current_board, playerNum, parent[<span class="number">0</span>] , parent[<span class="number">1</span>]) <span class="comment">#对落子于此处的棋盘进行随机落子，使得能对其使用ucb算法（避免除以0的情况）</span></span><br><span class="line">            t_playout =<span class="number">10</span></span><br><span class="line">            reward = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">21</span>):</span><br><span class="line">                current_board2 = copy.deepcopy(current_board) <span class="comment">#current_board2是用来进行随机落点判断胜负的临时表盘</span></span><br><span class="line">                isWon = find_playout(current_board2, -playerNum) <span class="comment">#tile表示下一步谁执行</span></span><br><span class="line">                <span class="keyword">if</span>(isWon):</span><br><span class="line">                    reward+=<span class="number">1</span></span><br><span class="line">            PATHROOT[index] = (parent,t_playout,reward,t_childrens)</span><br><span class="line">    <span class="comment">#记时，防止循环时间过长</span></span><br><span class="line">    start_time = time.time()</span><br><span class="line">    slectTime = <span class="number">0</span> <span class="comment">#选择过程耗费的时间</span></span><br><span class="line">    expendTime = <span class="number">0</span><span class="comment">#扩展过程耗费的时间</span></span><br><span class="line">    simulationTime = <span class="number">0</span> <span class="comment">#模拟过程耗费的时间</span></span><br><span class="line">    BackTime = <span class="number">0</span> <span class="comment">#回溯过程耗费的时间</span></span><br><span class="line"></span><br><span class="line">    simulationTimes = <span class="number">0</span></span><br><span class="line">    looptime = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> loop <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">30</span>): <span class="comment">#总的遍历</span></span><br><span class="line">        looptime += <span class="number">1</span></span><br><span class="line">        current_board =  copy.deepcopy(board) <span class="comment">#current_board记录在某处落子后的棋盘</span></span><br><span class="line">        <span class="comment"># 思考最大时间限制</span></span><br><span class="line">        <span class="keyword">if</span> (time.time() - start_time) &gt;= MAX_THINK_TIME:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># current_path是一个放置棋子的位置列表，根据此列表进行后续操作</span></span><br><span class="line">        tempStartTime = time.time() <span class="comment">#选择过程</span></span><br><span class="line">        current_path = find_path(PATHROOT) <span class="comment"># find_path返回:ucb算法基于root蕴含的信息,获取的最佳路径(从头结点开始的，最佳子节点在各级child数组中的index数组)，</span></span><br><span class="line">        tempEndTime = time.time()</span><br><span class="line">        slectTime += tempEndTime-tempStartTime</span><br><span class="line"></span><br><span class="line">        tile = playerNum</span><br><span class="line">        <span class="keyword">for</span> temp <span class="keyword">in</span> current_path:</span><br><span class="line">            <span class="comment">#将通过ucb算法得到的路径整合到一个初始棋盘中</span></span><br><span class="line">            updateBoard(current_board, tile, temp[<span class="number">0</span>], temp[<span class="number">1</span>]) <span class="comment">#最终current_board为根据路径落子得到的棋盘</span></span><br><span class="line">            tile = -tile</span><br><span class="line"></span><br><span class="line">        <span class="comment">#扩展与模拟过程</span></span><br><span class="line">        child = PATHROOT</span><br><span class="line">        randomTime = <span class="number">0</span> <span class="comment">#进行随机落子的盘数</span></span><br><span class="line">        rewardSum = <span class="number">0</span> <span class="comment">#胜利总次数</span></span><br><span class="line">        <span class="keyword">for</span> temp <span class="keyword">in</span> current_path:</span><br><span class="line">            <span class="comment">#遍历最佳路径</span></span><br><span class="line">            idx = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> n_tuple <span class="keyword">in</span> child:</span><br><span class="line">                <span class="comment">#找到最佳路径中此节点对应的子节点</span></span><br><span class="line">                parent, t_playout, reward, t_childrens = n_tuple</span><br><span class="line">                <span class="keyword">if</span> temp[<span class="number">0</span>] == parent[<span class="number">0</span>] <span class="keyword">and</span> temp[<span class="number">1</span>] == parent[<span class="number">1</span>]:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                idx += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> temp[<span class="number">0</span>] == parent[<span class="number">0</span>] <span class="keyword">and</span> temp[<span class="number">1</span>] == parent[<span class="number">1</span>]:</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(t_childrens) == <span class="number">0</span>:</span><br><span class="line">                    <span class="comment">#找到路径的叶子结点，进行拓展</span></span><br><span class="line">                    tempStartTime = time.time()</span><br><span class="line">                    t_childrens = expand(current_board, tile) <span class="comment">#扩展过程</span></span><br><span class="line">                    tempEndTime = time.time()</span><br><span class="line">                    expendTime += tempEndTime-tempStartTime</span><br><span class="line">                    randomTime = <span class="built_in">len</span>(t_childrens) *<span class="number">10</span> <span class="comment">#进行随机落子的盘数</span></span><br><span class="line">                    rewardSum = <span class="number">0</span> <span class="comment">#胜利总次数</span></span><br><span class="line">                    tempStartTime = time.time() <span class="comment">#模拟过程</span></span><br><span class="line">                    <span class="keyword">for</span> index, rootChild <span class="keyword">in</span> <span class="built_in">enumerate</span>(t_childrens):<span class="comment">#对落子于此处的棋盘进行随机落子，使得能对其使用ucb算法（避免除以0的情况）</span></span><br><span class="line">                        child_board =  copy.deepcopy(current_board) <span class="comment">#current_board记录在某处落子后的棋盘</span></span><br><span class="line">                        child_parent, child_playout, reward, child_childrens = rootChild</span><br><span class="line">                        tempTile = tile</span><br><span class="line">                        tempNegTile = -tempTile</span><br><span class="line">                        updateBoard(child_board, tempTile, child_parent[<span class="number">0</span>] , child_parent[<span class="number">1</span>])</span><br><span class="line">                        child_playout =<span class="number">10</span></span><br><span class="line">                        reward = <span class="number">0</span></span><br><span class="line">                        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">21</span>):</span><br><span class="line">                            current_board2 = copy.deepcopy(child_board) <span class="comment">#current_board2是用来进行随机落点判断胜负的临时表盘</span></span><br><span class="line">                            simulationTimes+=<span class="number">1</span></span><br><span class="line">                            isWon = find_playout(current_board2, tempNegTile) <span class="comment">#tile表示下一步谁执行</span></span><br><span class="line">                            <span class="keyword">if</span>(isWon):</span><br><span class="line">                                reward+=<span class="number">1</span></span><br><span class="line">                        rewardSum+=reward</span><br><span class="line">                        t_childrens[index] = (child_parent,child_playout,reward,child_childrens)</span><br><span class="line">                    tempEndTime = time.time()</span><br><span class="line">                    simulationTime += tempEndTime-tempStartTime</span><br><span class="line">                <span class="comment">#应用修改到本体</span></span><br><span class="line">                child[idx] = (parent, t_playout, reward, t_childrens)</span><br><span class="line">            <span class="comment">#继续处理子结点</span></span><br><span class="line">            child = t_childrens</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> randomTime!=<span class="number">0</span>:</span><br><span class="line">            tempStartTime = time.time() <span class="comment">#反向传播过程</span></span><br><span class="line">            child = PATHROOT</span><br><span class="line">            <span class="keyword">for</span> temp <span class="keyword">in</span> current_path:</span><br><span class="line">                <span class="comment">#遍历最佳路径</span></span><br><span class="line">                idx = <span class="number">0</span></span><br><span class="line">                <span class="keyword">for</span> n_tuple <span class="keyword">in</span> child:</span><br><span class="line">                    <span class="comment">#找到最佳路径中此节点对应的子节点</span></span><br><span class="line">                    parent, t_playout, reward, t_childrens = n_tuple</span><br><span class="line">                    <span class="keyword">if</span> temp[<span class="number">0</span>] == parent[<span class="number">0</span>] <span class="keyword">and</span> temp[<span class="number">1</span>] == parent[<span class="number">1</span>]:</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                    idx += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> temp[<span class="number">0</span>] == parent[<span class="number">0</span>] <span class="keyword">and</span> temp[<span class="number">1</span>] == parent[<span class="number">1</span>]:</span><br><span class="line">                    <span class="comment">#找到了对应的结点，修改场数与胜利数</span></span><br><span class="line">                    t_playout += randomTime</span><br><span class="line">                    reward += rewardSum</span><br><span class="line"></span><br><span class="line">                    <span class="comment">#应用修改到本体</span></span><br><span class="line">                    child[idx] = (parent, t_playout, reward, t_childrens)</span><br><span class="line">                <span class="comment">#继续处理子结点</span></span><br><span class="line">                child = t_childrens</span><br><span class="line">            tempEndTime = time.time()</span><br><span class="line">            BackTime += tempEndTime-tempStartTime</span><br><span class="line"></span><br><span class="line">    max_avg_reward = -<span class="number">1</span></span><br><span class="line">    mt_result = (<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">for</span> n_tuple <span class="keyword">in</span> PATHROOT:</span><br><span class="line">        parent, t_playout, reward, t_childrens = n_tuple</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (t_playout &gt; <span class="number">0</span>) <span class="keyword">and</span> (reward / t_playout &gt; max_avg_reward):</span><br><span class="line">            mt_result = parent</span><br><span class="line">            max_avg_reward = reward / t_playout</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;选择阶段用时&quot;</span>+ <span class="built_in">str</span>(slectTime))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;扩展阶段用时&quot;</span>+ <span class="built_in">str</span>(expendTime))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;循环次数为&quot;</span>+ <span class="built_in">str</span>(looptime))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;模拟次数为&quot;</span>+ <span class="built_in">str</span>(simulationTimes))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;模拟阶段用时&quot;</span>+ <span class="built_in">str</span>(simulationTime))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;回溯阶段用时&quot;</span>+ <span class="built_in">str</span>(BackTime))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> mt_result</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ai </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ai </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker学习</title>
      <link href="/post/other/learnDocker/"/>
      <url>/post/other/learnDocker/</url>
      
        <content type="html"><![CDATA[<blockquote><p>久仰Docker大名，但只是一直停留在听说过的程度。最近看到一个通过copilot转接gpt4的项目，其中需要用到Docker，于是打算系统学习一下</p></blockquote><blockquote><p>以下为windows下Docker的说明与使用</p></blockquote><h1 id="1-概念："><a href="#1-概念：" class="headerlink" title="1 概念："></a>1 概念：</h1><p>Docker是一种开源平台，用于自动化应用程序的部署、扩展和管理。它使用容器化技术，允许开发人员在轻量级、可移植的容器中打包应用程序及其所有依赖项</p><h1 id="2-使用："><a href="#2-使用：" class="headerlink" title="2 使用："></a>2 使用：</h1><h2 id="2-1-安装"><a href="#2-1-安装" class="headerlink" title="2.1 安装"></a>2.1 安装</h2><p>进入官网安装<a href="https://www.docker.com/products/docker-desktop/">Docker Desktop: The #1 Containerization Tool for Developers | Docker</a>，</p><p>而后打开，看看能否正常运行</p><h3 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><p>1.<strong>Docker Desktop Unexpected WSL error</strong></p><p><strong>描述</strong>：打开Docker后，或立刻，或一两分钟后应用崩溃，提示<strong>Docker Desktop Unexpected WSL error</strong></p><p><strong>问题解决：</strong></p><p>1.进入“控制面板”→”程序“→ “程序和功能”→”启用或关闭Window功能”</p><p>2.观察其中是否有Hyper-V</p><p>2.1 有则启用</p><p>2.2 无则创建一个.cmd文件，写入</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pushd <span class="string">&quot;%~dp0&quot;</span></span><br><span class="line">dir /b %SystemRoot%\servicing\Packages\*Hyper-V*.mum &gt;hyper-v.txt</span><br><span class="line"><span class="keyword">for</span> /f %%i <span class="title function_">in</span> <span class="params">(<span class="string">&#x27;findstr /i . hyper-v.txt 2^&gt;nul&#x27;</span>)</span> <span class="keyword">do</span> dism /online /norestart /add-<span class="keyword">package</span>:<span class="string">&quot;%SystemRoot%\servicing\Packages\%%i&quot;</span></span><br><span class="line">del hyper-v.txt</span><br><span class="line">Dism /online /enable-feature /featurename:Microsoft-Hyper-V-All /LimitAccess /ALL</span><br></pre></td></tr></table></figure><p>后用管理员身份运行。</p><p>3.以管理员身份打开cmd，执行命令：netsh winsock reset</p><p>完成后成功进入主界面</p><h2 id="2-2-将GitHub项目部署到-docker上"><a href="#2-2-将GitHub项目部署到-docker上" class="headerlink" title="2.2 将GitHub项目部署到 docker上"></a>2.2 将GitHub项目部署到 docker上</h2><ol><li>clone目标项目</li><li>进入项目目录，观察该目录是否有文件Dockerfile（Docker的部署依赖于Dockerfile）</li><li>执行命令</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t ProjectName .</span><br></pre></td></tr></table></figure><p>其中ProjectName为任意名称，与项目本身无关，末尾的句号不能省略</p><p>4.执行命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run ProjectName</span><br></pre></td></tr></table></figure><p>一次build后可以多次run(包括重启后),如果忘记了项目名可以执行命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><p>查看已build的所有项目</p>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信公众号相关爬虫</title>
      <link href="/post/python/get_wci_data/"/>
      <url>/post/python/get_wci_data/</url>
      
        <content type="html"><![CDATA[<h1 id="WCI指数半自动化统计"><a href="#WCI指数半自动化统计" class="headerlink" title="WCI指数半自动化统计"></a>WCI指数半自动化统计</h1><blockquote><p>学校部门要求计算学校公众号的wci指数，而这首先需要获取公众号一段时间内消息的阅读量、点赞数、在看数、以及是否为头条。学校历年都是让学生人力去统计，我试着人力统计了一下，真是又费时又费力，于是尝试整一个爬虫用来获取这几个指标。</p></blockquote><blockquote><p>参考文章：<a href="https://blog.csdn.net/qq_45722494/article/details/120191233">爬取微信公众号发布的所有文章（包括阅读数，在看数，点赞数）_爬取微信公众号文章-CSDN博客</a></p></blockquote><h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><p>微信无法像浏览器一样直接通过控制台查看网络通信，因此需要抓包软件，这里使用的是Fiddler,其他抓包软件，类似burpSuit，应该也可以</p><h1 id="关键"><a href="#关键" class="headerlink" title="关键"></a>关键</h1><p>本次抓包的关键在于：在哪里可以抓到包？</p><p>微信内容的展示分两处，如图</p><p>左边的是在微信内置浏览器中展示，而右边的是在微信app的框架中展示</p><p>其中，左边展示的内容是可以抓到包的，而右边不行（可能也只是我的技术没到）</p><p>因<img src="https://img-blog.csdnimg.cn/direct/62cecd91601c4096af75abdf3a2f2287.png" alt="图1"><br>此最主要的一点就是如何在左边（微信内置浏览器中）查看公众号的消息列表</p><h2 id="如何获取在内置浏览器中打开公众号的消息列表"><a href="#如何获取在内置浏览器中打开公众号的消息列表" class="headerlink" title="如何获取在内置浏览器中打开公众号的消息列表"></a>如何获取在内置浏览器中打开公众号的消息列表</h2><p>经过我的实验，所有公众号消息列表的url的格式为</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="comment">//mp.weixin.qq.com/mp/profile_ext?action=home&amp;__biz=MzkwMTUxMzEwMw==&amp;uin=&amp;key=&amp;devicetype=Windows+11+x64&amp;version=6309062f&amp;lang=zh_CN&amp;a8scene=7&amp;session_us=</span></span><br></pre></td></tr></table></figure><p>而唯一的差异，在于链接中的参数__biz，只要获取每个公众号自身的__biz，然后根据该__biz重铸其链接，而__biz，只需在打开公众号的任意一篇文章，该文章都会在内置浏览器中打开，并且链接中附带其所属公众号的__biz<br><img src="https://img-blog.csdnimg.cn/direct/a882975584214395ab0603b0a0284ee0.png#pic_center" alt="图2"></p><p>根据此值重构链接，然后把链接发送给微信好友，就可以在内置浏览器中打开公众号的消息列表了</p><p><img src="https://img-blog.csdnimg.cn/direct/fc635c02e0464a0390c4ae627b9acd4a.png#pic_center" alt="图3"></p><p>然后就可以开始研究抓哪些包了</p><h1 id="整理思路"><a href="#整理思路" class="headerlink" title="整理思路"></a>整理思路</h1><p>通过fiddler抓取进入消息列表的包，并且通过上下滑动内容使得页面加载更多数据，借此推理出前端的逻辑，抓取到的包如下<br><img src="https://img-blog.csdnimg.cn/direct/e7705cb2067840988d1aa4e654ced560.jpeg#pic_center" alt="图4"><br>通过观察每个包中的内容，可以推理出：</p><p>“3”：第一次打开时的整个界面，包括网页框架以及公众号的前十条内容</p><p>“7”：作用不详，据其url中的action为“urlcheck”，猜测其是检测该url是否正确</p><p>“8”，“38”，“44”，“90”：json文件，其中部分包含文章信息，部分不包含</p><p>观察包含文章信息的json文件的url，发现样式比较统一，并且可以直接使用浏览器进行访问 @</p><p><img src="https://img-blog.csdnimg.cn/direct/77bf9397cb3d4b90b03b0badd030735f.jpeg#pic_center" alt="图5"></p><p>抓取多个公众号的多条消息，大致分析出url的如下信息</p><p>1.使用GET方法，链接为&#x2F;mp&#x2F;profile_ext</p><p>2.具有值的参数如下</p><table><thead><tr><th>名称</th><th>值</th><th>意义</th><th>备注</th></tr></thead><tbody><tr><td>action</td><td>getmsg</td><td>获取消息</td><td>不变</td></tr><tr><td>__biz</td><td>不固定</td><td>公众号id</td><td>更换公众号时改变</td></tr><tr><td>f</td><td>json</td><td>编码格式</td><td>不变</td></tr><tr><td>offset</td><td>10</td><td>偏移量</td><td>可不变</td></tr><tr><td>count</td><td>10</td><td>接受消息数量</td><td>可不变</td></tr><tr><td>is_ok</td><td>1</td><td>是否完成？</td><td>不变</td></tr><tr><td>uin</td><td>不固定</td><td>账户凭证之一？</td><td>更换账号后可能要改变</td></tr><tr><td>key</td><td>不固定</td><td>密匙</td><td>更换公众号、重新登陆后都要重新设定</td></tr><tr><td>pass_ticket</td><td>不固定</td><td>账户凭证之一？</td><td>更换公众号、重新登陆后都要重新设定</td></tr><tr><td>appmsg_token</td><td>不固定</td><td>账户凭证之一？</td><td>更换公众号、重新登陆后都要重新设定</td></tr><tr><td>x5</td><td>0</td><td>未知</td><td>不变</td></tr></tbody></table><p>根据以上信息，只需获取一个公众号消息的原始请求，就可以在配置后使用爬虫获取其所有的历史消息</p><p>接着分析这个json文件</p><p><img src="https://img-blog.csdnimg.cn/direct/739aaedc1af04e01b8f268fd0bea33da.jpeg#pic_center" alt="图6"></p><p>可以看到，消息相关的信息在该json文件的general_msg_list，且该general_msg_list为一个list，每一个元素对应一条消息，属性如图<br><img src="https://img-blog.csdnimg.cn/direct/45bf7a1520c34e0ebb7c6bb15883c5b8.jpeg#pic_center" alt="图7"></p><p>比较重要的有</p><table><thead><tr><th>属性名</th><th>意义</th></tr></thead><tbody><tr><td>content_url</td><td>消息链接</td></tr><tr><td>title</td><td>标题</td></tr><tr><td>datetime</td><td>时间戳</td></tr></tbody></table><p>以上是对于消息列表的处理，接下来是对单个消息的处理，</p><p>打开任意一篇公众号的文章，抓包，发现对于点赞、观看、在看数来源于&#x2F;mp&#x2F;getappmsgext的链接</p><p><img src="https://img-blog.csdnimg.cn/direct/61d3bf25420b45659c25478629eddb18.png#pic_center" alt="图8"></p><p>这个请求使用的是post方法，在url中的有意义参数有</p><table><thead><tr><th>名称</th><th>值</th><th>意义</th><th>备注</th></tr></thead><tbody><tr><td>f</td><td>json</td><td>编码格式</td><td>不变</td></tr><tr><td>uin</td><td>不固定</td><td>用户标识</td><td>同之前</td></tr><tr><td>key</td><td>不固定</td><td>账户凭证之一</td><td>同之前</td></tr><tr><td>pass_ticket</td><td>不固定</td><td>账户凭证之一</td><td>同之前</td></tr><tr><td>wxtoken</td><td>777</td><td>位置</td><td>固定</td></tr><tr><td>devicetype</td><td>Windows%26nbsp%3B11%26nbsp%3Bx64</td><td>使用设备</td><td>可固定</td></tr><tr><td>clientversion</td><td>6309062f</td><td>微信版本？</td><td>可固定</td></tr><tr><td>__biz</td><td>不固定</td><td>公帐号凭证</td><td>同之前</td></tr><tr><td>appmsg_token</td><td>不固定</td><td>账户凭证之一</td><td>不固定</td></tr></tbody></table><p>由于是post,所有除url的参数外，还需要注意param,参考文章<a href="https://blog.csdn.net/qq_45722494/article/details/120191233">爬取微信公众号发布的所有文章（包括阅读数，在看数，点赞数）_爬取微信公众号文章-CSDN博客</a>中提到的请求设置方式，再加上相关的cookie和data</p><p>基于以上信息，就可以开始着手写爬虫了</p><h1 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> openpyxl <span class="keyword">import</span> Workbook</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment">#结果保存在文件同目录下的result.xlsx</span></span><br><span class="line"><span class="comment">#------------------------以下为自定义配置部分---------------</span></span><br><span class="line"><span class="comment"># 时间间隔</span></span><br><span class="line">starttime = <span class="string">&quot;2023-1-1&quot;</span> <span class="comment">#统计开始时间,年月日以-分割</span></span><br><span class="line">endtime = <span class="string">&quot;2024-1-1&quot;</span>   <span class="comment">#统计结束时间，格式同上,置空时即视为程序执行时间</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 起始的偏移量，如未理解代码逻辑，则置0即可</span></span><br><span class="line">offset = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#url配置，请将公众号抓到的包的链接复制于此处</span></span><br><span class="line"><span class="comment">#（请确保基础路径是https://mp.weixin.qq.com/mp/profile_ext）</span></span><br><span class="line"><span class="comment"># 此处的链接在浏览器直接打开的结果如图5</span></span><br><span class="line">all_link = <span class="string">&quot;https://mp.weixin.qq.com/mp/profile_ext?action=getmsg&amp;__biz=MzkwMTUxMzEwMw==&amp;f=json&amp;offset=10&amp;count=10&amp;is_ok=1&amp;scene=&amp;uin=MTEyNOTI4N%3D%3D&amp;key=72871c9ef4aa822373d071fa2aac825d375ec78c6c11ba412f14bbcb2533af3c8b7f6156ec356de127f71e88dd0b64c2af109cee96acefd0544e6aeb52bcb3d74df69647c26b0fcdf3091d3816d66a5f70b977da97c9a7aec5052af9a10d664dba18e9cc1a69c8d7cc4a00f26004bcbe7215c90ecf0ced786113b3b320277f1c&amp;pass_ticket=4EIV4uG5foBxl%2Bm02hTwXzNCw2wJk%2BBqp%2Fi%2BAYopOIgLccQ%2FY52S9WZHwjQ9YThxlxLyDgD2Gs5AvWQJtxzb2g%3D%3D&amp;wxtoken=&amp;appmsg_token=1253_ldTkMaQxVEVucYqTFt6Iamcqsjr6pqOkukOsFg~~&amp;x5=0&amp;f=json&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#---------------若未理解程序代码逻辑,以下部分请勿修改-----------------</span></span><br><span class="line"><span class="comment">#通过all_link获取链接</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_url</span>(<span class="params">link</span>):</span><br><span class="line">    pattern = <span class="string">r&#x27;(.+?)&amp;offset=(\d+)(.+)$&#x27;</span></span><br><span class="line">    <span class="keyword">match</span> = re.<span class="keyword">match</span>(pattern,link)</span><br><span class="line">    before = <span class="string">&quot;&quot;</span></span><br><span class="line">    after = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">match</span>:</span><br><span class="line">        before = <span class="keyword">match</span>.group(<span class="number">1</span>)</span><br><span class="line">        before += <span class="string">&quot;&amp;offset=&quot;</span></span><br><span class="line">        after = <span class="keyword">match</span>.group(<span class="number">3</span>)</span><br><span class="line">    <span class="keyword">return</span> before,after</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_base_info</span>(<span class="params">url</span>):</span><br><span class="line">    __biz = <span class="string">&quot;&quot;</span></span><br><span class="line">    uni = <span class="string">&quot;&quot;</span></span><br><span class="line">    key = <span class="string">&quot;&quot;</span></span><br><span class="line">    pass_ticket = <span class="string">&quot;&quot;</span></span><br><span class="line">    appmsg_token = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 定义正则表达式</span></span><br><span class="line">    regex = re.<span class="built_in">compile</span>(<span class="string">r&#x27;__biz=([^&amp;]+).*?uin=([^&amp;]+).*?key=([^&amp;]+).*?pass_ticket=([^&amp;]+).*?appmsg_token=([^&amp;]+)&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 匹配正则表达式</span></span><br><span class="line">    <span class="keyword">match</span> = regex.search(url)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 提取参数值</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">match</span>:</span><br><span class="line">        __biz = <span class="keyword">match</span>.group(<span class="number">1</span>)</span><br><span class="line">        uni = <span class="keyword">match</span>.group(<span class="number">2</span>)</span><br><span class="line">        key = <span class="keyword">match</span>.group(<span class="number">3</span>)</span><br><span class="line">        pass_ticket = <span class="keyword">match</span>.group(<span class="number">4</span>)</span><br><span class="line">        appmsg_token = <span class="keyword">match</span>.group(<span class="number">5</span>)</span><br><span class="line">    <span class="keyword">return</span> __biz,uni,key,pass_ticket,appmsg_token</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_passage_info</span>(<span class="params">url</span>):</span><br><span class="line">    mid = <span class="string">&quot;&quot;</span></span><br><span class="line">    idx = <span class="string">&quot;&quot;</span></span><br><span class="line">    sn = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 定义正则表达式</span></span><br><span class="line">    regex = re.<span class="built_in">compile</span>(<span class="string">r&#x27;mid=(\d+).*?idx=(\d+).*?sn=([^&amp;]+)&#x27;</span>)</span><br><span class="line">    <span class="comment"># 匹配正则表达式</span></span><br><span class="line">    <span class="keyword">match</span> = regex.search(url)</span><br><span class="line">    <span class="comment"># 提取参数值</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">match</span>:</span><br><span class="line">        mid = <span class="keyword">match</span>.group(<span class="number">1</span>)</span><br><span class="line">        idx = <span class="keyword">match</span>.group(<span class="number">2</span>)</span><br><span class="line">        sn = <span class="keyword">match</span>.group(<span class="number">3</span>)</span><br><span class="line">    <span class="keyword">return</span> mid,idx,sn</span><br><span class="line"></span><br><span class="line"><span class="comment">#<span class="doctag">TODO:</span>测试变量</span></span><br><span class="line">complete_num=<span class="number">0</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_result</span>(<span class="params">url,Cookies,params</span>):</span><br><span class="line">    <span class="comment">#请求头</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&quot;Cookie&quot;</span>:Cookies,</span><br><span class="line">        <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36 NetType/WIFI MicroMessenger/7.0.20.1781(0x6700143B) WindowsWechat(0x6309062f) XWEB/8519 Flue&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;is_only_read&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;is_temp_url&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">        <span class="string">&quot;appmsg_type&quot;</span>: <span class="string">&quot;9&quot;</span>,</span><br><span class="line">        <span class="string">&#x27;reward_uin_count&#x27;</span>: <span class="string">&#x27;0&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    params[<span class="string">&quot;mid&quot;</span>],params[<span class="string">&quot;idx&quot;</span>],params[<span class="string">&quot;sn&quot;</span>]=get_passage_info(url)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># post请求提交后，将返回的respone转为json</span></span><br><span class="line">    url = <span class="string">&quot;http://mp.weixin.qq.com/mp/getappmsgext&quot;</span></span><br><span class="line">    time.sleep(<span class="number">2</span>) <span class="comment">#请求频繁频率 2s：无频繁; 1s：34条后显示频繁;1.5: 35条后显示频繁；1.75s:37条后出现问题</span></span><br><span class="line">    obj = requests.post(url, headers=headers, data=data, params=params).json()</span><br><span class="line">    <span class="comment"># print(obj)</span></span><br><span class="line">    try_time=<span class="number">1</span> <span class="comment">#用来防止死循环</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span>(<span class="string">&quot;appmsgstat&quot;</span> <span class="keyword">in</span> obj) :</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;进行&quot;</span>+<span class="built_in">str</span>(complete_num)+<span class="string">&quot;条后出现问题&quot;</span>)</span><br><span class="line">        <span class="keyword">while</span>((<span class="keyword">not</span>(<span class="string">&quot;appmsgstat&quot;</span> <span class="keyword">in</span> obj))<span class="keyword">and</span> try_time&lt;<span class="number">10</span>): <span class="comment">#有时会请求频繁导致请求失败则需要先暂停一段时间</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;发生错误，响应结果为:&quot;</span>+<span class="built_in">str</span>(obj))</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;进程将于20秒后尝试重新请求&quot;</span>)</span><br><span class="line">            time.sleep(<span class="number">20</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;第&quot;</span>+<span class="built_in">str</span>(try_time)+<span class="string">&quot;次尝试&quot;</span>)</span><br><span class="line">            obj = requests.post(url, headers=headers, data=data, params=params).json()</span><br><span class="line">            try_time+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> try_time==<span class="number">10</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;这一条请人工检测&quot;</span>,<span class="string">&quot;这一条请人工检测&quot;</span>,<span class="string">&quot;这一条请人工检测&quot;</span></span><br><span class="line">    <span class="comment"># 获取到阅读数</span></span><br><span class="line">    read_num = obj[<span class="string">&#x27;appmsgstat&#x27;</span>][<span class="string">&#x27;read_num&#x27;</span>]</span><br><span class="line">    <span class="comment"># 获取到点赞数</span></span><br><span class="line">    like_num = obj[<span class="string">&quot;appmsgstat&quot;</span>][<span class="string">&quot;old_like_num&quot;</span>]</span><br><span class="line">    <span class="comment"># 获取到在看数</span></span><br><span class="line">    reading_num = obj[<span class="string">&quot;appmsgstat&quot;</span>][<span class="string">&quot;like_num&quot;</span>]</span><br><span class="line">    <span class="keyword">return</span> read_num,like_num,reading_num</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment">#构建url</span></span><br><span class="line">    <span class="comment"># url = baseurl + &quot;&amp;__biz=&quot; + __biz + &quot;&amp;f=json&amp;offset=&quot; + offset + &quot;&amp;count=&quot; + count + &quot;&amp;is_ok=1&amp;scene=&amp;uin=&quot; + uni + &quot;&amp;key=&quot; + key + &quot;&amp;pass_ticket&quot; + pass_ticket + &quot;&amp;wxtoken=&amp;appmsg_token=&quot; + appmsg_token + &quot;&amp;x5=0&amp;f=json&quot;</span></span><br><span class="line">    <span class="comment">#url1+offset值+url2即为最终使用url</span></span><br><span class="line">    __biz,uni,key,pass_ticket,appmsg_token=get_base_info(all_link)</span><br><span class="line">    pre_url,aft_url = get_url(all_link)</span><br><span class="line"></span><br><span class="line">    Cookies = <span class="string">&quot;pgv_pvid=9348645722; wxuin=1127839285; lang=zh_CN; rewardsn=; wxtokenkey=777; devicetype=Windows11x64; version=6309062f; appmsg_token=&quot;</span>+appmsg_token+<span class="string">&quot;; pass_ticket=&quot;</span>+ pass_ticket+<span class="string">&quot;; wap_sid2=CLXs5ZkEEooBeV9ISEwtOXlldXJXMG9HMzhLdzQtLWxvQ3llSmJ4aTFpV0doTXl4VUZ6VklTd3RRNzk1aXh6ancySHc3VkRzVldsbWw2OVQzQ21NaDVzMW5oaEZnRFJNT2luSk10dGFqVU1ITVJQZFN2RTJhczZDVUttYmsxUTZWQTRFUXpndkhUMmdzTVNBQUF+MILUvK0GOA1AAQ==&quot;</span></span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">&quot;__biz&quot;</span>: __biz,</span><br><span class="line">        <span class="string">&quot;mid&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;sn&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;idx&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;key&quot;</span>: key,</span><br><span class="line">        <span class="string">&quot;pass_ticket&quot;</span>: pass_ticket,</span><br><span class="line">        <span class="string">&quot;appmsg_token&quot;</span>: appmsg_token,</span><br><span class="line">        <span class="string">&quot;uin&quot;</span>: uni,</span><br><span class="line">        <span class="string">&quot;wxtoken&quot;</span>: <span class="string">&quot;777&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#构建时间戳</span></span><br><span class="line">    start_time_stamp = <span class="built_in">int</span>(datetime.strptime(starttime,<span class="string">&quot;%Y-%m-%d&quot;</span>).timestamp())</span><br><span class="line">    <span class="keyword">if</span> endtime :</span><br><span class="line">        end_time_stamp = <span class="built_in">int</span>(datetime.strptime(endtime,<span class="string">&quot;%Y-%m-%d&quot;</span>).timestamp())</span><br><span class="line">    <span class="keyword">else</span> :</span><br><span class="line">        end_time_stamp = <span class="built_in">int</span>(datetime.now().timestamp())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建Excel文件和工作表</span></span><br><span class="line">    workbook = Workbook()</span><br><span class="line">    worksheet = workbook.active</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 添加表头</span></span><br><span class="line">    worksheet.append([<span class="string">&quot;offset&quot;</span>,<span class="string">&quot;标题&quot;</span>, <span class="string">&quot;URL&quot;</span>, <span class="string">&quot;时间&quot;</span>,<span class="string">&quot;是否为头条&quot;</span>,<span class="string">&quot;阅读量&quot;</span>,<span class="string">&quot;点赞数&quot;</span>,<span class="string">&quot;在看数&quot;</span>])</span><br><span class="line"></span><br><span class="line">    flag = <span class="literal">True</span> <span class="comment">#是否继续循环</span></span><br><span class="line">    <span class="comment"># 发送GET请求</span></span><br><span class="line">    <span class="keyword">while</span>(flag):</span><br><span class="line">        url = pre_url + <span class="built_in">str</span>(offset) + aft_url</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;正在进行的offset为&quot;</span>+<span class="built_in">str</span>(offset))</span><br><span class="line">        <span class="comment"># print(data)</span></span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">        response = requests.get(url)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 解析JSON响应</span></span><br><span class="line">        data = response.json()</span><br><span class="line">        <span class="keyword">if</span> data.get(<span class="string">&quot;general_msg_list&quot;</span>, <span class="string">&quot;&quot;</span>)==<span class="string">&quot;&quot;</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;请求出现错误,可能是url错误或过期&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;目前offset为&quot;</span>+<span class="built_in">str</span>(offset))</span><br><span class="line">            flag = <span class="literal">False</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 提取所需数据</span></span><br><span class="line">        msg_list = json.loads(data.get(<span class="string">&quot;general_msg_list&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">        entries = msg_list.get(<span class="string">&quot;list&quot;</span>, [])</span><br><span class="line">        <span class="comment"># 如果遍历完了该公众号所有的内容，那么其entries长度就为0</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(entries)==<span class="number">0</span>:</span><br><span class="line">            flag = <span class="literal">False</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 遍历每个条目并写入Excel</span></span><br><span class="line">        <span class="keyword">for</span> entry <span class="keyword">in</span> entries:</span><br><span class="line">            app_msg_ext_info = entry.get(<span class="string">&quot;app_msg_ext_info&quot;</span>, &#123;&#125;)</span><br><span class="line">            comm_msg_info = entry.get(<span class="string">&quot;comm_msg_info&quot;</span>, &#123;&#125;)</span><br><span class="line"></span><br><span class="line">            title = app_msg_ext_info.get(<span class="string">&quot;title&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">            content_url = app_msg_ext_info.get(<span class="string">&quot;content_url&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">            datetime_str = comm_msg_info.get(<span class="string">&quot;datetime&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 将datetime字符串转换为datetime对象</span></span><br><span class="line">            <span class="keyword">if</span> datetime_str:</span><br><span class="line">                datetime_obj = datetime.fromtimestamp(<span class="built_in">int</span>(datetime_str))</span><br><span class="line">                tempstamp =datetime_obj.timestamp()</span><br><span class="line">                datetime_str = datetime_obj.strftime(<span class="string">&quot;%Y-%m-%d&quot;</span>)</span><br><span class="line">                <span class="keyword">if</span> tempstamp&gt;end_time_stamp:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;文章的时间为:&quot;</span>+ datetime_str +<span class="string">&quot;,不在要求时间&quot;</span>)</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                <span class="keyword">if</span> tempstamp&lt;start_time_stamp:</span><br><span class="line">                    flag = <span class="literal">False</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">if</span> content_url!=<span class="string">&quot;&quot;</span>: <span class="comment">#有时候出现一些为0的项，难以理解</span></span><br><span class="line">                    read_num,like_num,reading_num = get_result(content_url,Cookies,params)</span><br><span class="line">                    <span class="comment">#添加当日头条</span></span><br><span class="line">                    worksheet.append([offset,title,content_url,datetime_str,<span class="string">&quot;是&quot;</span>,read_num,like_num,reading_num])</span><br><span class="line">                    complete_num+=<span class="number">1</span></span><br><span class="line">                    workbook.save(<span class="string">&quot;result.xlsx&quot;</span>)</span><br><span class="line">                    <span class="built_in">print</span>(title)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;时间: &quot;</span>+datetime_str)</span><br><span class="line"></span><br><span class="line">                <span class="comment">#添加非头条</span></span><br><span class="line">                childs = app_msg_ext_info.get(<span class="string">&quot;multi_app_msg_item_list&quot;</span>,[])</span><br><span class="line">                <span class="keyword">for</span> child <span class="keyword">in</span> childs:</span><br><span class="line">                    title = child.get(<span class="string">&quot;title&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">                    <span class="built_in">print</span>(title)</span><br><span class="line">                    content_url = child.get(<span class="string">&quot;content_url&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">                    read_num,like_num,reading_num = get_result(content_url,Cookies,params)</span><br><span class="line">                    worksheet.append([offset,title,content_url,datetime_str,<span class="string">&quot;否&quot;</span>,read_num,like_num,reading_num])</span><br><span class="line">                    complete_num+=<span class="number">1</span></span><br><span class="line">                    workbook.save(<span class="string">&quot;result.xlsx&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> offset == <span class="number">10</span>: <span class="comment">#莫名其妙地，10后的下一个是21，而不是20</span></span><br><span class="line">            offset +=<span class="number">11</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            offset +=<span class="number">10</span></span><br><span class="line">    workbook.save(<span class="string">&quot;result.xlsx&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>通过这个代码可以获得公众号指定时间内发送的所有消息的相关数据，由于wci指数的计算公式在不断更新换代，在此就没有融入，还请读者根据这些数据自行计算。</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> openpyxl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>laTex的使用</title>
      <link href="/post/other/use%20of%20laTex/"/>
      <url>/post/other/use%20of%20laTex/</url>
      
        <content type="html"><![CDATA[<blockquote><p>被总监叫去一起写论文，因此需要学习一下latex的使用方法</p></blockquote><p>平台：<a href="https://www.overleaf.com/">overleaf</a></p><p>使用领域：攥写论文</p><h2 id="简单示例"><a href="#简单示例" class="headerlink" title="简单示例"></a>简单示例</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;article&#125; <span class="comment">%开头，定义文档的类型为article</span></span><br><span class="line"><span class="keyword">\title</span>&#123;Sections and Chapters&#125; <span class="comment">%标题</span></span><br><span class="line"><span class="keyword">\author</span>&#123;Gubert Farnsworth&#125; <span class="comment">%作者</span></span><br><span class="line"><span class="keyword">\date</span>&#123;August 2022&#125; <span class="built_in">&amp;</span>日期</span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125; <span class="comment">%开始文章主体</span></span><br><span class="line">  </span><br><span class="line"><span class="keyword">\maketitle</span> <span class="comment">%将标题、作者、日期设置为封面图</span></span><br><span class="line">  </span><br><span class="line"><span class="keyword">\tableofcontents</span> <span class="comment">%根据内容自动生成目录</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;Introduction&#125; <span class="comment">%第一部分</span></span><br><span class="line">   </span><br><span class="line">This is the first section.</span><br><span class="line">      </span><br><span class="line">Lorem  ipsum  dolor  sit  amet,  consectetuer  adipiscing  </span><br><span class="line">elit.   Etiam  lobortisfacilisis sem.  Nullam nec mi et </span><br><span class="line">neque pharetra sollicitudin.  Praesent imperdietmi nec ante. </span><br><span class="line">Donec ullamcorper, felis non sodales...</span><br><span class="line">       </span><br><span class="line"><span class="keyword">\section</span>*&#123;Unnumbered Section&#125; <span class="comment">%另外</span></span><br><span class="line"><span class="keyword">\addcontentsline</span>&#123;toc&#125;&#123;section&#125;&#123;Unnumbered Section&#125; <span class="comment">%不缩进文本</span></span><br><span class="line"></span><br><span class="line">Lorem ipsum dolor sit amet, consectetuer adipiscing elit.  </span><br><span class="line">Etiam lobortis facilisissem.  Nullam nec mi et neque pharetra </span><br><span class="line">sollicitudin.  Praesent imperdiet mi necante...</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;Second Section&#125; <span class="comment">%第二部分</span></span><br><span class="line">       </span><br><span class="line">Lorem ipsum dolor sit amet, consectetuer adipiscing elit.  </span><br><span class="line">Etiam lobortis facilisissem.  Nullam nec mi et neque pharetra </span><br><span class="line">sollicitudin.  Praesent imperdiet mi necante...</span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125; <span class="comment">%文档结束</span></span><br></pre></td></tr></table></figure><h2 id="文本标签介绍"><a href="#文本标签介绍" class="headerlink" title="文本标签介绍"></a>文本标签介绍</h2><table><thead><tr><th>标签名</th><th>解释</th><th>示例</th></tr></thead><tbody><tr><td>title</td><td>标题</td><td>\title{My first LaTeX document}</td></tr><tr><td>author</td><td>作者</td><td>\author{Hubert Farnsworth}</td></tr><tr><td>thanks</td><td>鸣谢，加在&#x2F;author中，在注释中显示</td><td>\author{Hubert Farnsworth\thanks{Funded by the Overleaf team.}}</td></tr><tr><td>date</td><td>日期</td><td>\date{August 2022}</td></tr><tr><td>today</td><td>日期的平替，每次编译后改变日期</td><td>\today</td></tr><tr><td>maketitle</td><td>将title\author\date标签实例化</td><td>见文章示例</td></tr><tr><td>textbf</td><td>粗体</td><td>Some of the \textbf{greatest}</td></tr><tr><td>textit</td><td>斜体</td><td>were made by \textbf{\textit{accident}}.</td></tr><tr><td>underline</td><td>下划线</td><td>discoveries in \underline{science}</td></tr><tr><td>itemize与item</td><td>无序号列举</td><td>\begin{itemize} \item this is 1 \item this is 2 \end{itemize}</td></tr><tr><td>enumerate与item</td><td>有序号列举</td><td>\begin{enumerate} \item this is 1 \item this is 2 \end{enumerate}</td></tr><tr><td>\\</td><td>换行</td><td>then add \ a manual</td></tr></tbody></table><h2 id="图片标签介绍"><a href="#图片标签介绍" class="headerlink" title="图片标签介绍"></a>图片标签介绍</h2><h3 id="引入图片"><a href="#引入图片" class="headerlink" title="引入图片"></a>引入图片</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;article&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;graphicx&#125; <span class="comment">%LaTeX package to import graphics</span></span><br><span class="line"><span class="keyword">\graphicspath</span>&#123;&#123;images/&#125;&#125; <span class="comment">%图片存储在文件夹images里</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line">The universe is immense and it seems to be homogeneous, </span><br><span class="line">on a large scale, everywhere we look.</span><br><span class="line"></span><br><span class="line"><span class="keyword">\includegraphics</span>&#123;universe&#125;  <span class="comment">%一个名为universe.jpg的图片，加不加后缀都可</span></span><br><span class="line"> </span><br><span class="line">There&#x27;s a picture of a galaxy above.</span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure><h3 id="图片操作"><a href="#图片操作" class="headerlink" title="图片操作"></a>图片操作</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;article&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;graphicx&#125;</span><br><span class="line"><span class="keyword">\graphicspath</span>&#123;&#123;images/&#125;&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;figure&#125;[h]</span><br><span class="line">    <span class="keyword">\centering</span></span><br><span class="line">    <span class="keyword">\includegraphics</span>[width=0.75<span class="keyword">\textwidth</span>]&#123;mesh&#125; <span class="comment">%设置图片的宽度</span></span><br><span class="line">    <span class="keyword">\caption</span>&#123;A nice plot.&#125; <span class="comment">%设置下标文字</span></span><br><span class="line">    <span class="keyword">\label</span>&#123;fig:mesh1&#125; <span class="comment">%设置引用名，之后可通过引用名指代该图片的序号</span></span><br><span class="line"><span class="keyword">\end</span>&#123;figure&#125;</span><br><span class="line"> <span class="comment">%使用引用名指代图片序号,下方渲染的结果为“figure1”</span></span><br><span class="line">As you can see in figure <span class="keyword">\ref</span>&#123;fig:mesh1&#125;, the function grows near the origin. This example is on page <span class="keyword">\pageref</span>&#123;fig:mesh1&#125;.</span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%无边框表格</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;center&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;tabular&#125;&#123;c c c&#125;</span><br><span class="line"> cell1 <span class="built_in">&amp;</span> cell2 <span class="built_in">&amp;</span> cell3 <span class="keyword">\\</span> </span><br><span class="line"> cell4 <span class="built_in">&amp;</span> cell5 <span class="built_in">&amp;</span> cell6 <span class="keyword">\\</span>  </span><br><span class="line"> cell7 <span class="built_in">&amp;</span> cell8 <span class="built_in">&amp;</span> cell9    </span><br><span class="line"><span class="keyword">\end</span>&#123;tabular&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;center&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">%竖边框表格</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;center&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;tabular&#125;&#123;|c|c|c|&#125; </span><br><span class="line"> <span class="keyword">\hline</span></span><br><span class="line"> cell1 <span class="built_in">&amp;</span> cell2 <span class="built_in">&amp;</span> cell3 <span class="keyword">\\</span> </span><br><span class="line"> cell4 <span class="built_in">&amp;</span> cell5 <span class="built_in">&amp;</span> cell6 <span class="keyword">\\</span> </span><br><span class="line"> cell7 <span class="built_in">&amp;</span> cell8 <span class="built_in">&amp;</span> cell9 <span class="keyword">\\</span> </span><br><span class="line"> <span class="keyword">\hline</span></span><br><span class="line"><span class="keyword">\end</span>&#123;tabular&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;center&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">%横边框表格</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;center&#125;</span><br><span class="line"> <span class="keyword">\begin</span>&#123;tabular&#125;&#123;||c c c c||&#125; </span><br><span class="line"> <span class="keyword">\hline</span></span><br><span class="line"> Col1 <span class="built_in">&amp;</span> Col2 <span class="built_in">&amp;</span> Col2 <span class="built_in">&amp;</span> Col3 <span class="keyword">\\</span> [0.5ex] </span><br><span class="line"> <span class="keyword">\hline</span><span class="keyword">\hline</span></span><br><span class="line"> 1 <span class="built_in">&amp;</span> 6 <span class="built_in">&amp;</span> 87837 <span class="built_in">&amp;</span> 787 <span class="keyword">\\</span> </span><br><span class="line"> <span class="keyword">\hline</span></span><br><span class="line"> 2 <span class="built_in">&amp;</span> 7 <span class="built_in">&amp;</span> 78 <span class="built_in">&amp;</span> 5415 <span class="keyword">\\</span></span><br><span class="line"> <span class="keyword">\hline</span></span><br><span class="line"> 3 <span class="built_in">&amp;</span> 545 <span class="built_in">&amp;</span> 778 <span class="built_in">&amp;</span> 7507 <span class="keyword">\\</span></span><br><span class="line"> <span class="keyword">\hline</span></span><br><span class="line"> 4 <span class="built_in">&amp;</span> 545 <span class="built_in">&amp;</span> 18744 <span class="built_in">&amp;</span> 7560 <span class="keyword">\\</span></span><br><span class="line"> <span class="keyword">\hline</span></span><br><span class="line"> 5 <span class="built_in">&amp;</span> 88 <span class="built_in">&amp;</span> 788 <span class="built_in">&amp;</span> 6344 <span class="keyword">\\</span> [1ex] </span><br><span class="line"> <span class="keyword">\hline</span></span><br><span class="line"><span class="keyword">\end</span>&#123;tabular&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;center&#125;</span><br></pre></td></tr></table></figure><h2 id="文章布局"><a href="#文章布局" class="headerlink" title="文章布局"></a>文章布局</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;article&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;abstract&#125; <span class="comment">%摘要</span></span><br><span class="line">This is a simple paragraph at the beginning of the </span><br><span class="line">document. A brief introduction about the main subject.</span><br><span class="line"><span class="keyword">\end</span>&#123;abstract&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;book&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\chapter</span>&#123;First Chapter&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;Introduction&#125; <span class="comment">%会自动生成序号，效果类似notion中的heading</span></span><br><span class="line"></span><br><span class="line">This is the first section.</span><br><span class="line"></span><br><span class="line">Lorem  ipsum  dolor  sit  amet,  consectetuer  adipiscing  </span><br><span class="line">elit. Etiam  lobortisfacilisis sem.  Nullam nec mi et </span><br><span class="line">neque pharetra sollicitudin.  Praesent imperdietmi nec ante. </span><br><span class="line">Donec ullamcorper, felis non sodales...</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;Second Section&#125;</span><br><span class="line"></span><br><span class="line">Lorem ipsum dolor sit amet, consectetuer adipiscing elit.  </span><br><span class="line">Etiam lobortis facilisissem.  Nullam nec mi et neque pharetra </span><br><span class="line">sollicitudin.  Praesent imperdiet mi necante...</span><br><span class="line"></span><br><span class="line"><span class="keyword">\subsection</span>&#123;First Subsection&#125;</span><br><span class="line">Praesent imperdietmi nec ante. Donec ullamcorper, felis non sodales...</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>*&#123;Unnumbered Section&#125;</span><br><span class="line">Lorem ipsum dolor sit amet, consectetuer adipiscing elit.  </span><br><span class="line">Etiam lobortis facilisissem...</span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">%\part&#123;part&#125;</span></span><br><span class="line"><span class="comment">%\chapter&#123;chapter&#125;</span></span><br><span class="line"><span class="comment">%\section&#123;section&#125;</span></span><br><span class="line"><span class="comment">%\subsection&#123;subsection&#125;</span></span><br><span class="line"><span class="comment">%\subsubsection&#123;subsubsection&#125;</span></span><br><span class="line"><span class="comment">%\paragraph&#123;paragraph&#125;</span></span><br><span class="line"><span class="comment">%\subparagraph&#123;subparagraph&#125;</span></span><br></pre></td></tr></table></figure><h2 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h2><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;article&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line">Subscripts in math mode are written as <span class="built_in">$</span>a<span class="built_in">_</span>b<span class="built_in">$</span> and superscripts are written as <span class="built_in">$</span>a<span class="built_in">^</span>b<span class="built_in">$</span>. These can be combined and nested to write expressions such as</span><br><span class="line"></span><br><span class="line"><span class="keyword">\[</span> T<span class="built_in">^</span>&#123;i<span class="built_in">_</span>1 i<span class="built_in">_</span>2 <span class="keyword">\dots</span> i<span class="built_in">_</span>p&#125;<span class="built_in">_</span>&#123;j<span class="built_in">_</span>1 j<span class="built_in">_</span>2 <span class="keyword">\dots</span> j<span class="built_in">_</span>q&#125; = T(x<span class="built_in">^</span>&#123;i<span class="built_in">_</span>1&#125;,<span class="keyword">\dots</span>,x<span class="built_in">^</span>&#123;i<span class="built_in">_</span>p&#125;,e<span class="built_in">_</span>&#123;j<span class="built_in">_</span>1&#125;,<span class="keyword">\dots</span>,e<span class="built_in">_</span>&#123;j<span class="built_in">_</span>q&#125;) <span class="keyword">\]</span></span><br><span class="line"><span class="comment">%^为上标，_为下标，\dots为省略号， </span></span><br><span class="line"></span><br><span class="line">We write integrals using <span class="built_in">$</span><span class="keyword">\int</span><span class="built_in">$</span> and fractions using <span class="built_in">$</span><span class="keyword">\frac</span>&#123;a&#125;&#123;b&#125;<span class="built_in">$</span>. Limits are placed on integrals using superscripts and subscripts:</span><br><span class="line"><span class="comment">%\int 为积分符号</span></span><br><span class="line"><span class="keyword">\[</span> <span class="keyword">\int</span><span class="built_in">_</span>0<span class="built_in">^</span>1 <span class="keyword">\frac</span>&#123;dx&#125;&#123;e<span class="built_in">^</span>x&#125; =  <span class="keyword">\frac</span>&#123;e-1&#125;&#123;e&#125; <span class="keyword">\]</span></span><br><span class="line"><span class="comment">%从0积分到1；\frac为分数的分号，之后的第一个为分母，第二个为分子；</span></span><br><span class="line">Lower case Greek letters are written as <span class="built_in">$</span><span class="keyword">\omega</span><span class="built_in">$</span> <span class="built_in">$</span><span class="keyword">\delta</span><span class="built_in">$</span> etc. while upper case Greek letters are written as <span class="built_in">$</span><span class="keyword">\Omega</span><span class="built_in">$</span> <span class="built_in">$</span><span class="keyword">\Delta</span><span class="built_in">$</span>.</span><br><span class="line"><span class="comment">%对应读音的希腊文字</span></span><br><span class="line">Mathematical operators are prefixed with a backslash as <span class="built_in">$</span><span class="keyword">\sin</span>(<span class="keyword">\beta</span>)<span class="built_in">$</span>, <span class="built_in">$</span><span class="keyword">\cos</span>(<span class="keyword">\alpha</span>)<span class="built_in">$</span>, <span class="built_in">$</span><span class="keyword">\log</span>(x)<span class="built_in">$</span> etc.</span><br><span class="line"><span class="comment">%三角函数与对数</span></span><br><span class="line">This is a simple math expression <span class="keyword">\(</span><span class="keyword">\sqrt</span>&#123;x<span class="built_in">^</span>2+1&#125;<span class="keyword">\)</span> inside text. </span><br><span class="line"><span class="comment">%\sqrt 根号</span></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure><h2 id="论文示例"><a href="#论文示例" class="headerlink" title="论文示例"></a>论文示例</h2><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">% !TeX program = xelatex</span></span><br><span class="line"><span class="meta">% !TEX root = main.tex</span></span><br><span class="line"><span class="meta">% !TeX encoding = UTF-8</span></span><br><span class="line"><span class="keyword">\documentclass</span>[10.5pt,compsoc]&#123;CjC&#125;</span><br><span class="line"><span class="comment">%\usepackage&#123;CJKutf8&#125;</span></span><br><span class="line"><span class="comment">%\usepackage&#123;CJK&#125;</span></span><br><span class="line"><span class="keyword">\usepackage</span>&#123;graphicx&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;footmisc&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;subfigure&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;url&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;multirow&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>[noadjust]&#123;cite&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;amsmath,amsthm&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;amssymb,amsfonts&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;booktabs&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;color&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;ccaption&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;booktabs&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;float&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;fancyhdr&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;caption&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;xcolor,stfloats&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;comment&#125;</span><br><span class="line"><span class="keyword">\setcounter</span>&#123;page&#125;&#123;1&#125;</span><br><span class="line"><span class="keyword">\graphicspath</span>&#123;&#123;figures/&#125;&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;cuted&#125;<span class="comment">%flushend,</span></span><br><span class="line"><span class="keyword">\usepackage</span>&#123;captionhack&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;epstopdf&#125;</span><br><span class="line"><span class="comment">%\usepackage&#123;ccmap&#125;</span></span><br><span class="line"><span class="comment">%\CJKtilde</span></span><br><span class="line"><span class="comment">%\usepackage&#123;CJKpunct&#125; </span></span><br><span class="line"><span class="comment">%\usepackage[lite,subscriptcorrection,slantedGreek,nofontinfo]&#123;mtpro2&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%===============================%</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%\firstfootname&#123; \quad \quad &#125;</span></span><br><span class="line"><span class="keyword">\headevenname</span>&#123;<span class="keyword">\mbox</span>&#123;<span class="keyword">\quad</span>&#125; <span class="keyword">\hfill</span>  <span class="keyword">\mbox</span>&#123;<span class="keyword">\zihao</span>&#123;-5&#125;&#123;<span class="keyword">\songti</span>  计<span class="keyword">\quad</span> <span class="keyword">\quad</span> 算<span class="keyword">\quad</span> <span class="keyword">\quad</span> 机<span class="keyword">\quad</span> <span class="keyword">\quad</span> 学<span class="keyword">\quad</span> <span class="keyword">\quad</span> 报 &#125; <span class="keyword">\hspace</span> &#123;50mm&#125; <span class="keyword">\mbox</span>&#123;<span class="keyword">\songti</span>  2019 年 &#125;&#125;&#125;<span class="comment">%</span></span><br><span class="line"><span class="keyword">\headoddname</span>&#123;<span class="keyword">\songti</span>  ? 期 <span class="keyword">\hfill</span></span><br><span class="line">作者姓名等：论文题目 &#125;<span class="comment">%</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%footnote use of *</span></span><br><span class="line"><span class="keyword">\renewcommand</span>&#123;<span class="keyword">\thefootnote</span>&#125;&#123;<span class="keyword">\fnsymbol</span>&#123;footnote&#125;&#125;</span><br><span class="line"><span class="keyword">\setcounter</span>&#123;footnote&#125;&#123;0&#125;</span><br><span class="line"><span class="keyword">\renewcommand</span><span class="keyword">\footnotelayout</span>&#123;<span class="keyword">\zihao</span>&#123;5-&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\newtheoremstyle</span>&#123;mystyle&#125;&#123;0pt&#125;&#123;0pt&#125;&#123;<span class="keyword">\normalfont</span>&#125;&#123;1em&#125;&#123;<span class="keyword">\bf</span>&#125;&#123;&#125;&#123;1em&#125;&#123;&#125;</span><br><span class="line"><span class="keyword">\theoremstyle</span>&#123;mystyle&#125;</span><br><span class="line"><span class="keyword">\renewcommand</span><span class="keyword">\figurename</span>&#123;figure~&#125;</span><br><span class="line"><span class="keyword">\renewcommand</span>&#123;<span class="keyword">\thesubfigure</span>&#125;&#123;(<span class="keyword">\alph</span>&#123;subfigure&#125;)&#125;</span><br><span class="line"><span class="keyword">\newcommand</span>&#123;<span class="keyword">\upcite</span>&#125;[1]&#123;<span class="keyword">\textsuperscript</span>&#123;<span class="keyword">\cite</span>&#123;<span class="params">#1</span>&#125;&#125;&#125;</span><br><span class="line"><span class="keyword">\renewcommand</span>&#123;<span class="keyword">\labelenumi</span>&#125;&#123;(<span class="keyword">\arabic</span>&#123;enumi&#125;)&#125;</span><br><span class="line"><span class="keyword">\newcommand</span>&#123;<span class="keyword">\tabincell</span>&#125;[2]&#123;<span class="keyword">\begin</span>&#123;tabular&#125;&#123;@&#123;&#125;<span class="params">#1</span>@&#123;&#125;&#125;<span class="params">#2</span><span class="keyword">\end</span>&#123;tabular&#125;&#125;</span><br><span class="line"><span class="keyword">\newcommand</span>&#123;<span class="keyword">\abc</span>&#125;&#123;<span class="keyword">\color</span>&#123;white&#125;<span class="keyword">\vrule</span> width 2pt&#125;</span><br><span class="line"><span class="keyword">\makeatletter</span></span><br><span class="line"><span class="keyword">\renewcommand</span>&#123;<span class="keyword">\@biblabel</span>&#125;[1]&#123;[<span class="params">#1</span>]<span class="keyword">\hfill</span>&#125;</span><br><span class="line"><span class="keyword">\makeatother</span></span><br><span class="line"><span class="keyword">\setlength</span><span class="keyword">\parindent</span>&#123;2em&#125;</span><br><span class="line"><span class="comment">%\renewcommand&#123;\hth&#125;&#123;\heiti &#125;</span></span><br><span class="line"><span class="comment">%\renewcommand&#123;\htss&#125;&#123;\begin&#123;CJK*&#125;&#123;UTF8&#125;&#123;song&#125;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\hyphenpenalty</span>=50000</span><br><span class="line"><span class="keyword">\makeatletter</span></span><br><span class="line"><span class="keyword">\newcommand</span><span class="keyword">\mysmall</span>&#123;<span class="keyword">\@setfontsize</span><span class="keyword">\mysmall</span>&#123;7&#125;&#123;9.5&#125;&#125;</span><br><span class="line"><span class="keyword">\newenvironment</span>&#123;tablehere&#125;</span><br><span class="line">  &#123;<span class="keyword">\def</span><span class="keyword">\@captype</span>&#123;table&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\let</span><span class="keyword">\temp</span><span class="keyword">\footnote</span></span><br><span class="line"><span class="keyword">\renewcommand</span> <span class="keyword">\footnote</span>[1]&#123;<span class="keyword">\temp</span>&#123;<span class="keyword">\zihao</span>&#123;-5&#125;<span class="params">#1</span>&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\thispagestyle</span>&#123;plain&#125;<span class="comment">%</span></span><br><span class="line"><span class="keyword">\thispagestyle</span>&#123;empty&#125;<span class="comment">%</span></span><br><span class="line"><span class="keyword">\pagestyle</span>&#123;CjCheadings&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;table*&#125;[!t]</span><br><span class="line"><span class="keyword">\vspace</span> &#123;-13mm&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;tabular&#125;&#123;p&#123;168mm&#125;&#125;</span><br><span class="line"><span class="keyword">\zihao</span>&#123;5-&#125;</span><br><span class="line"><span class="keyword">\songti</span> </span><br><span class="line">第??卷<span class="keyword">\quad</span> 第?期 <span class="keyword">\hfill</span> 计<span class="keyword">\quad</span> 算<span class="keyword">\quad</span> 机<span class="keyword">\quad</span> 学<span class="keyword">\quad</span> 报<span class="keyword">\hfill</span> Vol. ??  No. ?</span><br><span class="line"><span class="keyword">\zihao</span>&#123;5-&#125;<span class="keyword">\songti</span>  </span><br><span class="line">20??年?月 <span class="keyword">\hfill</span> CHINESE JOURNAL OF COMPUTERS <span class="keyword">\hfill</span> ???. 20?? <span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\hline</span><span class="keyword">\\</span>[-4.5mm]</span><br><span class="line"><span class="keyword">\hline</span><span class="keyword">\end</span>&#123;tabular&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\centering</span></span><br><span class="line"><span class="keyword">\vspace</span>&#123;11mm&#125;</span><br><span class="line"><span class="keyword">\heiti</span>  </span><br><span class="line">&#123;<span class="keyword">\zihao</span>&#123;2&#125; 基于WebSocket协议的云平台性能优化 &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\vskip</span> 5mm</span><br><span class="line"></span><br><span class="line">&#123;<span class="keyword">\zihao</span>&#123;3&#125; <span class="keyword">\fangsong</span> </span><br><span class="line">白日糖<span class="built_in">$</span><span class="built_in">^</span>&#123;1)&#125;<span class="built_in">$</span><span class="keyword">\quad</span>  zency<span class="built_in">$</span><span class="built_in">^</span>&#123;2),3)&#125;<span class="built_in">$</span> <span class="keyword">\quad</span> 作者名<span class="built_in">$</span><span class="built_in">^</span>&#123;3) &#125;<span class="built_in">$</span>(<span class="built_in">$</span><span class="built_in">^</span>*<span class="built_in">$</span>字体为3号仿宋*作者)</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\vspace</span>&#123;5mm&#125;</span><br><span class="line"><span class="keyword">\zihao</span>&#123;6&#125;&#123;<span class="keyword">\songti</span> </span><br><span class="line"><span class="built_in">$</span><span class="built_in">^</span>&#123;1)&#125;<span class="built_in">$</span>(单位全名 部门(系)全名, 市(或直辖市) 国家名 邮政编码)</span><br><span class="line">*字体为6号宋体*单位</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\zihao</span>&#123;6&#125;&#123;<span class="keyword">\songti</span>  </span><br><span class="line"><span class="built_in">$</span><span class="built_in">^</span>&#123;2)&#125;<span class="built_in">$</span>(单位全名 部门(系)全名, 市(或直辖市) 国家名</span><br><span class="line">邮政编码)*中英文单位名称、作者姓名须一致*&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\zihao</span>&#123;6&#125;&#123;<span class="keyword">\songti</span>  </span><br><span class="line"><span class="built_in">$</span><span class="built_in">^</span>&#123;3)&#125;<span class="built_in">$</span>(单位全名 部门(系)全名, 市(或直辖市) 国家名 邮政编码)</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\zihao</span>&#123;6&#125;&#123;<span class="keyword">\heiti</span> </span><br><span class="line">论文定稿后，作者署名、单位无特殊情况不能变更。若变更，须提交签章申请，国家名为中国可以不写，省会城市不写省的名称，其他国家必须写国家名。</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\vskip</span> 5mm</span><br><span class="line">&#123;<span class="keyword">\centering</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;tabular&#125;&#123;p&#123;160mm&#125;&#125;</span><br><span class="line"><span class="keyword">\zihao</span>&#123;5-&#125;&#123;</span><br><span class="line"><span class="keyword">\setlength</span>&#123;<span class="keyword">\baselineskip</span>&#125;&#123;16pt&#125;<span class="keyword">\selectfont</span>&#123;</span><br><span class="line"><span class="keyword">\noindent</span><span class="keyword">\heiti</span> 摘<span class="keyword">\quad</span> 要<span class="keyword">\quad</span>   <span class="keyword">\songti</span> </span><br><span class="line"></span><br><span class="line">可是，为了避免雪之下她们察觉我独自帮一色的忙，只有在校外会合这个方法。在现在的雪之下面前接受学生会委托，对她而言太过残忍；把一色完全拒在门外的话，又未免太不负责任。虽然也可以单独不让雪之下参与，这样做又好像深深地背叛她。考虑侍奉社的现状后，最好的方法还是由我以个人身分行动。</span><br><span class="line"></span><br><span class="line">话说回来，一色光是这样便心动的话，她得格外注意才行，否则连旅行都没办法好好放松。难道每次空服员姐姐帮忙抬行李，她都要心动一次？应该不至于吧……不对，搞不好会喔（美丽空服员姐姐的参数补正）。不对，再等一下，即使不是空服员，做粗工的大姐姐说不定也很让人心动……果然有工作的女性最棒了（家庭主夫志向的参数补正）！</span><br><span class="line"></span><br><span class="line">如果我们是过去作客，接受对方招待，自然没有必要在意这些细节，但今天我们是跟对方共同举办活动，在地位上平起平坐，就算只是点缀会议的点心，也必须维持跟对方相当的水准。</span><br><span class="line"></span><br><span class="line">一色用相当讨喜的方式打招呼，走进房间，我跟着进去后，大家也没有安静下来的迹象，甚至连看都不看过来一眼。看来他们聊得正高兴，对我没有半点兴趣。</span><br><span class="line"></span><br><span class="line"><span class="comment">% *中文摘要内容置于此处(英文摘要中要有这些内容)，字体为小5号宋体。摘要贡献部分，要有数据支持，不要出现``...大大提高&#x27;&#x27;、``...显著改善&#x27;&#x27;等描述，正确的描述是``比&#123;\ldots&#125;提高X&#123;\%&#125;&#x27;&#x27;、``在&#123;\ldots&#125;上改善X&#123;\%&#125;&#x27;&#x27;。*摘要</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">\par</span>&#125;&#125;<span class="keyword">\\</span>[2mm]</span><br><span class="line"></span><br><span class="line"><span class="keyword">\zihao</span>&#123;5-&#125;&#123;<span class="keyword">\noindent</span></span><br><span class="line"><span class="keyword">\heiti</span> 关键词  <span class="keyword">\quad</span> <span class="keyword">\songti</span>  &#123;青春；恋爱；我的；果然；有问题&#125;</span><br><span class="line"><span class="comment">% &#123;*关键词（中文关键字与英文关键字对应且一致，应有5-7个关键词)；关键词；关键词；关键词*  &#125;</span></span><br><span class="line"> </span><br><span class="line">&#125;<span class="keyword">\\</span>[2mm]</span><br><span class="line"><span class="keyword">\zihao</span>&#123;5-&#125;&#123;<span class="keyword">\heiti</span> 中图法分类号 <span class="keyword">\songti</span>  </span><br><span class="line">TP <span class="keyword">\rm</span>&#123;<span class="keyword">\quad</span> <span class="keyword">\quad</span> <span class="keyword">\quad</span>     &#125;</span><br><span class="line"><span class="keyword">\heiti</span> DOI号: <span class="keyword">\songti</span>  </span><br><span class="line">*投稿时不提供DOI号 &#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;tabular&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\vskip</span> 7mm</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;center&#125;</span><br><span class="line"><span class="keyword">\zihao</span>&#123;3&#125;&#123; &#123;<span class="keyword">\heiti</span> Title *（中英文题目一致)字体为4号Times New Roman,加粗* Title &#125;&#125;<span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\vspace</span> &#123;5mm&#125;</span><br><span class="line"><span class="keyword">\zihao</span>&#123;5&#125;&#123; &#123;<span class="keyword">\heiti</span> NAME Name-Name<span class="built_in">$</span><span class="built_in">^</span>&#123;1)&#125;<span class="built_in">$</span> NAME Name<span class="built_in">$</span><span class="built_in">^</span>&#123;2)&#125;<span class="built_in">$</span> NAME Name-Name<span class="built_in">$</span><span class="built_in">^</span>&#123;3)&#125;<span class="built_in">$</span> *字体为5号Times</span><br><span class="line">new Roman*Name </span><br><span class="line">&#125;&#125;<span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\vspace</span> &#123;2mm&#125;</span><br><span class="line"><span class="keyword">\zihao</span>&#123;6&#125;&#123;<span class="keyword">\heiti</span> &#123;<span class="built_in">$</span><span class="built_in">^</span>&#123;1)&#125;<span class="built_in">$</span>(Department of ****, University, City ZipCode, China) *字体为6号Times</span><br><span class="line">new Roman* Depart.Correspond&#125; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\zihao</span>&#123;6&#125;&#123;<span class="keyword">\heiti</span> &#123;<span class="built_in">$</span><span class="built_in">^</span>&#123;2)&#125;<span class="built_in">$</span>(Department of ****, University, City ZipCode)*中国不写国家名*&#125; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\zihao</span>&#123;6&#125;&#123;<span class="keyword">\heiti</span> &#123;<span class="built_in">$</span><span class="built_in">^</span>&#123;3)&#125;<span class="built_in">$</span>(Department of ****, University, City ZipCode, country)*外国写国家名*&#125; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;center&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;tabular&#125;&#123;p&#123;160mm&#125;&#125;</span><br><span class="line"><span class="keyword">\zihao</span>&#123;5&#125;&#123;</span><br><span class="line"><span class="keyword">\setlength</span>&#123;<span class="keyword">\baselineskip</span>&#125;&#123;18pt&#125;<span class="keyword">\selectfont</span>&#123;</span><br><span class="line">&#123;<span class="keyword">\bf</span> Abstract&#125;<span class="keyword">\quad</span> <span class="keyword">\begin</span>&#123;heiti&#125; (<span class="keyword">\textbf</span>&#123;500英文单词，内容包含中文摘要的内容&#125;).</span><br><span class="line">字体为Times new Roman,字号5号* Abstract <span class="keyword">\end</span>&#123;heiti&#125;</span><br><span class="line"><span class="keyword">\par</span>&#125;&#125;<span class="keyword">\\</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\setlength</span>&#123;<span class="keyword">\baselineskip</span>&#125;&#123;18pt&#125;<span class="keyword">\selectfont</span>&#123;</span><br><span class="line"><span class="keyword">\zihao</span>&#123;5&#125;&#123;<span class="keyword">\noindent</span> Do not modify the amount of space before and after the artworks. One- or two-column format artworks are preferred. and Tables, create a new break line and paste the resized artworks where desired. Do not modify the amount of space before and after the artworks. One- or two-column format artworks are preferred. All Schemes, Equations, Figures, and Tables should be mentioned in the text consecutively and numbered with Arabic numerals, and appear below where they are mentioned for the first time in the main text. To insert Schemes, Equations, Figures, and Tables, create a new break line and paste the resized artworks where desired. Do not modify the amount of space before and after the artworks. One- or two-column format artworks are preferred.Do not modify the amount of space before and after the artworks. One- or two-column format artworks are preferred. and Tables, create a new break line and paste the resized artworks where desired. Do not modify the amount of space before and after the artworks. One- or two-column format artworks are preferred. All Schemes, Equations, Figures, and Tables should be mentioned in the text consecutively and numbered with Arabic numerals, and appear below where they are mentioned for the first time in the main text.</span><br><span class="line"></span><br><span class="line"><span class="keyword">\vspace</span> &#123;5mm&#125;</span><br><span class="line">&#123;<span class="keyword">\bf</span> Keywords&#125;<span class="keyword">\quad</span> <span class="keyword">\heiti</span> 中文关键字与英文关键字对应且一致，<span class="keyword">\textbf</span>&#123;不要用英文缩写&#125;);</span><br><span class="line">key word; key word; key word* *字体为5号Times new Roman * Key words &#125;<span class="keyword">\par</span>&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;tabular&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\setlength</span>&#123;<span class="keyword">\tabcolsep</span>&#125;&#123;2pt&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;tabular&#125;&#123;p&#123;0.05cm&#125;p&#123;16.15cm&#125;&#125;</span><br><span class="line"><span class="keyword">\multicolumn</span>&#123;2&#125;&#123;l&#125;&#123;<span class="keyword">\rule</span>[4mm]&#123;40mm&#125;&#123;0.1mm&#125;&#125;<span class="keyword">\\</span>[-3mm]</span><br><span class="line"><span class="built_in">&amp;</span><span class="keyword">\begin</span>&#123;songti&#125;</span><br><span class="line">收稿日期：<span class="keyword">\quad</span> <span class="keyword">\quad</span> -<span class="keyword">\quad</span> -<span class="keyword">\quad</span> ；最终修改稿收到日期：<span class="keyword">\quad</span> <span class="keyword">\quad</span> -<span class="keyword">\quad</span> -<span class="keyword">\quad</span> .*投稿时不填写此项*. 本课题得到… …基金中文完整名称(No.项目号)、… …基金中文完整名称(No.项目号)、… … 基金中文完整名称(No.项目号)资助.作者名1(通信作者)，性别，xxxx年生，学位(或目前学历)，职称，是/否计算机学会(CCF)会员（提供会员号),主要研究领域为*****、****.E-mail: **************.作者名2（通信作者)，性别，xxxx年生，学位(或目前学历)，职称，是/否计算机学会(CCF)会员（提供会员号),主要研究领域为*****、****.E-mail: **************. 作者名3（通信作者)，性别，xxxx年生，学位(或目前学历)，职称，是/否计算机学会(CCF)会员（提供会员号),主要研究领域为*****、****.E-mail: **************.(给出的电子邮件地址应不会因出国、毕业、更换工作单位等原因而变动。请给出所有作者的电子邮件)</span><br><span class="line">第1作者手机号码(投稿时必须提供，以便紧急联系，发表时会删除): … …, E-mail: … …*此部分6号宋体*</span><br><span class="line"><span class="keyword">\end</span>&#123;songti&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;tabular&#125;<span class="keyword">\end</span>&#123;table*&#125;</span><br><span class="line"><span class="keyword">\clearpage</span><span class="keyword">\clearpage</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;strip&#125;</span><br><span class="line"><span class="keyword">\vspace</span> &#123;-13mm&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;strip&#125;</span><br><span class="line">    <span class="keyword">\linespread</span>&#123;1.15&#125;</span><br><span class="line"><span class="keyword">\heiti</span> </span><br><span class="line"><span class="keyword">\zihao</span>&#123;5&#125;</span><br><span class="line"><span class="keyword">\vskip</span> 1mm</span><br><span class="line"><span class="keyword">\section</span> &#123;引言&#125;</span><br><span class="line"><span class="comment">% &#123;一级标题*字体为4号黑体*标题1&#125;</span></span><br><span class="line"><span class="comment">% \textbf&#123;对投稿的基本要求&#125;：</span></span><br><span class="line"><span class="keyword">\songti</span>  </span><br><span class="line">我并不排斥枯燥的劳动，尽管不断重复相同流程的机械性作业会耗损精神，我的精神早已被磨光，或者说是被磨到产生抵抗力，所以只要不用费心思伤脑筋，对我来说便是轻松的工作。创新的innovation！用对话跟交涉negotiation！解决反感就是我们的solution！会议以这样的感觉进行下去，他们早已超越新手跳hip hop的境界，脑袋嗨到突破天际了。</span><br><span class="line"></span><br><span class="line">比较让我在意的是，发言者几乎都是海滨综合高中学生会，总武高中这边虽然出席会议，从头到尾没说到几句话。但是，听到对方一连串菁英言论之后，他们大概也不敢献丑，连担任会长的一色都插不上话。即使现在没问题，我还是担心她之后会付出惨痛的代价。不受欢迎的男生很容易上当，所以会发生各式各样的悲剧喔……不受欢迎的男生纯情又直性子，外加始终如一的专情，是会错意的高危险群。这样一想，不受欢迎的男生岂不是超级大好人？那为什么还不受欢迎，真是太不可思议了！</span><br><span class="line"></span><br><span class="line"><span class="comment">% 此处插入一张WebSocket示例图</span></span><br><span class="line">我承认自己暗示过一色，要善用自身立场的优势，但我可没有说得那么直白——不对，那根本是一色听过我的话，独自发展出的理论……糟糕，我好像在不知不觉中养了一头怪物，那群人会不会因为这个女的而分裂……</span><br><span class="line"></span><br><span class="line">这时我才恍然大悟，原来是二年级的……虽然不知道名字，我好像在校内看过他，想不到那个人就是学生会副会长。没办法，大家通常只记得会长是谁，底下的人几乎都懒得去看。</span><br><span class="line"></span><br><span class="line">小雪离开暖被桌，但还是想找地方取暖，于是跳到小町的腿上，蜷起身体开始打盹。已经睡一整天了，现在还要睡吗？唉，当猫咪真好。我也好想过那样的生活。</span><br><span class="line"></span><br><span class="line"><span class="comment">% (1) 研究性论文主体应包括引言(重点论述研究的科学问题、意义、解决思路、价值、贡献等)、相关工作(为与引言部分独立的一个章节)、主要成果论述、关键实现技术、验证(对比实验或理论证明)、结论(结束语)等内容；系统实现或实验应有关键点的详细论述，以便读者能够重复实现论文所述成果。实验应有具体的实验环境设置、全面细致的数据对比分析。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% (2) 综述应包括引言、问题与挑战、研究现状分析、未来研究方向、结论等内容。以分析、对比为主，避免堆砌文献或一般性介绍、叙述。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% (3) 定理证明、公式推导、大篇幅的数学论述、原始数据，放到论文最后的附录中。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% &#123;\bf 稿件提交时的基本要求：&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% (1) 本模板中要求的各项内容正确齐全，无遗漏；</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% (2) 语句通顺，无中文、英文语法错误，易于阅读理解，符号使用正确，图、表清晰无误；</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% (3) 在学术、技术上，论文内容正确无误，各项内容确定。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;相关工作&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\songti</span></span><br><span class="line">既然是那个理由，我当然不吝于跑腿。虽然之前没特别想过，我考高中的时候，小町的确帮了许多忙。而且，平常都是由她负责大部分的家事，现在轮到她应考，那些<span class="keyword">\cite</span>&#123;fette2011websocket&#125;。家里有个能干的妹妹是件好事，但也非常辛苦——我打算这么为自己辩解，但母亲丝毫不在意我的反应，从包包拿出钱包。<span class="keyword">\cite</span>&#123;9581663&#125;，小町看着她疲惫的身影，嘟哝：</span><br><span class="line"></span><br><span class="line">虽然没什么参加的动力，现阶段大部分的工作都由海滨综合高中负责，所以我们只需负责他们交办的事项。那群人进行脑力激荡、热烈讨论，一副干劲十足的样子——不用说<span class="keyword">\cite</span>&#123;6197172&#125;。由一年级学生担任会长，是个意料之外的棘手问题。虽然我们只差一岁，这一岁在高中里，可是代表整整一学年的落差。不同年级间互相顾虑，会造成沟通上的阻碍。</span><br><span class="line"></span><br><span class="line">对于已经非常努力的人，实在不应该再说「加油」。而且由我这个不怎么努力的人来说，搞不好<span class="keyword">\cite</span>&#123;tomasetti2021analysis&#125;，我顿时涌出泪水。哥哥可是全心全意说出这句话的耶！我还让煞车灯闪了三下（注19出自美梦成真「未来预想图Ⅱ」之歌词：「送我下车后，你目送我走过转向，总会闪三下煞车灯。这是『我·爱·你』的暗号」。）你知不知道！</span><br><span class="line"></span><br><span class="line">我起身后，由比滨开口道别，雪之下也说「代我向小町问好」。我稍微挥手表示知道，随即走出社办。不一会儿，留在室内的由比滨便谈起小町的考试。</span><br><span class="line"> </span><br><span class="line"><span class="keyword">\vspace</span>&#123;6mm&#125;<span class="keyword">\section</span>&#123;青春恋爱物语&#125;</span><br><span class="line"></span><br><span class="line">我的好哥哥技能又在无意间自动发动，哀哉比企谷！如果我真的别有意图，一定会害羞得掌心冒汗。啊，这样一想，我的掌心真的开始冒汗了。</span><br><span class="line"></span><br><span class="line"><span class="comment">% 此部分介绍云平台智控</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\vspace</span>&#123;7mm&#125;<span class="keyword">\section</span>&#123;实验设计&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\songti</span></span><br><span class="line">活动日期是圣诞节前夕，地点在这栋公民会馆的大礼堂，目的是以促进地方交流、为地方奉献心力为主旨的志愿服务。活动设定的对象是邻近托儿所的幼童，以及利用日间照护中心的年长者。</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;enumerate&#125;</span><br><span class="line">    <span class="keyword">\item</span> <span class="keyword">\textbf</span>&#123;数据压缩/二进制传输&#125;：「进行brainstorm的时候，我们不会否定彼此的意见。要是受限于时间与人力因素，无法扩大活动规模，我们便要讨论如何突破这个困难，而不是立刻提出结论。因此，你的意见是不行的。」</span><br><span class="line">    <span class="keyword">\item</span> <span class="keyword">\textbf</span>&#123;错误处理和恢复&#125;：回到正题，增加参与的学校数没有什么好处。目前才两间学校，便已经没办法达成共识，要是再加进更多人的意见，只会没完没了，并且导致工作量增加。这个情况说什么也得避免……</span><br><span class="line">    <span class="keyword">\item</span> <span class="keyword">\textbf</span>&#123;心跳/连接复用&#125;：很遗憾地，胜利的喜悦维持不了多久，玉绳便竖起食指，提出另一个想法。</span><br><span class="line">    <span class="keyword">\item</span> <span class="keyword">\textbf</span>&#123;均衡负载&#125;：不只是折本，其他人也大多赞成。玉绳满意地点点头，把提案视为可决，开始下达今后的指示。</span><br><span class="line"><span class="keyword">\end</span>&#123;enumerate&#125;</span><br><span class="line"></span><br><span class="line">为了评估以上优化策略的效果，我们将通过针对性的实验设计对优化前后的WebSocket性能进行比较。实验中的云平台环境服务器端为...。客户端为Chrome浏览器120版本，并利用浏览器所提供的DevTools开发者工具进行性能监控和评估。我们将特别关注以下几个方面：</span><br><span class="line"></span><br><span class="line"><span class="comment">% 量化评估ms mb/s xx小时无错误 </span></span><br><span class="line"><span class="keyword">\begin</span>&#123;enumerate&#125;</span><br><span class="line">    <span class="keyword">\item</span> <span class="keyword">\textbf</span>&#123;系统响应速度&#125;：通过测量请求响应时间，评估系统在处理高并发请求时的响应能力和延迟情况。</span><br><span class="line">    <span class="keyword">\item</span> <span class="keyword">\textbf</span>&#123;数据处理能力&#125;：评估系统在海量数据压力下的数据处理速度，以及优化方案对网络带宽利用的改进。</span><br><span class="line">    <span class="keyword">\item</span> <span class="keyword">\textbf</span>&#123;系统稳定性和可靠性&#125;：通过长时间运行测试，检测优化策略对于系统稳定性的贡献，尤其是在网络条件不稳定和负荷激增时的表现。</span><br><span class="line">    <span class="keyword">\item</span> <span class="keyword">\textbf</span>&#123;资源利用效率&#125;：评估系统在服务器资源分配和处理能力方面的效果。</span><br><span class="line"><span class="keyword">\end</span>&#123;enumerate&#125;</span><br><span class="line"></span><br><span class="line">我跟折本明明念同一所国中，她怎么可能不知道这种问题？但是，仔细想想，我自己也没有半点印象，当时的学生会是哪些人组成。没有印象的话，代表他们没在我的心中留下创伤，说不定是一群好人喔！既然是一群好人，却对他们没有半点印象，我不禁感到一阵愧疚。</span><br><span class="line"></span><br><span class="line"><span class="keyword">\subsection</span>&#123;数据压缩/二进制传输&#125;</span><br><span class="line"></span><br><span class="line">尽管嘴巴上否认，在这将近一年的期间内，我经历过校庆、运动会之类大大小小的活动，因此累积了不少经验值。跟过去比较起来，现在我对这类工作的抗性的确提高许多。</span><br><span class="line"></span><br><span class="line"><span class="keyword">\subsection</span>&#123;错误处理和恢复&#125;</span><br><span class="line"></span><br><span class="line">主动抛出错误（丢包等）</span><br><span class="line"></span><br><span class="line"><span class="keyword">\subsection</span>&#123;心跳机制/连接复用&#125;</span><br><span class="line"></span><br><span class="line">折本闻言，盯着这里寻思一会儿</span><br><span class="line"></span><br><span class="line"><span class="keyword">\subsection</span>&#123;均衡负载&#125;</span><br><span class="line"></span><br><span class="line">双服务器</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;结果和分析&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;展望&#125;</span><br><span class="line"></span><br><span class="line">&#123;<span class="keyword">\heiti</span> <span class="keyword">\subsection</span>&#123;二级标题 *字体为5号黑体*标题2&#125; &#125;</span><br><span class="line"><span class="keyword">\subsubsection</span>&#123;三级标题 *字体为5号宋体*标题3&#125;</span><br><span class="line">*正文部分, 字体为5号宋体* 正文文字</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;figure&#125;[htbp]</span><br><span class="line"><span class="keyword">\centerline</span>&#123;<span class="keyword">\includegraphics</span>[width=3.15in,height=1.98in]&#123;CJC1.pdf&#125;&#125;</span><br><span class="line">图X<span class="keyword">\quad</span>  图片说明 *字体为小5号，图片应为黑白图，图中的子图要有子图说明*</span><br><span class="line"><span class="keyword">\label</span>&#123;fig1&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;figure&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;table&#125;[htbp]</span><br><span class="line"><span class="keyword">\centering</span> &#123;<span class="keyword">\heiti</span> 表X<span class="keyword">\quad</span> 表说明 *表说明采用黑体* &#125;</span><br><span class="line"><span class="keyword">\vspace</span> &#123;-2.5mm&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;center&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;tabular&#125;&#123;ll&#125;</span><br><span class="line"><span class="keyword">\toprule</span></span><br><span class="line">*示例表格*<span class="built_in">&amp;</span>*第1行为表头,表头要有内容* <span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\hline</span></span><br><span class="line"><span class="built_in">&amp;</span></span><br><span class="line"> <span class="keyword">\\</span></span><br><span class="line"><span class="built_in">&amp;</span></span><br><span class="line"> <span class="keyword">\\</span></span><br><span class="line"><span class="built_in">&amp;</span></span><br><span class="line"> <span class="keyword">\\</span></span><br><span class="line"><span class="built_in">&amp;</span></span><br><span class="line"> <span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\bottomrule</span></span><br><span class="line"><span class="keyword">\end</span>&#123;tabular&#125;</span><br><span class="line"><span class="keyword">\label</span>&#123;tab1&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;center&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;table&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\heiti</span> 过程X. <span class="keyword">\quad</span> 过程名称</span><br><span class="line"></span><br><span class="line">&#123;<span class="keyword">\zihao</span>&#123;5-&#125;*《计算机学报》的方法过程描述字体为小5号宋体，IF、THEN等伪代码关键词全部用大写字母，变量和函数名称用斜体*&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\heiti</span> 算法<span class="keyword">\textbf</span>&#123;Y&#125; .<span class="keyword">\quad</span> 算法名称.</span><br><span class="line"><span class="keyword">\zihao</span>&#123;5-&#125;&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\noindent</span> 输入：&#123;<span class="keyword">\ldots</span>&#125; &#123;<span class="keyword">\ldots</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\noindent</span> 输出：&#123;<span class="keyword">\ldots</span>&#125; &#123;<span class="keyword">\ldots</span>&#125;</span><br><span class="line"></span><br><span class="line">*《计算机学报》的算法描述字体为小5号宋体, IF、THEN等伪代码关键词全部用大写字母，变量和函数名称用斜体*&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\vspace</span> &#123;3mm&#125;</span><br><span class="line"><span class="keyword">\zihao</span>&#123;5&#125;&#123;</span><br><span class="line"><span class="keyword">\noindent</span> <span class="keyword">\heiti</span> 致<span class="keyword">\quad</span> 谢 <span class="keyword">\quad</span>  <span class="keyword">\kaishu</span>   *致谢内容.* 致谢 &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\vspace</span> &#123;5mm&#125;</span><br><span class="line"><span class="keyword">\centerline</span></span><br><span class="line">&#123;<span class="keyword">\zihao</span>&#123;5&#125;</span><br><span class="line"><span class="keyword">\heiti</span> 参~考~文~献 &#125;</span><br><span class="line"><span class="keyword">\vspace</span>&#123;7mm&#125;</span><br><span class="line"><span class="keyword">\bibliographystyle</span>&#123;unsrt&#125;</span><br><span class="line"><span class="keyword">\bibliography</span>&#123;references&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% \begin&#123;thebibliography&#125;&#123;99&#125;</span></span><br><span class="line"><span class="comment">% \zihao&#123;5-&#125; \addtolength&#123;\itemsep&#125;&#123;-1em&#125;</span></span><br><span class="line"><span class="comment">% \vspace&#123;1.5mm&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% \bibitem[1]&#123;1&#125;</span></span><br><span class="line"><span class="comment">% 网上的文献(举例：The Cooperative</span></span><br><span class="line"><span class="comment">% Association for Internet Data Analysis(CAIDA),http://www.caida.org/data</span></span><br><span class="line"><span class="comment">% 2010,7,18) \textbf&#123;*请采用脚注放于正文出现处，每页的脚注从1开始编序号*&#125;\footnote&#123;The Cooperative Association for Internet Data</span></span><br><span class="line"><span class="comment">% Analysis (CAIDA), http://www.caida.org/data 2010, 7, 18&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% \bibitem[2]&#123;2&#125; 中文的参考文献需给出中英文对照。形式如[3]。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% \bibitem[3]&#123;3&#125; Zhou Yong-Bin, Feng Deng-Guo. Design and analysis of cryptographic</span></span><br><span class="line"><span class="comment">% protocols for RFID. Chinese Journal of Computers, 2006, 29(4): 581-589 (in</span></span><br><span class="line"><span class="comment">% Chinese) \newline</span></span><br><span class="line"><span class="comment">% (周永彬, 冯登国. RFID安全协议的设计与分析. 计算机学报, 2006, 29(4): 581-589)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% \bibitem[4]&#123;4&#125; 期刊、会议、书籍名称不能用缩写。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% \bibitem[5]&#123;5&#125; 作者(外国人姓在前，名在后可缩写, 后同).</span></span><br><span class="line"><span class="comment">% 题目(英文题目第一字母大写，其它均小写)：副标题(如果有). 刊名(全称), 年,</span></span><br><span class="line"><span class="comment">% 卷(期): 页码 \textbf&#123;*期刊论文格式*&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% \bibitem[6]&#123;6&#125;作者.</span></span><br><span class="line"><span class="comment">% 文章题目(英文题目第1字母大写，其它均小写)：副标题(如果有)//Proceedings of</span></span><br><span class="line"><span class="comment">% the &#123;\ldots&#125; (会议名称). 会议召开城市, 会议召开城市所在国家, 年: 页码</span></span><br><span class="line"><span class="comment">% \textbf&#123;*会议论文集论文格式*&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% \bibitem[7]&#123;7&#125;作者. 文章题目(英文题目第一字母大写, 其它均小写):</span></span><br><span class="line"><span class="comment">% 副标题(如果有)//编者. 文集标题. 出版地: 出版社, 出版年: 页码</span></span><br><span class="line"><span class="comment">% \textbf&#123;*文集格式*&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% \bibitem[8]&#123;8&#125;作者. 书名: 副标题(如果有). 版次(初版不写). 出版社地点: 出版社,</span></span><br><span class="line"><span class="comment">% 出版年 \textbf&#123;*书籍格式*&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% \bibitem[9]&#123;9&#125;作者. 文章题目[博士学位论文/硕士学位论文]. 单位名称,单位地点, 年</span></span><br><span class="line"><span class="comment">% \textbf&#123;*学位论文格式*&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% \bibitem[10]&#123;10&#125;作者. 文章题目(英文题目第一字母大写，其它均小写). 单位地点: 单位,</span></span><br><span class="line"><span class="comment">% 技术报告: 报告编号, 年 \textbf&#123;*技术报告*&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% \bibitem[11]&#123;11&#125;专利拥有人. 专利名称，专利授权国家，专利授权日期</span></span><br><span class="line"><span class="comment">% \textbf&#123;*技术专利*&#125;</span></span><br><span class="line"><span class="comment">% \end&#123;thebibliography&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;strip&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;strip&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\noindent</span> &#123;<span class="keyword">\zihao</span>&#123;5&#125;<span class="keyword">\bf</span>&#123;附录X&#125;.&#125;</span><br><span class="line"></span><br><span class="line">&#123;<span class="keyword">\zihao</span>&#123;5-&#125;<span class="keyword">\setlength</span><span class="keyword">\parindent</span>&#123;2em&#125;</span><br><span class="line">*<span class="keyword">\textbf</span>&#123;附录内容&#125;置于此处，字体为小5号宋体。附录内容包括：<span class="keyword">\textbf</span>&#123;详细的定理证明、公式推导、原始数据&#125;等*&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;strip&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;strip&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;biography&#125;[yourphotofilename.jpg]</span><br><span class="line"><span class="keyword">\noindent</span></span><br><span class="line"><span class="keyword">\textbf</span>&#123;First A. Author&#125;<span class="keyword">\ </span><span class="keyword">\ </span>*计算机学报第1作者提供照片电子图片，尺寸为1寸。英文作者介绍内容包括：出生年,学位(或目前学历),职称,主要研究领域(<span class="keyword">\textbf</span>&#123;与中文作者介绍中的研究方向一致&#125;).*</span><br><span class="line">*字体为小5号Times New Roman*</span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;biography&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;biography&#125;[yourphotofilename.jpg]</span><br><span class="line"><span class="keyword">\noindent</span></span><br><span class="line"><span class="keyword">\textbf</span>&#123;Second B. Author&#125; *英文作者介绍内容包括：出生年,学位(或目前学历),职称,主要研究领域(<span class="keyword">\textbf</span>&#123;与中文作者介绍中的研究方向一致&#125;)。*</span><br><span class="line">*字体为小5号Times New Roman*</span><br><span class="line"><span class="keyword">\end</span>&#123;biography&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;strip&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;strip&#125;</span><br><span class="line"><span class="keyword">\zihao</span>&#123;5&#125;</span><br><span class="line"><span class="keyword">\noindent</span> <span class="keyword">\textbf</span>&#123;Background&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\zihao</span>&#123;5-&#125;&#123;</span><br><span class="line"><span class="keyword">\setlength</span><span class="keyword">\parindent</span>&#123;2em&#125;</span><br><span class="line">*论文背景介绍为<span class="keyword">\textbf</span>&#123;英文&#125;，字体为小5号Times New Roman体*</span><br><span class="line"></span><br><span class="line">论文后面为400单词左右的英文背景介绍。介绍的内容包括：</span><br><span class="line"></span><br><span class="line">本文研究的问题属于哪一个领域的什么问题。该类问题目前国际上解决到什么程度。</span><br><span class="line"></span><br><span class="line">本文将问题解决到什么程度。</span><br><span class="line"></span><br><span class="line">课题所属的项目。</span><br><span class="line"></span><br><span class="line">项目的意义。</span><br><span class="line"></span><br><span class="line">本研究群体以往在这个方向上的研究成果。</span><br><span class="line"></span><br><span class="line">本文的成果是解决大课题中的哪一部分，如果涉及863<span class="built_in">$</span><span class="keyword">\backslash</span> <span class="built_in">$</span>973以及其项目、基金、研究计划，注意这些项目的英文名称应书写正确。&#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> laTex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电脑应用</title>
      <link href="/post/other/%E7%94%B5%E8%84%91%E5%BA%94%E7%94%A8%20/"/>
      <url>/post/other/%E7%94%B5%E8%84%91%E5%BA%94%E7%94%A8%20/</url>
      
        <content type="html"><![CDATA[<blockquote><p>随着在电脑上安装的工具越来越多，对自己的小破电脑也越来越喜欢，因此打算记录下这台电脑上的工具配置，以便以后更换电脑时能很快的回归现在的使用习惯。</p></blockquote><h1 id="效率工具"><a href="#效率工具" class="headerlink" title="效率工具"></a>效率工具</h1><h2 id="MyKeymap"><a href="#MyKeymap" class="headerlink" title="MyKeymap"></a>MyKeymap</h2><p>官网：<a href="https://xianyukang.com/MyKeymap.html">MyKeymap 简介 | 咸鱼阿康 (xianyukang.com)</a></p><p>超级好用的快捷键工具，将大写锁定键更改为命令前置键，然后使用快捷命令启动程序&amp;召唤窗口&amp;控制系统&amp;自定义的按键映射。新机必装！！</p><h1 id="编程工具"><a href="#编程工具" class="headerlink" title="编程工具"></a>编程工具</h1><h2 id="Vscode"><a href="#Vscode" class="headerlink" title="Vscode"></a>Vscode</h2><p>官网：<a href="https://code.visualstudio.com/">Visual Studio Code - Code Editing. Redefined</a></p><p>宇宙IDE,没什么好说的</p><h2 id="Pycharm-IDEA-Android-Studio-微信开发者工具"><a href="#Pycharm-IDEA-Android-Studio-微信开发者工具" class="headerlink" title="Pycharm&#x2F;IDEA&#x2F;Android Studio&#x2F;微信开发者工具"></a>Pycharm&#x2F;IDEA&#x2F;Android Studio&#x2F;微信开发者工具</h2><p>python&#x2F;java&#x2F;安卓&#x2F;微信小程序 的开发工具。Vscode其实一个也够了，但纯爱战神不接受一个IDE写两种语言😡</p><h2 id="Postman"><a href="#Postman" class="headerlink" title="Postman"></a>Postman</h2><p>官网： <a href="https://www.postman.com/downloads/">Download Postman | Get Started for Free</a></p><p>调接口的优秀应用</p><h2 id="Burp-suit-Proxifier"><a href="#Burp-suit-Proxifier" class="headerlink" title="Burp suit&amp;Proxifier"></a>Burp suit&amp;Proxifier</h2><p>抓包两兄弟，Proxifier负责转接请求，Burp suit负责查看&#x2F;修改请求</p><h2 id="Mysql-Navicate"><a href="#Mysql-Navicate" class="headerlink" title="Mysql&amp;Navicate"></a>Mysql&amp;Navicate</h2><p>数据库与管理平台</p><h2 id="Xshell"><a href="#Xshell" class="headerlink" title="Xshell"></a>Xshell</h2><p>服务器连接器</p><h1 id="其他工具"><a href="#其他工具" class="headerlink" title="其他工具"></a>其他工具</h1><h2 id="Notion"><a href="#Notion" class="headerlink" title="Notion"></a>Notion</h2><p>官网：<a href="https://www.notion.so/zh-cn">Notion – The all-in-one workspace for your notes, tasks, wikis, and databases.</a></p><p>攥写文稿，类似Word, 但无论从界面美观度或是功能都薄纱Word。</p><h2 id="V2ray-Clash"><a href="#V2ray-Clash" class="headerlink" title="V2ray&#x2F;Clash"></a>V2ray&#x2F;Clash</h2><p>走向世界的大门</p><h2 id="IDM"><a href="#IDM" class="headerlink" title="IDM"></a>IDM</h2><p><a href="https://www.internetdownloadmanager.com/">Internet Download Manager: The fastest download accelerator</a></p><p>下载工具</p><h2 id="spaceSinffer"><a href="#spaceSinffer" class="headerlink" title="spaceSinffer"></a>spaceSinffer</h2><p>官网：<a href="http://www.uderzo.it/main_products/space_sniffer/">SpaceSniffer, find lost disk space the easy way. (uderzo.it)</a></p><p>图像化地了解谁占了你的硬盘空间</p><h2 id="Verycapture"><a href="#Verycapture" class="headerlink" title="Verycapture"></a>Verycapture</h2><p>官网：<a href="https://verycapture.com/cn/index.html">verycapture - 音视频解决方案</a></p><p>截图工具，功能多过window自带的截图</p><h2 id="BandicamPortable"><a href="#BandicamPortable" class="headerlink" title="BandicamPortable"></a>BandicamPortable</h2><p>官网：<a href="https://www.bandicam.cn/">[官方]Bandicam（班迪录屏）高清电脑屏幕录制软件</a></p><p>录屏工具</p><h1 id="无需多言的应用"><a href="#无需多言的应用" class="headerlink" title="无需多言的应用"></a>无需多言的应用</h1><table><thead><tr><th>qq&amp;微信</th></tr></thead><tbody><tr><td>腾讯会议</td></tr><tr><td>steam</td></tr><tr><td>Edge&#x2F;Chrome</td></tr><tr><td>百度网盘</td></tr></tbody></table><h1 id="Edge插件"><a href="#Edge插件" class="headerlink" title="Edge插件"></a>Edge插件</h1><h2 id="暴力猴-篡改猴"><a href="#暴力猴-篡改猴" class="headerlink" title="暴力猴&amp;篡改猴"></a>暴力猴&amp;篡改猴</h2><p>两个脚本插件</p><h2 id="Global-Speed"><a href="#Global-Speed" class="headerlink" title="Global Speed"></a>Global Speed</h2><p>控制视频播放速度</p><h2 id="Wappalyzer"><a href="#Wappalyzer" class="headerlink" title="Wappalyzer"></a>Wappalyzer</h2><p>显示网页使用的技术框架</p>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> App </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Excel宏的使用</title>
      <link href="/post/other/Excel%E5%AE%8F%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/post/other/Excel%E5%AE%8F%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>需要对爬虫爬取的excel做处理，但自己手动处理确实太慢，突然想到了excel中还有个东西叫宏，就打算学一学</p></blockquote><h1 id="求助ai得到代码"><a href="#求助ai得到代码" class="headerlink" title="求助ai得到代码"></a>求助ai得到代码</h1><p>发现宏是通过编辑代码来进行编辑的，所以也先直接求助ai</p><blockquote><p>请为我编写我需要的宏的代码。我目标的工作的整个流程如下：<br>1.我会选中一块横向长度为1，竖向长度变化的区域。这块区域左侧是一系列数字。<br>2.执行宏<br>宏的作用如下：<br>1.将我选中的区域合并<br>2.将合并区域的内容设置为左侧一系列数字的和<br>如果你对此还有什么问题，请指出，如果没有问题，请为我编写代码</p></blockquote><p>ai回复</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">Sub MergeAndSum()</span><br><span class="line">    Dim selectedRange As Range</span><br><span class="line">    Dim sumValue As Double</span><br><span class="line">    </span><br><span class="line">    &#x27; 检查是否选择了单元格</span><br><span class="line">    If Selection.Cells.Count = 1 Then</span><br><span class="line">        MsgBox &quot;请先选择一个区域！&quot;, vbExclamation</span><br><span class="line">        Exit Sub</span><br><span class="line">    End If</span><br><span class="line">    </span><br><span class="line">    &#x27; 获取当前选择的区域</span><br><span class="line">    Set selectedRange = Selection</span><br><span class="line">    </span><br><span class="line">    &#x27; 检查选择的区域是否有效</span><br><span class="line">    If selectedRange.Columns.Count &lt;&gt; 1 Then</span><br><span class="line">        MsgBox &quot;请选择一个横向长度为1的区域！&quot;, vbExclamation</span><br><span class="line">        Exit Sub</span><br><span class="line">    End If</span><br><span class="line">    </span><br><span class="line">    &#x27; 初始化总和值</span><br><span class="line">    sumValue = 0</span><br><span class="line">    </span><br><span class="line">    &#x27; 遍历选择的区域，计算总和</span><br><span class="line">    For Each cell In selectedRange</span><br><span class="line">        If IsNumeric(cell.Value) Then</span><br><span class="line">            sumValue = sumValue + cell.Value</span><br><span class="line">        End If</span><br><span class="line">    Next cell</span><br><span class="line">    </span><br><span class="line">    &#x27; 合并选择的区域</span><br><span class="line">    selectedRange.Merge</span><br><span class="line">    </span><br><span class="line">    &#x27; 设置合并区域的内容为总和值</span><br><span class="line">    selectedRange.Value = sumValue</span><br><span class="line">End Sub</span><br></pre></td></tr></table></figure><blockquote><p>注意：wps运行的是js宏，要以上代码是vba宏，若要参考，请使用excel</p></blockquote><p>尝试运行了一下，果然不行，于是又开始修修改改，不过没想到只改了一次就行了。</p><p>最终代码是这样的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">Sub MergeAndSumLeft()</span><br><span class="line">    Dim selectedRange As Range</span><br><span class="line">    Dim sumValue As Double</span><br><span class="line">    </span><br><span class="line">    &#x27; 检查是否选择了单元格</span><br><span class="line">    If Selection.Cells.Count = 1 Then</span><br><span class="line">        MsgBox &quot;请先选择一个区域！&quot;, vbExclamation</span><br><span class="line">        Exit Sub</span><br><span class="line">    End If</span><br><span class="line">    </span><br><span class="line">    &#x27; 获取当前选择的区域</span><br><span class="line">    Set selectedRange = Selection</span><br><span class="line">    </span><br><span class="line">    &#x27; 检查选择的区域是否有效</span><br><span class="line">    If selectedRange.Columns.Count &lt;&gt; 1 Then</span><br><span class="line">        MsgBox &quot;请选择一个横向长度为1的区域！&quot;, vbExclamation</span><br><span class="line">        Exit Sub</span><br><span class="line">    End If</span><br><span class="line">    </span><br><span class="line">    &#x27; 初始化总和值</span><br><span class="line">    sumValue = 0</span><br><span class="line">    </span><br><span class="line">    &#x27; 遍历选择的区域，计算总和</span><br><span class="line">    For Each cell In selectedRange</span><br><span class="line">        If IsNumeric(cell.Offset(0, -1).Value) Then</span><br><span class="line">            sumValue = sumValue + cell.Offset(0, -1).Value</span><br><span class="line">        End If</span><br><span class="line">    Next cell</span><br><span class="line">    </span><br><span class="line">    &#x27; 合并选择的区域</span><br><span class="line">    selectedRange.Merge</span><br><span class="line">    </span><br><span class="line">    &#x27; 设置合并区域的内容为左侧一系列数字的和</span><br><span class="line">    selectedRange.Value = sumValue</span><br><span class="line">End Sub</span><br></pre></td></tr></table></figure><h1 id="给宏绑定快捷键"><a href="#给宏绑定快捷键" class="headerlink" title="给宏绑定快捷键"></a>给宏绑定快捷键</h1><p>每运行一次宏都要在数个位置点来点去，很麻烦，因此想着给宏绑定一下快捷键。</p><p>参照链接：</p><p><a href="https://jingyan.baidu.com/article/d8072ac4abeddeec95cefd0d.html">在Excel中如何使用快捷键运行宏-百度经验 (baidu.com)</a></p><h1 id="将宏设置到全局"><a href="#将宏设置到全局" class="headerlink" title="将宏设置到全局"></a>将宏设置到全局</h1><p>上面那种方法设置的宏只能在输入了相关代码的文件中才可用，但我需要处理的是一系列的文件，因此需要将宏设置到全局。</p><p>参考这篇：<a href="https://blog.csdn.net/qq_49195366/article/details/130054885?ops_request_misc=&request_id=&biz_id=102&utm_term=excel%E8%AE%BE%E7%BD%AE%E5%85%A8%E5%B1%80%E5%AE%8F&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-130054885.142%5Ev94%5EchatsearchT3_1&spm=1018.2226.3001.4187">如何使用Excel自定义函数并且全局使用_excel自定义函数怎么共用_coderyeah的博客-CSDN博客</a></p><p>主要过程即为在一个xlsx文件中编辑宏后，保存为xlam格式（c:&#x2F;用户&#x2F;主用户&#x2F;AppData&#x2F;Roaming&#x2F;Microsoft&#x2F;AddIns 目录下，系统默认保存地点就是这里）。之后在“开发者工具”→ “excel加载项” 中勾选对应栏。</p><h1 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h1><h2 id="代码基础"><a href="#代码基础" class="headerlink" title="代码基础"></a>代码基础</h2><h3 id="不同类型的变量的声明"><a href="#不同类型的变量的声明" class="headerlink" title="不同类型的变量的声明"></a>不同类型的变量的声明</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#x27; sheet页</span><br><span class="line">Dim ws As Worksheet</span><br><span class="line">&#x27; 设置要操作的工作表</span><br><span class="line">Set ws = ActiveSheet</span><br><span class="line"></span><br><span class="line">&#x27; 数字</span><br><span class="line">Dim i As Long</span><br><span class="line">i = 1</span><br><span class="line"></span><br><span class="line">&#x27; 区域，一个或多个连续的单元格</span><br><span class="line">Dim rng As Range</span><br><span class="line">&#x27; 定义Ai到A5的区域为rng</span><br><span class="line">Set rng = ws.Range(&quot;A&quot; &amp; i &amp; &quot;:A&quot; &amp; 5)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="IF"><a href="#IF" class="headerlink" title="IF"></a>IF</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">If 条件 Then</span><br><span class="line">    &#x27; 如果条件为真时执行的代码</span><br><span class="line">ElseIf 条件2 Then</span><br><span class="line">    &#x27; 如果条件2为真时执行的代码</span><br><span class="line">Else</span><br><span class="line">    &#x27; 如果以上条件都不为真时执行的代码</span><br><span class="line">End If</span><br><span class="line"></span><br><span class="line">&#x27; 例子</span><br><span class="line">Sub ExampleIfStatement()</span><br><span class="line">    Dim num As Integer</span><br><span class="line">    num = 10</span><br><span class="line">    </span><br><span class="line">    &#x27; 简单的If语句</span><br><span class="line">    If num &gt; 5 Then</span><br><span class="line">        MsgBox &quot;数字大于5&quot;</span><br><span class="line">    End If</span><br><span class="line">    </span><br><span class="line">    &#x27; 带有Else的If语句</span><br><span class="line">    If num &gt; 15 Then</span><br><span class="line">        MsgBox &quot;数字大于15&quot;</span><br><span class="line">    Else</span><br><span class="line">        MsgBox &quot;数字不大于15&quot;</span><br><span class="line">    End If</span><br><span class="line">    </span><br><span class="line">    &#x27; 多个条件的If语句</span><br><span class="line">    If num &gt; 15 Then</span><br><span class="line">        MsgBox &quot;数字大于15&quot;</span><br><span class="line">    ElseIf num &gt; 10 Then</span><br><span class="line">        MsgBox &quot;数字大于10，但不大于15&quot;</span><br><span class="line">    Else</span><br><span class="line">        MsgBox &quot;数字不大于10&quot;</span><br><span class="line">    End If</span><br><span class="line">End Sub</span><br></pre></td></tr></table></figure><h3 id="For"><a href="#For" class="headerlink" title="For"></a>For</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&#x27; For...Next 循环：</span><br><span class="line">&#x27; 用于指定循环次数，通常用于处理数字的范围。它的基本结构如下：</span><br><span class="line"></span><br><span class="line">For [变量] = 初始值 To 终止值 </span><br><span class="line">     循环代码</span><br><span class="line">Next [变量]</span><br><span class="line"></span><br><span class="line">示例:</span><br><span class="line"></span><br><span class="line">Sub ForLoopExample()</span><br><span class="line">    Dim total As Integer</span><br><span class="line">    total = 0</span><br><span class="line">    </span><br><span class="line">    For i = 1 To 10</span><br><span class="line">        total = total + i</span><br><span class="line">    Next i</span><br><span class="line">    </span><br><span class="line">    MsgBox &quot;总和为：&quot; &amp; total</span><br><span class="line">End Sub</span><br><span class="line"></span><br><span class="line">&#x27;&#x27;-------------------------------------------------------------------&#x27;&#x27;</span><br><span class="line">For Each...Next 循环：</span><br><span class="line">用于循环遍历集合、数组或范围中的元素，而不需要指定循环次数。</span><br><span class="line"></span><br><span class="line">For Each [元素] In 集合</span><br><span class="line">    &#x27; 循环代码</span><br><span class="line">Next [元素]</span><br><span class="line"></span><br><span class="line">示例:</span><br><span class="line"></span><br><span class="line">Sub ForEachLoopExample()</span><br><span class="line">    Dim arr() As Integer</span><br><span class="line">    arr = Array(1, 2, 3, 4, 5)</span><br><span class="line">   </span><br><span class="line">    For Each num In arr</span><br><span class="line">        MsgBox &quot;元素的值为：&quot; &amp; num</span><br><span class="line">    Next num</span><br><span class="line">End Sub</span><br></pre></td></tr></table></figure><h2 id="获取对象"><a href="#获取对象" class="headerlink" title="获取对象"></a>获取对象</h2><h3 id="获取单元格"><a href="#获取单元格" class="headerlink" title="获取单元格"></a>获取单元格</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x27; 通过行与列获取单元格</span><br><span class="line">    Set cell1 = ws.Cells(x, y)</span><br><span class="line">&#x27; 通过已有单元格偏移获取单元格</span><br><span class="line">    Set cell2 = cell1.Offset(1, 1) &#x27; 向下偏移1行，向右偏移1列，偏移量可为负数</span><br></pre></td></tr></table></figure><h3 id="获取一列"><a href="#获取一列" class="headerlink" title="获取一列"></a>获取一列</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Set selectedRange = Selection &#x27; 获取选择的列</span><br><span class="line">&#x27; 遍历选定列的每个单元格</span><br><span class="line">lastRow = selectedRange.Cells(selectedRange.Rows.Count, 1).End(xlUp).Row</span><br><span class="line">For Each cell In selectedRange</span><br><span class="line">    If IsEmpty(cell) Then</span><br><span class="line">        cell.value = cell.Offset(-1, 0).value   &#x27;设置单元格的值</span><br><span class="line">    End If</span><br><span class="line">    If cell.Row = lastRow Then</span><br><span class="line">        Exit For</span><br><span class="line">    End If</span><br><span class="line">Next cell</span><br></pre></td></tr></table></figure><h3 id="获取当前正在操作的工作表作为对象"><a href="#获取当前正在操作的工作表作为对象" class="headerlink" title="获取当前正在操作的工作表作为对象"></a>获取当前正在操作的工作表作为对象</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x27; 检查是否选择了工作表</span><br><span class="line">    If ActiveSheet Is Nothing Then</span><br><span class="line">        MsgBox &quot;请先选择一个工作表！&quot;, vbExclamation</span><br><span class="line">        Exit Sub</span><br><span class="line">    End If</span><br><span class="line">    </span><br><span class="line">    &#x27; 设置要操作的工作表</span><br><span class="line">    Set ws = ActiveSheet</span><br></pre></td></tr></table></figure><h3 id="获取第n列最后一行的行号"><a href="#获取第n列最后一行的行号" class="headerlink" title="获取第n列最后一行的行号"></a>获取第n列最后一行的行号</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x27; 获取工作表中第n列最后一行的行号</span><br><span class="line">    lastRow = ws.Cells(ws.Rows.Count, n).End(xlUp).Row</span><br></pre></td></tr></table></figure><h2 id="excel操作"><a href="#excel操作" class="headerlink" title="excel操作"></a>excel操作</h2><h3 id="行列的插入与删除"><a href="#行列的插入与删除" class="headerlink" title="行列的插入与删除"></a>行列的插入与删除</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x27; 插入新列在第n列之前</span><br><span class="line">    Columns(n).Insert Shift:=xlToRight</span><br><span class="line">&#x27; 在第n行前插入一行</span><br><span class="line">    ws.Rows(n).Insert Shift:=xlShiftDown</span><br><span class="line">&#x27; 删除第n行</span><br><span class="line">    ws.Rows(n).Delete</span><br><span class="line">&#x27; 删除第n列</span><br><span class="line">ws.Columns(n).Delete</span><br></pre></td></tr></table></figure><h3 id="合并与解散单元格"><a href="#合并与解散单元格" class="headerlink" title="合并与解散单元格"></a>合并与解散单元格</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x27; 设置合并区域,Ax为左上角，By为右下角</span><br><span class="line">    Set mergeRange = ws.Range(&quot;A&quot; &amp; x &amp; &quot;:B&quot; &amp; y)</span><br><span class="line">    mergeRange.Merge</span><br><span class="line">&#x27; 解除合并</span><br><span class="line">mergedRange.UnMerge</span><br></pre></td></tr></table></figure><h1 id="常用宏示例"><a href="#常用宏示例" class="headerlink" title="常用宏示例"></a>常用宏示例</h1><h3 id="解开所有合并的单元格，然后删除页面中的空行"><a href="#解开所有合并的单元格，然后删除页面中的空行" class="headerlink" title="解开所有合并的单元格，然后删除页面中的空行"></a>解开所有合并的单元格，然后删除页面中的空行</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">Sub DeleteBlankRows()</span><br><span class="line">    Dim ws As Worksheet</span><br><span class="line">    Dim lastRow As Long</span><br><span class="line">    Dim i As Long</span><br><span class="line">    Dim rng As Range</span><br><span class="line">    &#x27; 检查是否选择了工作表</span><br><span class="line">    If ActiveSheet Is Nothing Then</span><br><span class="line">        MsgBox &quot;请先选择一个工作表！&quot;, vbExclamation</span><br><span class="line">        Exit Sub</span><br><span class="line">    End If</span><br><span class="line">    </span><br><span class="line">    &#x27; 设置要操作的工作表</span><br><span class="line">    Set ws = ActiveSheet</span><br><span class="line">    </span><br><span class="line">    &#x27; 取消合并所有单元格</span><br><span class="line">    On Error Resume Next &#x27; 忽略错误，以防某些单元格没有合并</span><br><span class="line">    Set mergedRange = ws.Cells</span><br><span class="line">    mergedRange.UnMerge</span><br><span class="line">    On Error GoTo 0 &#x27; 恢复错误处理</span><br><span class="line">    </span><br><span class="line">    &#x27; 获取工作表中最后一行的行号</span><br><span class="line">    lastRow = ws.Cells(ws.Rows.Count, 1).End(xlUp).Row</span><br><span class="line">    </span><br><span class="line">    &#x27; 循环遍历每一行，从最后一行向上查找空行并删除</span><br><span class="line">    For i = lastRow To 1 Step -1</span><br><span class="line">        If Application.WorksheetFunction.CountA(ws.Rows(i)) = 0 Then</span><br><span class="line">            &#x27; 如果行中没有非空单元格，则删除该行</span><br><span class="line">            ws.Rows(i).Delete</span><br><span class="line">        End If</span><br><span class="line">    Next i</span><br><span class="line">End Sub</span><br></pre></td></tr></table></figure><h1 id="进阶示例"><a href="#进阶示例" class="headerlink" title="进阶示例"></a>进阶示例</h1><p>以下为一个vba宏代码的示例。作用的场景是一个第三列为数字，第四列为多个合并了的单元格的表格。作用是在第三列与第四列之间插入一个新列，新列的布局同原本的第四列，但内容是相邻的第三列数字的和</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">Sub test()</span><br><span class="line">    Dim ws As Worksheet</span><br><span class="line">    Dim lastRow As Long</span><br><span class="line">    Dim i As Long</span><br><span class="line">    Dim cell As Range</span><br><span class="line">    Dim mergeRange As Range</span><br><span class="line">    Dim sumRange As Range</span><br><span class="line">    Dim cellHeight As Long</span><br><span class="line">    Dim value As Long</span><br><span class="line">    </span><br><span class="line">    &#x27; 检查是否选择了工作表</span><br><span class="line">    If ActiveSheet Is Nothing Then</span><br><span class="line">        MsgBox &quot;请先选择一个工作表！&quot;, vbExclamation</span><br><span class="line">        Exit Sub</span><br><span class="line">    End If</span><br><span class="line">    </span><br><span class="line">    &#x27; 设置要操作的工作表</span><br><span class="line">    Set ws = ActiveSheet</span><br><span class="line">    </span><br><span class="line">    &#x27; 获取工作表中最后一行的行号</span><br><span class="line">    lastRow = ws.Cells(ws.Rows.Count, 4).End(xlUp).Row</span><br><span class="line">    </span><br><span class="line">    &#x27; 插入新列在第四列之前</span><br><span class="line">    Columns(4).Insert Shift:=xlToRight</span><br><span class="line">    i = 1</span><br><span class="line">    For Each cell In ws.Range(&quot;E1:E&quot; &amp; lastRow)</span><br><span class="line">        If Not IsEmpty(cell) Then</span><br><span class="line">            &#x27; 如果第四列中有数据</span><br><span class="line">            If cell.MergeCells Then</span><br><span class="line">                &#x27; 如果单元格是合并单元格，获取合并单元格的长度</span><br><span class="line">                cellHeight = i + cell.MergeArea.Rows.Count - 1</span><br><span class="line">                &#x27; 合并新的单元格</span><br><span class="line">                Set mergeRange = ws.Range(&quot;D&quot; &amp; i &amp; &quot;:D&quot; &amp; cellHeight)</span><br><span class="line">                mergeRange.Merge</span><br><span class="line">                Set sumRange = ws.Range(&quot;C&quot; &amp; i &amp; &quot;:C&quot; &amp; cellHeight)</span><br><span class="line">                value = WorksheetFunction.Sum(sumRange)</span><br><span class="line">                mergeRange.value = value</span><br><span class="line">                i = cellHeight + 1</span><br><span class="line">            Else</span><br><span class="line">                Set mergeRange = Range(&quot;D&quot; &amp; i)</span><br><span class="line">                Set sumRange = Range(&quot;C&quot; &amp; i)</span><br><span class="line">                mergeRange.value = sumRange.value</span><br><span class="line">                i = i + 1</span><br><span class="line">            End If</span><br><span class="line">        End If</span><br><span class="line">    Next cell</span><br><span class="line">End Sub</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Excel </tag>
            
            <tag> vba </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>beautifulSoup与openpyxl的初步学习</title>
      <link href="/post/python/beautifulSoup%E4%B8%8Eopenpyxl%E7%9A%84%E5%88%9D%E6%AD%A5%E5%AD%A6%E4%B9%A0/"/>
      <url>/post/python/beautifulSoup%E4%B8%8Eopenpyxl%E7%9A%84%E5%88%9D%E6%AD%A5%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>出于公司要求，需要爬取一个网站的信息，所以临时学一下爬虫</p></blockquote><blockquote><p>试验网址：<a href="http://www.xiaoyuanzhaopin.net/bjsyxx/">http://www.xiaoyuanzhaopin.net/bjsyxx/</a></p></blockquote><h1 id="通过ai获取初步代码"><a href="#通过ai获取初步代码" class="headerlink" title="通过ai获取初步代码"></a>通过ai获取初步代码</h1><p>根据文档学完代码后总会感觉有些不知道从何开始，所以这次尝试根据代码学代码，一边改一边学。而初步的代码，打算从ai那里获得。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">prompt:</span><br><span class="line">我需要从网址“http://www.xiaoyuanzhaopin.net/bjsyxx/”获取信息，请你为我设计一个爬虫。这个网页的结构如下：</span><br><span class="line">该网页中具有多个&lt;table&gt;标签，每个&lt;table&gt;标签有子元素&lt;tbody&gt;，&lt;tbody&gt;的子元素是数个&lt;tr&gt;,每个&lt;tr&gt;有一个子元素&lt;td&gt;,&lt;td&gt;标签中有两个子&lt;a&gt;标签。我需要的内容在第二个&lt;a&gt;标签跳转到的页面中。</span><br><span class="line">跳转到的页面有两处含有我需要的信息：</span><br><span class="line">第一处：一个class为“entry-header”的&lt;header&gt;标签，其中有一个class为”entry-title”的&lt;h1&gt;标签，我需要这个&lt;h1&gt;标签内的text。</span><br><span class="line">第二处：一个class为”entry-content”的&lt;div&gt;标签，其子元素是多个&lt;p&gt;标签以及一个&lt;figure&gt;标签。&lt;p&gt;标签中要么仅含有text,要么含有一个&lt;a&gt;标签。如果仅含有text，则提取text；如果是&lt;a&gt;标签，则同时保留&lt;a&gt;标签中的text以及链接。&lt;figure&gt;标签中含有一个&lt;tbody&gt;，&lt;tbody&gt;中含有多个&lt;tr&gt;，每个&lt;tr&gt;中有一个&lt;td&gt;,每个&lt;td&gt;中有一个&lt;a&gt;，我需要&lt;a&gt;中的text以及链接。</span><br><span class="line">最终以json格式输出，json中键值说明如下：</span><br><span class="line">1.title: 值为&lt;h1&gt;标签中的text,类型为string</span><br><span class="line">2.content: 值为&lt;p&gt;标签中的内容，类型为&#123;title2 : string, src : string&#125;，title2为&lt;p&gt;标签或其中&lt;a&gt;标签的text, src为&lt;a&gt;标签跳转的链接，如过没有a标签则为””。</span><br><span class="line">3.addContent:值为&lt;figure&gt;中的&lt;a&gt;的内容，类型为&#123;title3 : string, src : string&#125;。title3为&lt;a&gt;标签的text, src为&lt;a&gt;标签跳转的链接</span><br><span class="line">如果你还有什么疑问，请提出，如果没有，请帮我生成相应代码。</span><br></pre></td></tr></table></figure><p>AI的回复如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义函数来提取目标信息</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">extract_info</span>(<span class="params">url</span>):</span><br><span class="line">    response = requests.get(url)</span><br><span class="line">    <span class="keyword">if</span> response.status_code != <span class="number">200</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;无法访问网页: <span class="subst">&#123;url&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    soup = BeautifulSoup(response.text, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 提取标题信息</span></span><br><span class="line">    title = soup.find(<span class="string">&#x27;h1&#x27;</span>, class_=<span class="string">&#x27;entry-title&#x27;</span>).text.strip()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 提取内容信息</span></span><br><span class="line">    content = []</span><br><span class="line">    content_div = soup.find(<span class="string">&#x27;div&#x27;</span>, class_=<span class="string">&#x27;entry-content&#x27;</span>)</span><br><span class="line">    paragraphs = content_div.find_all(<span class="string">&#x27;p&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> paragraph <span class="keyword">in</span> paragraphs:</span><br><span class="line">        <span class="keyword">if</span> paragraph.a:</span><br><span class="line">            content.append(&#123;</span><br><span class="line">                <span class="string">&#x27;title2&#x27;</span>: paragraph.a.text.strip(),</span><br><span class="line">                <span class="string">&#x27;src&#x27;</span>: paragraph.a[<span class="string">&#x27;href&#x27;</span>]</span><br><span class="line">            &#125;)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            content.append(&#123;</span><br><span class="line">                <span class="string">&#x27;title2&#x27;</span>: paragraph.text.strip(),</span><br><span class="line">                <span class="string">&#x27;src&#x27;</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 提取附加内容信息</span></span><br><span class="line">    add_content = []</span><br><span class="line">    figure = content_div.find(<span class="string">&#x27;figure&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> figure:</span><br><span class="line">        figure_links = figure.find_all(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> link <span class="keyword">in</span> figure_links:</span><br><span class="line">            add_content.append(&#123;</span><br><span class="line">                <span class="string">&#x27;title3&#x27;</span>: link.text.strip(),</span><br><span class="line">                <span class="string">&#x27;src&#x27;</span>: link[<span class="string">&#x27;href&#x27;</span>]</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将结果以JSON格式输出</span></span><br><span class="line">    result = &#123;</span><br><span class="line">        <span class="string">&#x27;title&#x27;</span>: title,</span><br><span class="line">        <span class="string">&#x27;content&#x27;</span>: content,</span><br><span class="line">        <span class="string">&#x27;addContent&#x27;</span>: add_content</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取主页面中的所有链接</span></span><br><span class="line">main_url = <span class="string">&quot;http://www.xiaoyuanzhaopin.net/bjsyxx/&quot;</span></span><br><span class="line">main_response = requests.get(main_url)</span><br><span class="line">main_soup = BeautifulSoup(main_response.text, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line">main_links = main_soup.find_all(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 存储所有网页的信息</span></span><br><span class="line">all_results = []</span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历每个链接并提取信息</span></span><br><span class="line"><span class="keyword">for</span> link <span class="keyword">in</span> main_links:</span><br><span class="line">    link_url = link.get(<span class="string">&#x27;href&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> link_url <span class="keyword">and</span> link_url.startswith(<span class="string">&#x27;http&#x27;</span>):</span><br><span class="line">        result = extract_info(link_url)</span><br><span class="line">        <span class="keyword">if</span> result:</span><br><span class="line">            all_results.append(result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将所有结果以JSON格式输出</span></span><br><span class="line">output_json = json.dumps(all_results, ensure_ascii=<span class="literal">False</span>, indent=<span class="number">4</span>)</span><br><span class="line"><span class="built_in">print</span>(output_json)</span><br></pre></td></tr></table></figure><p>gpt确实很厉害，大概的轮廓一下子就出来了。</p><h1 id="根据遇到的问题修改代码"><a href="#根据遇到的问题修改代码" class="headerlink" title="根据遇到的问题修改代码"></a>根据遇到的问题修改代码</h1><p>在尝试运行的过程中，发现了一系列的问题，但从 gpt生成的初步代码已然能看出函数的用法，于是尝试照着规律修改代码，并且再次询问了一次gpt，使结果会输出到一个excel的表格中。最终代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> openpyxl</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> openpyxl.styles <span class="keyword">import</span> Font, Alignment, Border, Side</span><br><span class="line"><span class="keyword">from</span> openpyxl.utils <span class="keyword">import</span> get_column_letter</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义函数来提取目标信息</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">extract_info</span>(<span class="params">url,position</span>):</span><br><span class="line">    response = requests.get(url)</span><br><span class="line">    <span class="keyword">if</span> response.status_code != <span class="number">200</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;无法访问网页: <span class="subst">&#123;url&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    soup = BeautifulSoup(response.text, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 提取标题信息</span></span><br><span class="line">    title = soup.find(<span class="string">&#x27;h1&#x27;</span>, class_=<span class="string">&#x27;entry-title&#x27;</span>).text.strip()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 提取内容信息</span></span><br><span class="line">    content = []</span><br><span class="line">    content_div = soup.find(<span class="string">&#x27;div&#x27;</span>, class_=<span class="string">&#x27;entry-content&#x27;</span>)</span><br><span class="line">    paragraphs = content_div.find_all(<span class="string">&#x27;p&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> paragraph <span class="keyword">in</span> paragraphs:</span><br><span class="line">        <span class="keyword">if</span> paragraph.a:</span><br><span class="line">            links = paragraph.find_all(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">            <span class="keyword">for</span> link <span class="keyword">in</span> links:</span><br><span class="line">                content.append(&#123;</span><br><span class="line">                    <span class="string">&#x27;title&#x27;</span>: link.text.strip(),</span><br><span class="line">                    <span class="string">&#x27;src&#x27;</span>: link[<span class="string">&#x27;href&#x27;</span>]</span><br><span class="line">                &#125;)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> paragraph.img:</span><br><span class="line">            imgs = paragraph.find_all(<span class="string">&#x27;img&#x27;</span>)</span><br><span class="line">            i = <span class="number">1</span></span><br><span class="line">            <span class="keyword">for</span> img <span class="keyword">in</span> imgs:</span><br><span class="line">                content.append(&#123;</span><br><span class="line">                    <span class="string">&#x27;title&#x27;</span>: <span class="string">&#x27;图片&#x27;</span>+ <span class="built_in">str</span>(i) +<span class="string">&#x27;-&#x27;</span>+title,</span><br><span class="line">                    <span class="string">&#x27;src&#x27;</span>: img[<span class="string">&#x27;src&#x27;</span>]</span><br><span class="line">                &#125;)</span><br><span class="line">                i=i+<span class="number">1</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            content.append(&#123;</span><br><span class="line">                <span class="string">&#x27;title&#x27;</span>: paragraph.text.strip(),</span><br><span class="line">                <span class="string">&#x27;src&#x27;</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">            &#125;)</span><br><span class="line">    ulists = content_div.find(<span class="string">&#x27;ul&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span>(ulists):</span><br><span class="line">        ulistsrcs = ulists.find_all(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> ulistsrc <span class="keyword">in</span> ulistsrcs:</span><br><span class="line">            content.append(&#123;</span><br><span class="line">                <span class="string">&#x27;title&#x27;</span>: ulistsrc.text.strip(),</span><br><span class="line">                <span class="string">&#x27;src&#x27;</span>: ulistsrc[<span class="string">&#x27;href&#x27;</span>]</span><br><span class="line">            &#125;)</span><br><span class="line">    olists = content_div.find(<span class="string">&#x27;ol&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span>(olists):</span><br><span class="line">        olistsrcs = olists.find_all(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> olistsrc <span class="keyword">in</span> olistsrcs:</span><br><span class="line">            content.append(&#123;</span><br><span class="line">                <span class="string">&#x27;title&#x27;</span>: olistsrc.text.strip(),</span><br><span class="line">                <span class="string">&#x27;src&#x27;</span>: olistsrc[<span class="string">&#x27;href&#x27;</span>]</span><br><span class="line">            &#125;)</span><br><span class="line">    <span class="comment"># 提取附加内容信息</span></span><br><span class="line">    figures = content_div.find_all(<span class="string">&#x27;figure&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> figures:</span><br><span class="line">        <span class="keyword">for</span> figure <span class="keyword">in</span> figures:</span><br><span class="line">            figure_links = figure.find_all(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">            len_links = <span class="built_in">len</span>(figure_links)</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(len_links - <span class="number">1</span>):</span><br><span class="line">                content.append(&#123;</span><br><span class="line">                    <span class="string">&#x27;title&#x27;</span>: figure_links[i].text.strip(),</span><br><span class="line">                    <span class="string">&#x27;src&#x27;</span>: figure_links[i][<span class="string">&#x27;href&#x27;</span>]</span><br><span class="line">                &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将结果以JSON格式输出</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(content)!= <span class="number">0</span>:</span><br><span class="line">        result = &#123;</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span>: title,</span><br><span class="line">            <span class="string">&#x27;content&#x27;</span>: content,</span><br><span class="line">            <span class="string">&#x27;position&#x27;</span>:position,</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">print</span>(result)</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    errschool.append(title)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 存储所有网页的信息</span></span><br><span class="line">all_results = []</span><br><span class="line"><span class="comment"># 储存出现问题的学校</span></span><br><span class="line">errschool = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">creat_excel</span>(<span class="params">data,location</span>):</span><br><span class="line">    <span class="comment"># 创建一个新的Excel工作簿</span></span><br><span class="line">    workbook = openpyxl.Workbook()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建一个新的工作表</span></span><br><span class="line">    worksheet = workbook.active</span><br><span class="line">    worksheet.title = <span class="string">&quot;Data&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 定义样式</span></span><br><span class="line">    title_font = Font(size=<span class="number">12</span>, bold=<span class="literal">True</span>)</span><br><span class="line">    title_alignment = Alignment(vertical=<span class="string">&#x27;center&#x27;</span>)</span><br><span class="line">    url_font = Font(color=<span class="string">&quot;0000FF&quot;</span>, underline=<span class="string">&quot;single&quot;</span>)</span><br><span class="line">    border = Border(left=Side(style=<span class="string">&#x27;thin&#x27;</span>), right=Side(style=<span class="string">&#x27;thin&#x27;</span>), top=Side(style=<span class="string">&#x27;thin&#x27;</span>),</span><br><span class="line">                    bottom=Side(style=<span class="string">&#x27;thin&#x27;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 写入表头</span></span><br><span class="line">    worksheet[<span class="string">&#x27;A1&#x27;</span>] = <span class="string">&quot;学校&quot;</span></span><br><span class="line">    worksheet[<span class="string">&#x27;B1&#x27;</span>] = <span class="string">&quot;位置&quot;</span></span><br><span class="line">    worksheet[<span class="string">&#x27;C1&#x27;</span>] = <span class="string">&quot;内容&quot;</span></span><br><span class="line">    worksheet[<span class="string">&#x27;D1&#x27;</span>] = <span class="string">&quot;链接&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#设置样式</span></span><br><span class="line">    <span class="keyword">for</span> col_letter <span class="keyword">in</span> [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;D&#x27;</span>]:</span><br><span class="line">        cell = worksheet[<span class="string">f&#x27;<span class="subst">&#123;col_letter&#125;</span>1&#x27;</span>]</span><br><span class="line">        cell.font = title_font</span><br><span class="line">        cell.alignment = title_alignment</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 写入数据</span></span><br><span class="line">    row_num = <span class="number">2</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> data:</span><br><span class="line">        title = item[<span class="string">&#x27;title&#x27;</span>]</span><br><span class="line">        position = item[<span class="string">&#x27;position&#x27;</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 获取相同标题的结束行号</span></span><br><span class="line">        end_row = row_num + <span class="built_in">len</span>(item[<span class="string">&#x27;content&#x27;</span>]) - <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> content_item <span class="keyword">in</span> item[<span class="string">&#x27;content&#x27;</span>]:</span><br><span class="line">            content_title = content_item[<span class="string">&#x27;title&#x27;</span>]</span><br><span class="line">            content_src = content_item[<span class="string">&#x27;src&#x27;</span>]</span><br><span class="line"></span><br><span class="line">            worksheet[<span class="string">f&#x27;A<span class="subst">&#123;row_num&#125;</span>&#x27;</span>] = title</span><br><span class="line">            worksheet[<span class="string">f&#x27;B<span class="subst">&#123;row_num&#125;</span>&#x27;</span>] = position</span><br><span class="line">            worksheet[<span class="string">f&#x27;C<span class="subst">&#123;row_num&#125;</span>&#x27;</span>] = content_title</span><br><span class="line">            worksheet[<span class="string">f&#x27;D<span class="subst">&#123;row_num&#125;</span>&#x27;</span>] = content_src</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 设置单元格样式</span></span><br><span class="line">            <span class="keyword">for</span> col_letter <span class="keyword">in</span> [<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>]:</span><br><span class="line">                cell = worksheet[<span class="string">f&#x27;<span class="subst">&#123;col_letter&#125;</span><span class="subst">&#123;row_num&#125;</span>&#x27;</span>]</span><br><span class="line">                cell.border = border</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> col_letter <span class="keyword">in</span> [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>]:</span><br><span class="line">                cell = worksheet[<span class="string">f&#x27;<span class="subst">&#123;col_letter&#125;</span><span class="subst">&#123;row_num&#125;</span>&#x27;</span>]</span><br><span class="line">                cell.border = border</span><br><span class="line">                cell.alignment = title_alignment</span><br><span class="line">                cell.font = title_font</span><br><span class="line">            <span class="comment"># 设置链接样式</span></span><br><span class="line">            worksheet[<span class="string">f&#x27;D<span class="subst">&#123;row_num&#125;</span>&#x27;</span>].font = url_font</span><br><span class="line">            worksheet[<span class="string">f&#x27;D<span class="subst">&#123;row_num&#125;</span>&#x27;</span>].hyperlink = content_src</span><br><span class="line"></span><br><span class="line">            row_num += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 合并相同标题的单元格</span></span><br><span class="line">        worksheet.merge_cells(<span class="string">f&#x27;A<span class="subst">&#123;row_num - <span class="built_in">len</span>(item[<span class="string">&quot;content&quot;</span>])&#125;</span>:A<span class="subst">&#123;end_row&#125;</span>&#x27;</span>)</span><br><span class="line">        worksheet.merge_cells(<span class="string">f&#x27;B<span class="subst">&#123;row_num - <span class="built_in">len</span>(item[<span class="string">&quot;content&quot;</span>])&#125;</span>:B<span class="subst">&#123;end_row&#125;</span>&#x27;</span>)</span><br><span class="line">        row_num += <span class="number">1</span>  <span class="comment"># 换行</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> column <span class="keyword">in</span> worksheet.columns:</span><br><span class="line">        max_length = <span class="number">0</span></span><br><span class="line">        column = [cell <span class="keyword">for</span> cell <span class="keyword">in</span> column]</span><br><span class="line">        <span class="keyword">for</span> cell <span class="keyword">in</span> column:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(<span class="built_in">str</span>(cell.value)) &gt; max_length:</span><br><span class="line">                    max_length = <span class="built_in">len</span>(cell.value)</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">        adjusted_width = (max_length + <span class="number">2</span>)</span><br><span class="line">        worksheet.column_dimensions[get_column_letter(column[<span class="number">0</span>].column)].width = adjusted_width</span><br><span class="line">    worksheet.column_dimensions[<span class="string">&#x27;A&#x27;</span>].width = <span class="number">32</span></span><br><span class="line">    worksheet.column_dimensions[<span class="string">&#x27;B&#x27;</span>].width = <span class="number">9</span></span><br><span class="line">    worksheet.column_dimensions[<span class="string">&#x27;C&#x27;</span>].width = <span class="number">60</span></span><br><span class="line">    <span class="comment"># 指定输出的Excel文件路径</span></span><br><span class="line">    output_excel_path = <span class="string">f&#x27;./excelInfo/<span class="subst">&#123;location&#125;</span>.xlsx&#x27;</span></span><br><span class="line">    <span class="comment"># 保存Excel文件</span></span><br><span class="line">    workbook.save(output_excel_path)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;数据已成功写入 <span class="subst">&#123;output_excel_path&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">creat_json</span>(<span class="params">data,location</span>):</span><br><span class="line">    <span class="comment"># 将数据写入 JSON 文件</span></span><br><span class="line">    output_file_path = <span class="string">f&#x27;./jsonInfo/<span class="subst">&#123;location&#125;</span>.json&#x27;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(output_file_path, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> json_file:</span><br><span class="line">        json.dump(data, json_file, ensure_ascii=<span class="literal">False</span>, indent=<span class="number">4</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;数据已成功写入 <span class="subst">&#123;output_file_path&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 按间距中的绿色按钮以运行脚本。</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># result = extract_info(&#x27;http://www.xiaoyuanzhaopin.net/tsinghua-syxx/&#x27;)</span></span><br><span class="line">    main_url = <span class="string">&quot;http://www.xiaoyuanzhaopin.net/fjsyxx/&quot;</span></span><br><span class="line">    location = <span class="string">&#x27;福建&#x27;</span></span><br><span class="line">    main_response = requests.get(main_url)</span><br><span class="line">    main_soup = BeautifulSoup(main_response.text, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line">    main_content = main_soup.find(<span class="string">&#x27;div&#x27;</span>,class_=<span class="string">&#x27;entry-content&#x27;</span>)</span><br><span class="line">    tables = main_content.find_all(<span class="string">&#x27;table&#x27;</span>)</span><br><span class="line">    main_links=[]</span><br><span class="line">    <span class="keyword">for</span> table <span class="keyword">in</span> tables:</span><br><span class="line">        <span class="comment"># 查找&lt;td&gt;标签</span></span><br><span class="line">        td_elements = table.find_all(<span class="string">&#x27;td&#x27;</span>)</span><br><span class="line">        <span class="comment"># 提取&lt;td&gt;标签中的&lt;a&gt;标签</span></span><br><span class="line">        <span class="keyword">for</span> td <span class="keyword">in</span> td_elements:</span><br><span class="line">            a_elements = td.find_all(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(a_elements)==<span class="number">2</span>:</span><br><span class="line">                link = &#123;</span><br><span class="line">                    <span class="string">&#x27;position&#x27;</span>: a_elements[<span class="number">0</span>].text.strip(),</span><br><span class="line">                    <span class="string">&#x27;text&#x27;</span>: a_elements[<span class="number">1</span>].text.strip(),</span><br><span class="line">                    <span class="string">&#x27;href&#x27;</span>: a_elements[<span class="number">1</span>][<span class="string">&#x27;href&#x27;</span>]</span><br><span class="line">                &#125;</span><br><span class="line">                main_links.append(link)</span><br><span class="line">    <span class="keyword">for</span> link <span class="keyword">in</span> main_links:</span><br><span class="line">        time.sleep(<span class="number">0.7</span>)</span><br><span class="line">        link_url = link.get(<span class="string">&#x27;href&#x27;</span>)</span><br><span class="line">        result = extract_info(link_url,link.get(<span class="string">&#x27;position&#x27;</span>))</span><br><span class="line">        <span class="keyword">if</span> result:</span><br><span class="line">            all_results.append(result)</span><br><span class="line"></span><br><span class="line">    creat_json(all_results,location)</span><br><span class="line">    creat_excel(all_results,location)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">len</span>(all_results))</span><br><span class="line">    <span class="built_in">print</span>(errschool)</span><br></pre></td></tr></table></figure><h1 id="从代码中学习"><a href="#从代码中学习" class="headerlink" title="从代码中学习"></a>从代码中学习</h1><p>发现通过代码实例来学习的效率确实要高很多，一下子就学会beautifulSoup和openpyxl的基础用法了。</p><h2 id="beautifulSoup"><a href="#beautifulSoup" class="headerlink" title="beautifulSoup"></a>beautifulSoup</h2><h3 id="获取页面的beautifulSoup对象"><a href="#获取页面的beautifulSoup对象" class="headerlink" title="获取页面的beautifulSoup对象"></a>获取页面的beautifulSoup对象</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">response = requests.get(url)</span><br><span class="line">    <span class="keyword">if</span> response.status_code != <span class="number">200</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;无法访问网页: <span class="subst">&#123;url&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    soup = BeautifulSoup(response.text, <span class="string">&#x27;html.parser&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="根据需要获取标签"><a href="#根据需要获取标签" class="headerlink" title="根据需要获取标签"></a>根据需要获取标签</h3><table><thead><tr><th>soup.find(‘标签名’, [class_&#x3D;’类名’])</th><th>返回符合的第一个元素，元素仍然是soup对象</th></tr></thead><tbody><tr><td>soup.find_all(‘标签名’, [class_&#x3D;’类名’])</td><td>获取符合的所有元素，返回数组。数组中的每一个元素仍是soup对象</td></tr></tbody></table><h3 id="获取标签的属性值"><a href="#获取标签的属性值" class="headerlink" title="获取标签的属性值"></a>获取标签的属性值</h3><table><thead><tr><th>soup.text.strip()</th><th>获取标签内部的文本</th></tr></thead><tbody><tr><td>soup[’src’]</td><td>获取标签的src属性值</td></tr><tr><td>soup[’herf’]</td><td>获取标签的herf值</td></tr></tbody></table><p>爬取页面需要的东西好像就这些也就够了。</p><h2 id="openpyxl"><a href="#openpyxl" class="headerlink" title="openpyxl"></a>openpyxl</h2><h3 id="创建一个新的Excel对象"><a href="#创建一个新的Excel对象" class="headerlink" title="创建一个新的Excel对象"></a>创建一个新的Excel对象</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">workbook = openpyxl.Workbook()</span><br></pre></td></tr></table></figure><h3 id="创建一页新的sheet"><a href="#创建一页新的sheet" class="headerlink" title="创建一页新的sheet"></a>创建一页新的sheet</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">worksheet = workbook.active</span><br><span class="line">worksheet.title = <span class="string">&quot;sheet名&quot;</span></span><br></pre></td></tr></table></figure><h3 id="在特定的位置写入信息"><a href="#在特定的位置写入信息" class="headerlink" title="在特定的位置写入信息"></a>在特定的位置写入信息</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">worksheet[<span class="string">&#x27;A1&#x27;</span>] = <span class="string">&quot;学校&quot;</span></span><br><span class="line">worksheet[<span class="string">&#x27;B1&#x27;</span>] = <span class="string">&quot;内容&quot;</span></span><br><span class="line">worksheet[<span class="string">&#x27;C1&#x27;</span>] = <span class="string">&quot;链接&quot;</span></span><br></pre></td></tr></table></figure><h3 id="合并需要合并的单元格"><a href="#合并需要合并的单元格" class="headerlink" title="合并需要合并的单元格"></a>合并需要合并的单元格</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># merge_cells(&quot;左上角单位格：右下角单位格&quot;)</span></span><br><span class="line">worksheet.merge_cells(<span class="string">f&#x27;A<span class="subst">&#123;row_num - <span class="built_in">len</span>(item[<span class="string">&quot;content&quot;</span>])&#125;</span>:A<span class="subst">&#123;end_row&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="设置样式"><a href="#设置样式" class="headerlink" title="设置样式"></a>设置样式</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义样式</span></span><br><span class="line">    title_font = Font(size=<span class="number">12</span>, bold=<span class="literal">True</span>)</span><br><span class="line">    title_alignment = Alignment(vertical=<span class="string">&#x27;center&#x27;</span>)</span><br><span class="line">    url_font = Font(color=<span class="string">&quot;0000FF&quot;</span>, underline=<span class="string">&quot;single&quot;</span>)</span><br><span class="line">    border = Border(left=Side(style=<span class="string">&#x27;thin&#x27;</span>), right=Side(style=<span class="string">&#x27;thin&#x27;</span>), top=Side(style=<span class="string">&#x27;thin&#x27;</span>),bottom=Side(style=<span class="string">&#x27;thin&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置样式</span></span><br><span class="line">cell = worksheet[<span class="string">f&#x27;A<span class="subst">&#123;row_num&#125;</span>&#x27;</span>]</span><br><span class="line">    cell.border = border</span><br><span class="line">    cell.alignment = title_alignment</span><br><span class="line">    cell.font = title_font</span><br><span class="line"><span class="comment"># 设置链接样式</span></span><br><span class="line">    worksheet[<span class="string">f&#x27;C<span class="subst">&#123;row_num&#125;</span>&#x27;</span>].font = url_font</span><br><span class="line">    worksheet[<span class="string">f&#x27;C<span class="subst">&#123;row_num&#125;</span>&#x27;</span>].hyperlink = content_src</span><br></pre></td></tr></table></figure><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 指定输出的Excel文件路径</span></span><br><span class="line">  output_excel_path = <span class="string">&#x27;output.xlsx&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 保存Excel文件</span></span><br><span class="line">  workbook.save(output_excel_path)</span><br><span class="line"></span><br><span class="line">  <span class="built_in">print</span>(<span class="string">f&quot;数据已成功写入 <span class="subst">&#123;output_excel_path&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>只要掌握这些函数，把爬取的内容放到excel里就也没什么问题了</p><blockquote><p>发现通过ai生成基础代码来学习的效率真的很高，而且学习的过程也有趣许多，很容易看到学到的每一点东西的作用，不过似乎有点功利了。但先功利着吧，有意思毕竟也很重要呀！😉</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> openpyxl </tag>
            
            <tag> beautifulSoup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快捷键篇</title>
      <link href="/post/forAll/%E5%BF%AB%E6%8D%B7%E9%94%AE%E7%AF%87/"/>
      <url>/post/forAll/%E5%BF%AB%E6%8D%B7%E9%94%AE%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<blockquote><p>vim这东西真奇妙，刚上手时觉得巨难用，可一旦习惯后就变得无法忍受没有vim的编辑器了，而且让人干编辑以外的事情也都想用快捷键了。于是专门拿出一段时间学习了一下各种常用的快捷键。随着使用的程序越来越多，此篇博客也会持续更新</p></blockquote><h1 id="电脑自带"><a href="#电脑自带" class="headerlink" title="电脑自带"></a>电脑自带</h1><h2 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h2><table><thead><tr><th>键位</th><th>功能</th></tr></thead><tbody><tr><td>win + e</td><td>打开文件资源管理器</td></tr><tr><td>ctrl + shift + N</td><td>新建文件夹</td></tr><tr><td>shift + Delete</td><td>不进入回收站，直接删除</td></tr><tr><td>Alt + Enter</td><td>查看文件属性</td></tr><tr><td>backspace</td><td>查看上级目录</td></tr></tbody></table><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="实用操作"><a href="#实用操作" class="headerlink" title="实用操作"></a>实用操作</h3><table><thead><tr><th>键位</th><th>功能</th></tr></thead><tbody><tr><td>win + d</td><td>快速进入桌面&#x2F;还原</td></tr><tr><td>win + i</td><td>打开设置界面</td></tr><tr><td>win + L</td><td>锁屏</td></tr><tr><td>win + v</td><td>打开粘贴板历史</td></tr><tr><td>ctrl + n</td><td>创建同级界面</td></tr><tr><td>ctrl + w</td><td>关闭当前界面</td></tr><tr><td>ctrl + shift + Esc</td><td>打开任务管理器</td></tr><tr><td>ctrl+tab</td><td>向前遍历标签</td></tr><tr><td>ctrl+shift+tab</td><td>向后遍历标签</td></tr><tr><td>alt + 空格</td><td>显示窗口控制菜单</td></tr><tr><td>win + n</td><td>日历</td></tr><tr><td>win + ctrl + q</td><td>打开快速助手</td></tr><tr><td>win + shift + s</td><td>截图</td></tr><tr><td>win + x</td><td>打开电脑管理选项</td></tr><tr><td>win + z</td><td>临时速览桌面</td></tr><tr><td>win + 上</td><td>最大化窗口</td></tr></tbody></table><h3 id="有趣操作"><a href="#有趣操作" class="headerlink" title="有趣操作"></a>有趣操作</h3><table><thead><tr><th>键位</th><th>功能</th></tr></thead><tbody><tr><td>win + .</td><td>微软表情</td></tr><tr><td>win + s</td><td>搜索程序</td></tr><tr><td>win + 方向键</td><td>电脑分屏</td></tr><tr><td>win + h</td><td>启动语音输入</td></tr></tbody></table><h3 id="不常用但有用操作"><a href="#不常用但有用操作" class="headerlink" title="不常用但有用操作"></a>不常用但有用操作</h3><table><thead><tr><th>键位</th><th>功能</th></tr></thead><tbody><tr><td>win + A</td><td>打开快速设置</td></tr><tr><td>win + B + 回车</td><td>显示任务栏</td></tr><tr><td>win + 方向键</td><td>电脑分屏</td></tr></tbody></table><h1 id="浏览器（Edge）"><a href="#浏览器（Edge）" class="headerlink" title="浏览器（Edge）"></a>浏览器（Edge）</h1><table><thead><tr><th>键位</th><th>功能</th></tr></thead><tbody><tr><td>ctrl+t</td><td>打开新的标签页</td></tr><tr><td>ctrl+shift+t</td><td>恢复被关闭的网页</td></tr><tr><td>ctrl+shift+o</td><td>打开收藏夹</td></tr><tr><td>ctrl+h</td><td>打开历史</td></tr><tr><td>alt+d</td><td>编辑地址栏</td></tr><tr><td>alt+f</td><td>打开菜单</td></tr><tr><td>ctrl+j</td><td>打开下载栏</td></tr><tr><td>ctrl+shift+k</td><td>复制当前标签页</td></tr><tr><td>ctrl+r</td><td>带缓存刷新</td></tr><tr><td>ctrl+shift+r</td><td>忽略缓存刷新</td></tr><tr><td>ctrl+shift+w</td><td>关闭当前窗口</td></tr><tr><td>ctrl+w</td><td>关闭当前标签</td></tr><tr><td>ctrl+1..8</td><td>切换到第n个标签</td></tr><tr><td>ctrl+9</td><td>切换到最后一个标签</td></tr><tr><td>ctrl+shift+n</td><td>打开隐私搜索窗口</td></tr><tr><td>ctrl + d</td><td>将当前标签添加到收藏夹</td></tr><tr><td>ctrl+shift+e</td><td>边栏打开搜索</td></tr><tr><td>ctrl+e</td><td>地址栏打开搜索</td></tr><tr><td>ctrl+shift+b</td><td>顶部显示收藏夹\隐藏</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 综合 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 快捷键 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自定义修改微信小程序</title>
      <link href="/post/fontEnd/changeMiniApp/"/>
      <url>/post/fontEnd/changeMiniApp/</url>
      
        <content type="html"><![CDATA[<h1 id="跑步打卡配置——更改小程序"><a href="#跑步打卡配置——更改小程序" class="headerlink" title="跑步打卡配置——更改小程序"></a>跑步打卡配置——更改小程序</h1><blockquote style="border-left: 5px solid red; padding-left: 1em;">该博客编写时间为2023年9月，到目前，跑步打卡小程序已进行多次更新，以下内容仅可参考思路。</blockquote><blockquote><p>学校跑步打卡的小程序限制了使用的时间段以及开始跑步的位置，导致每次打卡都人流拥挤，很烦。因此就尝试去”fork“了一个小程序副本，并在副本上自定义更改了前端的检验规则</p></blockquote><p>该过程分为两步：反编译、抓包、改代码</p><h1 id="反编译"><a href="#反编译" class="headerlink" title="反编译"></a>反编译</h1><p>如何获取小程序的源码，这是个很大的问题。冲了一天浪，找到这么一个教程<a href="https://blog.csdn.net/m0_60571842/article/details/132577489">小程序应用&amp;解包反编译&amp;动态调试&amp;抓包&amp;静态分析&amp;源码架构_SuperherRo的博客-CSDN博客</a></p><p>其中讲的很详细，但为了防止该网页被删，我将其中的内容融合我自己的理解再复述一遍</p><h3 id="1-找到文件包的位置"><a href="#1-找到文件包的位置" class="headerlink" title="1.找到文件包的位置"></a>1.找到文件包的位置</h3><p><img src="https://img-blog.csdnimg.cn/24293f6c8d1541e19311b437cac737fe.png" alt="24293f6c8d1541e19311b437cac737fe.png"></p><p><img src="https://img-blog.csdnimg.cn/6b78a35223b0488f8073941b247ed569.png" alt="6b78a35223b0488f8073941b247ed569.png"></p><p>如果找不到就把该文件夹中的所有文件都删除，再重新打开小程序，重新出现的文件夹即为目标</p><h3 id="2-下载工具"><a href="#2-下载工具" class="headerlink" title="2.下载工具"></a>2.下载工具</h3><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">流程如下：</span><br><span class="line"><span class="symbol">PC</span>端小程序</span><br><span class="line">解密工具：<span class="symbol">UnpackMiniApp</span>(一个exe工具已经放进wxappUnpacker目录下)</span><br><span class="line">该解密工具需要在当前目录创建一个wxapkg文件夹</span><br><span class="line">下载地址：https://gitee.com/steinven/wxpkg/blob/master/<span class="symbol">UnpackMiniApp</span>.exe</span><br><span class="line"></span><br><span class="line">先解密完后在反编译</span><br><span class="line">反编译工具：wxappUnpacker</span><br><span class="line">下载地址：https://gitee.com/steinven/wxpkg/blob/master/wxappUnpacker.zip</span><br><span class="line">————————————————</span><br><span class="line">版权声明：本段代码来自<span class="symbol">CSDN</span>博主「<span class="symbol">SuperherRo</span>」的原创文章，遵循<span class="symbol">CC</span> <span class="number">4.0</span> <span class="symbol">BY</span>-<span class="symbol">SA</span>版权协议，转载请附上原文出处链接及本声明。</span><br><span class="line">原文链接：https://blog.csdn.net/m0_60571842/article/details/<span class="number">132577489</span></span><br></pre></td></tr></table></figure><h3 id="3-使用UnpackMiniApp"><a href="#3-使用UnpackMiniApp" class="headerlink" title="3.使用UnpackMiniApp"></a>3.使用UnpackMiniApp</h3><p>进入UnpackMiniApp下载的路径，在此路径下创建一个名为wxpack的文件夹</p><p><img src="https://img-blog.csdnimg.cn/e30a0a5907d64773b4dea176ea7ba448.png" alt="e30a0a5907d64773b4dea176ea7ba448.png"></p><p>运行该程序，选择相应的程序包，等待解密完成，解密完成后将在wxpack文件夹中生成程序包</p><p><img src="https://img-blog.csdnimg.cn/072463b58e9a4a5785247ac7dd3722ee.png" alt="072463b58e9a4a5785247ac7dd3722ee.png"></p><h3 id="4-使用wxappUnpacker-需要配置node环境"><a href="#4-使用wxappUnpacker-需要配置node环境" class="headerlink" title="4.使用wxappUnpacker(需要配置node环境)"></a>4.使用wxappUnpacker(需要配置node环境)</h3><p>wxappUnpacker并不是一个可执行文件，而是一个js脚本，需要在nodejs环境下运行</p><p><img src="https://img-blog.csdnimg.cn/7d7418c3d98241b3b878151db076535a.png" alt="7d7418c3d98241b3b878151db076535a.png"></p><p>该路径下打开终端或bash,输入命令</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//请根据第三步解密好的包的路径更改这行命令</span><br><span class="line">node wuWxapkg.js <span class="symbol">C</span>:/<span class="symbol">Users</span>/<span class="symbol">Admin</span>/<span class="symbol">Desktop</span>/wxappUnpacker/wxpack/wxd7aa85d403a49335.wxapkg</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/0349d434c4384efe99538cc947d43424.png" alt="0349d434c4384efe99538cc947d43424.png"></p><p>File done后可在与解密包同文件夹处找到反编译完成的包，这个包按理说是能直接运行的（跑步打卡的包由于基础库版本的原因并不能直接就运行，如何修改将在之后进行讲解）</p><h1 id="抓包"><a href="#抓包" class="headerlink" title="抓包"></a>抓包</h1><p>跑步打卡的程序是根据openid与userid的值来判断用户的，直接在副本上登陆微信号的话，未必会给我们分配一个与原版本相同的openid，因此需要自己通过抓包获取自己原版本的openid与userid</p><p>对于抓包，该博主也有较为深入的讲解<a href="https://blog.csdn.net/m0_60571842/article/details/132564881">抓包技术&amp;HTTPS协议&amp;APP&amp;小程序&amp;PC应用&amp;WEB_SuperherRo的博客-CSDN博客</a></p><p>在博主讲解的基础上打开任意一个跑步打卡程序发出的包，即能获取到所需要的openid与userid</p><p>由于抓包难度较低，并且被删可能较小，便不在此详细说明</p><h1 id="修改源代码"><a href="#修改源代码" class="headerlink" title="修改源代码"></a>修改源代码</h1><blockquote style="border-left: 5px solid red; padding-left: 1em;">该博客编写时间为2023年9月，到目前，跑步打卡小程序已进行多次更新，该部分已失效，故删除，请自行修改源代码。</blockquote><h1 id="完成！！"><a href="#完成！！" class="headerlink" title="完成！！"></a>完成！！</h1><p>接下来点击微信开发者工具中上部的”真机调试“按钮，手机微信扫码，就可以随地开始跑步了😊</p><p>但是会注意到只有通过扫“真机调试”的码进入程序才能正常运行，直接打开是会显示网络错误。要解决问题，只需要在直接打开后点击小程序右上角的三点，在上拉菜单里选择开发调试（最后一行最后一个），然后选择“打开调试”，小程序会自动重启，之后就可以正常运行了。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
            <tag> 破解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>flask实战</title>
      <link href="/post/backEnd/flask%E5%AE%9E%E6%88%98/"/>
      <url>/post/backEnd/flask%E5%AE%9E%E6%88%98/</url>
      
        <content type="html"><![CDATA[<blockquote><p>💡 学习flask是因为大创，需求是接收微信小程序发送来的音频，而后由学长的算法对该音频进行分析。</p></blockquote><h1 id="后端接收文件上传"><a href="#后端接收文件上传" class="headerlink" title="后端接收文件上传"></a>后端接收文件上传</h1><p>原生flask使用的是request包</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> werkzeug.utils <span class="keyword">import</span> secure_filename</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/upload&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">upload_file</span>():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        file = request.files[<span class="string">&#x27;the_file&#x27;</span>]</span><br><span class="line">        file.save(<span class="string">f&quot;/var/www/uploads/<span class="subst">&#123;secure_filename(file.filename)&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>但尝试这样接收小程序上传的文件时，报错</p><p><strong><code>&#39;Request&#39; object has no attribute &#39;File&#39;</code></strong></p><p>经过搜索得知，微信小程序的文件被包裹在FileField中，无法靠Request.file检索</p><p>要处理FileField式的文件上传，需要使用另外两个包</p><p>教程见 <a href="https://www.section.io/engineering-education/how-to-handle-file-uploads-with-flask/">How to Handle File Uploads with Flask</a> </p><p>我最终的代码如下, flask确实轻量，只用了30行不到</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask_wtf <span class="keyword">import</span> FlaskForm</span><br><span class="line"><span class="keyword">from</span> flask_wtf.file <span class="keyword">import</span> FileField</span><br><span class="line"><span class="keyword">from</span> flask_uploads <span class="keyword">import</span> configure_uploads,UploadSet,AUDIO</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"><span class="comment"># 进入调试模式</span></span><br><span class="line">app.debug = <span class="literal">True</span></span><br><span class="line"><span class="comment">#必须以UPLOADED_XXX_DEST的形式设置文件存放的地址，XXX取决于UploadSet的变量名大写形式</span></span><br><span class="line">app.config[<span class="string">&#x27;UPLOADED_SOUNDS_DEST&#x27;</span>] = <span class="string">&#x27;./uploads&#x27;</span></span><br><span class="line"><span class="comment">#必须设置密匙，否则会报跨域错误</span></span><br><span class="line">app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>] = <span class="string">&#x27;heyheyhey&#x27;</span></span><br><span class="line"><span class="comment"># UploadSet的第二个参数取决于上传文件的形式，有哪些形式请自行翻看源码</span></span><br><span class="line">sounds = UploadSet(<span class="string">&#x27;sounds&#x27;</span>,AUDIO)</span><br><span class="line">configure_uploads(app,sounds)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyForm</span>(<span class="title class_ inherited__">FlaskForm</span>):</span><br><span class="line">    sound = FileField(<span class="string">&#x27;sound&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/upload2&quot;</span>,methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">upload</span>():</span><br><span class="line">    form = MyForm()</span><br><span class="line">    filename = sounds.save(form.sound.data)</span><br><span class="line">    <span class="keyword">return</span> filename</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> flask </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搜索の技巧</title>
      <link href="/post/forAll/%E6%90%9C%E7%B4%A2%E3%81%AE%E6%8A%80%E5%B7%A7/"/>
      <url>/post/forAll/%E6%90%9C%E7%B4%A2%E3%81%AE%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<blockquote><p>💡 要成为一名合格的cv工程师，搜索是极为重要的技能。我这方面似乎还比较欠缺，每次搜索能否找到期望的结果基本取决于运气。自认为不能这样下去了，所以拿了一段时间来专门学习搜索的技巧，故有此文。</p></blockquote><h1 id="搜索引擎"><a href="#搜索引擎" class="headerlink" title="搜索引擎"></a>搜索引擎</h1><table><thead><tr><th>关键字&#x2F;符号</th><th>作用</th></tr></thead><tbody><tr><td>“”</td><td>搜索结果中必须出现与“”中内容完全相同的部分</td></tr><tr><td>A -B</td><td>搜索包含A但不包含B的结果（请注意A后面的空格不能省略）</td></tr><tr><td>site:</td><td>在某个网站内搜索，比如：site:<a href="https://link.zhihu.com/?target=http://pan.baidu.com">https://link.zhihu.com/?target=http%3A//pan.baidu.com</a></td></tr><tr><td>info:</td><td>搜索指定网站的一些基本信息。</td></tr></tbody></table><h1 id="github搜索"><a href="#github搜索" class="headerlink" title="github搜索"></a>github搜索</h1><blockquote><p>官方文档见：<a href="https://docs.github.com/zh/search-github/getting-started-with-searching-on-github/about-searching-on-github">关于在 GitHub 上搜索 - GitHub 文档</a></p></blockquote><h2 id="范围查询"><a href="#范围查询" class="headerlink" title="范围查询"></a>范围查询</h2><table><thead><tr><th>示例</th><th>作用</th></tr></thead><tbody><tr><td>vue stars:&gt;1000</td><td>匹配含有 vue，stars数大于1000的仓库</td></tr><tr><td>vue topics:&gt;&#x3D;5</td><td>有5个或更多主题的仓库</td></tr><tr><td>vue size:&lt;10000</td><td>匹配含有“vue”字样代码且大小小于10kb的文件</td></tr><tr><td>vue created&lt;&#x3D;<em>YYYY</em>-<em>MM</em>-<em>DD</em></td><td>日期前创建的议题，除created外，还有pushed</td></tr><tr><td>vue stars:10…*</td><td>star大于等于10</td></tr><tr><td>vue stars:*…10</td><td>小于等于10</td></tr><tr><td>vue stars:10…50</td><td>10到50</td></tr></tbody></table><h2 id="搜索属性"><a href="#搜索属性" class="headerlink" title="搜索属性"></a>搜索属性</h2><table><thead><tr><th>属性名</th><th>解释</th><th>类型</th></tr></thead><tbody><tr><td>stars</td><td>stars数</td><td>int</td></tr><tr><td>topics</td><td>主题数</td><td>int&#x2F;string</td></tr><tr><td>size</td><td>文件大小</td><td>int</td></tr><tr><td>framework</td><td>框架</td><td>string</td></tr><tr><td>language</td><td>语言</td><td>string</td></tr><tr><td>author</td><td>作者</td><td>string</td></tr><tr><td>org</td><td>组织</td><td>string</td></tr><tr><td>forks</td><td>forks数</td><td>int</td></tr><tr><td>followers</td><td>关注者</td><td>int</td></tr><tr><td>extension</td><td></td><td>string</td></tr><tr><td>license</td><td>许可证</td><td>string</td></tr><tr><td>is</td><td>仓库公共还是私有</td><td>public&#x2F;privat</td></tr><tr><td>mirror</td><td>是否为镜像</td><td>bool</td></tr><tr><td>archived</td><td>是否已存档</td><td>bool</td></tr><tr><td>help-wanted-issues</td><td>标签为该属性的议题数</td><td>int</td></tr><tr><td>good-first-issues</td><td>标签为该属性的议题数</td><td>int</td></tr></tbody></table><h2 id="搜索位置"><a href="#搜索位置" class="headerlink" title="搜索位置"></a>搜索位置</h2><table><thead><tr><th>示例</th><th>作用</th></tr></thead><tbody><tr><td>vue in:name</td><td>名称含有vue</td></tr><tr><td>vue in:name,description</td><td>名称与说明</td></tr><tr><td>vue in:readme</td><td></td></tr></tbody></table><h2 id="排除"><a href="#排除" class="headerlink" title="排除"></a>排除</h2><table><thead><tr><th>示例</th><th>作用</th></tr></thead><tbody><tr><td>hello NOT world</td><td>匹配含有hello不含world的仓库</td></tr><tr><td>vue -language:javascript</td><td>排除以js编写的仓库</td></tr></tbody></table><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><table><thead><tr><th>示例</th><th>作用</th></tr></thead><tbody><tr><td>cats NOT “hello world”</td><td>含有空格的查询需要被引号包裹起来</td></tr></tbody></table><h2 id="使用可视界面搜索"><a href="#使用可视界面搜索" class="headerlink" title="使用可视界面搜索"></a>使用可视界面搜索</h2><p><a href="https://github.com/search/advanced">https://github.com/search/advanced</a></p><h2 id="Issue搜索"><a href="#Issue搜索" class="headerlink" title="Issue搜索"></a>Issue搜索</h2><table><thead><tr><th>encoding user:heroku</th><th>Encoding issues across the Heroku organization.</th></tr></thead><tbody><tr><td>cat is:open</td><td>Find cat issues that are open.</td></tr><tr><td>strange comments:&gt;42</td><td>Issues with more than 42 comments.</td></tr><tr><td>hard label:bug</td><td>Hard issues labeled as a bug.</td></tr><tr><td>author:mojombo</td><td>All issues authored by mojombo.</td></tr><tr><td>mentions:tpope</td><td>All issues mentioning tpope.</td></tr><tr><td>assignee:rtomayko</td><td>All issues assigned to rtomayko.</td></tr><tr><td>exception created:&gt;2012-12-31</td><td>Created since the beginning of 2013.</td></tr><tr><td>exception updated:&lt;2013-01-01</td><td>Last updated before 2013.</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 综合 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>flask的学习—文档</title>
      <link href="/post/backEnd/flask%E7%9A%84%E5%AD%A6%E4%B9%A0%E2%80%94%E6%96%87%E6%A1%A3/"/>
      <url>/post/backEnd/flask%E7%9A%84%E5%AD%A6%E4%B9%A0%E2%80%94%E6%96%87%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>💡 出于大创的需要，跑去看了一下flask的官方文档，并且简单记录了一下。不过现在回过头看发现好像只是把标题翻译了一下。这种记录似乎没啥意义，可能还是先跟着实战教程跑，跑的过程中记录自己遇到的问题以及解决问题的文档好一点</p></blockquote><h1 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a>简单使用</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install flask</span><br></pre></td></tr></table></figure><p>基本示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/hello&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello_world</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&lt;p&gt;Hello, World!&lt;/p&gt;&quot;</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Index Page&#x27;</span></span><br></pre></td></tr></table></figure><p>启动项目：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//方法1：</span><br><span class="line">//将application实例所在文件命名为app.py, 而后在终端中执行</span><br><span class="line">$ flask run</span><br><span class="line"></span><br><span class="line">//方法2：</span><br><span class="line">//application实例的所在的文件名为name.py或wsgi.py，则在终端中执行</span><br><span class="line">$ flask --app name run</span><br></pre></td></tr></table></figure><p>将项目部署到局域网</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ flask --app name run --host=0.0.0.0</span><br></pre></td></tr></table></figure><h1 id="路由设置"><a href="#路由设置" class="headerlink" title="路由设置"></a>路由设置</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#访问/projects/ 或者 /projects 都行</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/projects/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">projects</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;The project page&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#只能访问/about, 访问/about/报错</span></span><br><span class="line"><span class="comment">#据说有助于保持这些资源的URL唯一</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/about&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">about</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;The about page&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="动态路由"><a href="#动态路由" class="headerlink" title="动态路由"></a>动态路由</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> markupsafe <span class="keyword">import</span> escape</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/user/&lt;username&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">show_user_profile</span>(<span class="params">username</span>):</span><br><span class="line">    <span class="comment"># show the user profile for that user</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&#x27;User <span class="subst">&#123;escape(username)&#125;</span>&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#规定可变部分的类型</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/post/&lt;int:post_id&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">show_post</span>(<span class="params">post_id</span>):</span><br><span class="line">    <span class="comment"># show the post with the given id, the id is an integer</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&#x27;Post <span class="subst">&#123;post_id&#125;</span>&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/path/&lt;path:subpath&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">show_subpath</span>(<span class="params">subpath</span>):</span><br><span class="line">    <span class="comment"># show the subpath after /path/</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&#x27;Subpath <span class="subst">&#123;escape(subpath)&#125;</span>&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#escape是一个用来防止前端注入的函数</span></span><br><span class="line"><span class="comment">#以下是new bing对escape函数的解释</span></span><br><span class="line"><span class="comment">#escape()函数是用来对HTML文本进行转义的</span></span><br><span class="line"><span class="comment">#也就是把一些特殊字符替换成它们的HTML实体表示</span></span><br><span class="line"><span class="comment">#这样可以避免在网页中出现不安全或者不正确的内容。</span></span><br><span class="line"><span class="comment">#例如，如果你想在网页中显示一个用户的名字，但是用户的名字可能包含一些HTML标签</span></span><br><span class="line"><span class="comment">#那么你就需要用escape()函数来处理一下</span></span><br><span class="line"><span class="comment">#否则可能会影响网页的布局或者执行一些恶意的代码。</span></span><br></pre></td></tr></table></figure><p>可变部分的类型有以下几种</p><table><thead><tr><th>类型</th><th>解释</th></tr></thead><tbody><tr><td>string</td><td>(default) accepts any text without a &#x2F;</td></tr><tr><td>int</td><td>accepts positive integers</td></tr><tr><td>float</td><td>accepts positive floating point values</td></tr><tr><td>path</td><td>like string but also accepts &#x2F;</td></tr><tr><td>uuid</td><td>accepts UUID strings</td></tr></tbody></table><h1 id="路由导航与错误"><a href="#路由导航与错误" class="headerlink" title="路由导航与错误"></a>路由导航与错误</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> abort, redirect, url_for</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="comment">#url_for(函数名)返回函数所在的路径</span></span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;login&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    abort(<span class="number">401</span>)</span><br><span class="line">    this_is_never_executed()</span><br></pre></td></tr></table></figure><h1 id="区分请求方法（get-post等）"><a href="#区分请求方法（get-post等）" class="headerlink" title="区分请求方法（get,post等）"></a>区分请求方法（get,post等）</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> do_the_login()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> show_the_login_form()</span><br><span class="line"></span><br><span class="line"><span class="comment">#也可把get与post直接分开配置</span></span><br><span class="line"><span class="meta">@app.get(<span class="params"><span class="string">&#x27;/login&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login_get</span>():</span><br><span class="line">    <span class="keyword">return</span> show_the_login_form()</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.post(<span class="params"><span class="string">&#x27;/login&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login_post</span>():</span><br><span class="line">    <span class="keyword">return</span> do_the_login()</span><br></pre></td></tr></table></figure><h1 id="处理请求的数据"><a href="#处理请求的数据" class="headerlink" title="处理请求的数据"></a>处理请求的数据</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"></span><br><span class="line"><span class="comment">#请求体中的数据</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>, <span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    error = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line"><span class="comment">#valid_login是需要自定义的函数</span></span><br><span class="line">        <span class="keyword">if</span> valid_login(request.form[<span class="string">&#x27;username&#x27;</span>],</span><br><span class="line">                       request.form[<span class="string">&#x27;password&#x27;</span>]):</span><br><span class="line">            <span class="keyword">return</span> log_the_user_in(request.form[<span class="string">&#x27;username&#x27;</span>])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            error = <span class="string">&#x27;Invalid username/password&#x27;</span></span><br><span class="line">    <span class="comment"># the code below is executed if the request method</span></span><br><span class="line">    <span class="comment"># was GET or the credentials were invalid</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;login.html&#x27;</span>, error=error)</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取路由中的数据</span></span><br><span class="line">searchword = request.args.get(<span class="string">&#x27;key1&#x27;</span>, <span class="string">&#x27;key2&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="上传文件："><a href="#上传文件：" class="headerlink" title="上传文件："></a>上传文件：</h1><blockquote><p>注！：前端的表单中需要设置enctype&#x3D;”multipart&#x2F;form-data”</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> werkzeug.utils <span class="keyword">import</span> secure_filename</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/upload&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">upload_file</span>():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        file = request.files[<span class="string">&#x27;the_file&#x27;</span>]</span><br><span class="line">        file.save(<span class="string">f&quot;/var/www/uploads/<span class="subst">&#123;secure_filename(file.filename)&#125;</span>&quot;</span>)</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><h1 id="Cookies"><a href="#Cookies" class="headerlink" title="Cookies"></a>Cookies</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line"><span class="comment">#读cookies</span></span><br><span class="line">    username = request.cookies.get(<span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">    <span class="comment"># use cookies.get(key) instead of cookies[key] to not get a</span></span><br><span class="line">    <span class="comment"># KeyError if the cookie is missing.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#存cookies</span></span><br><span class="line">resp = make_response(render_template(...))</span><br><span class="line">    resp.set_cookie(<span class="string">&#x27;username&#x27;</span>, <span class="string">&#x27;the username&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> resp</span><br></pre></td></tr></table></figure><h1 id="JSON的编码与解码"><a href="#JSON的编码与解码" class="headerlink" title="JSON的编码与解码"></a>JSON的编码与解码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#dict与list结构的返回值再返回头中会自动转化为JSON格式</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/me&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">me_api</span>():</span><br><span class="line">    user = get_current_user()</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="string">&quot;username&quot;</span>: user.username,</span><br><span class="line">        <span class="string">&quot;theme&quot;</span>: user.theme,</span><br><span class="line">        <span class="string">&quot;image&quot;</span>: url_for(<span class="string">&quot;user_image&quot;</span>, filename=user.image),</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/users&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">users_api</span>():</span><br><span class="line">    users = get_all_users()</span><br><span class="line">    <span class="keyword">return</span> [user.to_json() <span class="keyword">for</span> user <span class="keyword">in</span> users]</span><br></pre></td></tr></table></figure><h1 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> session</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set the secret key to some random bytes. Keep this really secret!</span></span><br><span class="line">app.secret_key = <span class="string">b&#x27;_5#y2L&quot;F4Q8z\n\xec]/&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;username&#x27;</span> <span class="keyword">in</span> session:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&#x27;Logged in as <span class="subst">&#123;session[<span class="string">&quot;username&quot;</span>]&#125;</span>&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;You are not logged in&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        session[<span class="string">&#x27;username&#x27;</span>] = request.form[<span class="string">&#x27;username&#x27;</span>]</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;index&#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        &lt;form method=&quot;post&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;p&gt;&lt;input type=text name=username&gt;</span></span><br><span class="line"><span class="string">            &lt;p&gt;&lt;input type=submit value=Login&gt;</span></span><br><span class="line"><span class="string">        &lt;/form&gt;</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/logout&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">logout</span>():</span><br><span class="line">    <span class="comment"># remove the username from the session if it&#x27;s there</span></span><br><span class="line">    session.pop(<span class="string">&#x27;username&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;index&#x27;</span>))</span><br></pre></td></tr></table></figure><!-- # api| 名 | 作用 | 示例 || --- | --- | --- || url_for | 返回函数所在的路径 | print(url_for('profile', username='John Doe'))//profile为一以username为参数的函数。//结果：/user/John%20Doe | --><h1 id="未记录的部分"><a href="#未记录的部分" class="headerlink" title="未记录的部分"></a>未记录的部分</h1><p>静态资源的传输：Static Files</p><p>后端渲染：Rendering Templates</p><p>Accessing Request Data</p><p>404页面自定义：<a href="https://flask.palletsprojects.com/en/2.3.x/errorhandling/">Handling Application Errors — Flask Documentation (2.3.x) (palletsprojects.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> flask </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端工程化</title>
      <link href="/post/fontEnd/factorlizeFont/"/>
      <url>/post/fontEnd/factorlizeFont/</url>
      
        <content type="html"><![CDATA[<h1 id="规范化git-commit提交的message"><a href="#规范化git-commit提交的message" class="headerlink" title="规范化git commit提交的message"></a>规范化git commit提交的message</h1><blockquote><p>由于各种各样的原因，无论是团队合作还是个人项目，commit历史中总会夹杂着各种简短而不知所谓的message, 不太方便维护，为了缓解这一问题，前端可以使用commitizen包重新调整commit的流程，并实现message的规范化</p></blockquote><p>1.安装相关包 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g commitizen</span><br><span class="line">npm install -D cz-git</span><br></pre></td></tr></table></figure><p>2.在package.json中添加config项, 并在scripts中添加一项</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;cmt&quot;</span><span class="punctuation">:</span> <span class="string">&quot;git-cz&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;config&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;commitizen&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;node_modules/cz-git&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>3.于项目根目录创建文件.commitlintrc.js（如果package.json中的type项值为module的话，文件后缀改为.cjs）</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// .commitlintrc.js</span></span><br><span class="line"><span class="comment">/** <span class="doctag">@type</span> &#123;<span class="type">import(&#x27;cz-git&#x27;).UserConfig</span>&#125; */</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">rules</span>: &#123;</span><br><span class="line">        <span class="comment">// @see: https://commitlint.js.org/#/reference-rules</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">prompt</span>: &#123;</span><br><span class="line">        <span class="attr">alias</span>: &#123; <span class="attr">fd</span>: <span class="string">&quot;docs: fix typos&quot;</span> &#125;,</span><br><span class="line">        <span class="attr">messages</span>: &#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&quot;选择你要提交的类型 :&quot;</span>,</span><br><span class="line">            <span class="attr">scope</span>: <span class="string">&quot;选择一个提交范围（可选）:&quot;</span>,</span><br><span class="line">            <span class="attr">customScope</span>: <span class="string">&quot;请输入自定义的提交范围 :&quot;</span>,</span><br><span class="line">            <span class="attr">subject</span>: <span class="string">&quot;填写简短精炼的变更描述 :\n&quot;</span>,</span><br><span class="line">            <span class="attr">body</span>: <span class="string">&#x27;填写更加详细的变更描述（可选）。使用 &quot;|&quot; 换行 :\n&#x27;</span>,</span><br><span class="line">            <span class="attr">breaking</span>: <span class="string">&#x27;列举非兼容性重大的变更（可选）。使用 &quot;|&quot; 换行 :\n&#x27;</span>,</span><br><span class="line">            <span class="attr">footerPrefixesSelect</span>: <span class="string">&quot;选择关联issue前缀（可选）:&quot;</span>,</span><br><span class="line">            <span class="attr">customFooterPrefix</span>: <span class="string">&quot;输入自定义issue前缀 :&quot;</span>,</span><br><span class="line">            <span class="attr">footer</span>: <span class="string">&quot;列举关联issue (可选) 例如: #31, #I3244 :\n&quot;</span>,</span><br><span class="line">            <span class="attr">confirmCommit</span>: <span class="string">&quot;是否提交或修改commit ?&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">types</span>: [</span><br><span class="line">        &#123; <span class="attr">value</span>: <span class="string">&quot;新增功能✨&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;新增功能:✨     例如增加了一个新的页面、组件、接口&quot;</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">value</span>: <span class="string">&quot;修复缺陷🪲&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;修复缺陷:🪲      例如修复了一个崩溃，逻辑错误，样式问题。&quot;</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">value</span>: <span class="string">&quot;文档更新📝&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;文档更新:📝     例如添加了注释，修改了README文件，API文档&quot;</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">value</span>: <span class="string">&quot;代码格式💄&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;代码格式:💄     例如调整了缩进，空格，换行，或者括号&quot;</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">value</span>: <span class="string">&quot;代码重构♻️&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;代码重构:♻️      例如提取了函数，合并了两个类，或者移动了文件&quot;</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">value</span>: <span class="string">&quot;性能提升⚡️&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;性能提升:⚡     ️例如减少了内存占用，提高了运行速度，或者减少了网络请求&quot;</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">value</span>: <span class="string">&quot;持续集成🎡&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;持续集成:🎡     例如添加了一个测试用例，修改了一个构建脚本，或者更新了一个依赖库&quot;</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">value</span>: <span class="string">&quot;回退代码🔙&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;回退代码:🔙     撤销了之前的一次或多次提交&quot;</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">value</span>: <span class="string">&quot;其他修改🧹&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;其他修改:🧹     例如修改了一些配置文件，删除了一些无用的代码，或者添加了一些日志。&quot;</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">value</span>: <span class="string">&quot;合并分支🎋&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;合并分支:🎋     合并了两个或多个分支的代码&quot;</span> &#125;,   </span><br><span class="line">],</span><br><span class="line">        <span class="comment">// 是否使用Emoji</span></span><br><span class="line">        <span class="attr">useEmoji</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">emojiAlign</span>: <span class="string">&quot;center&quot;</span>,</span><br><span class="line">        <span class="attr">useAI</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">aiNumber</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">themeColorCode</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">scopes</span>: [],</span><br><span class="line">        <span class="attr">allowCustomScopes</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">allowEmptyScopes</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">customScopesAlign</span>: <span class="string">&quot;bottom&quot;</span>,</span><br><span class="line">        <span class="attr">customScopesAlias</span>: <span class="string">&quot;custom&quot;</span>,</span><br><span class="line">        <span class="attr">emptyScopesAlias</span>: <span class="string">&quot;empty&quot;</span>,</span><br><span class="line">        <span class="attr">upperCaseSubject</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">markBreakingChangeMode</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">allowBreakingChanges</span>: [<span class="string">&quot;feat&quot;</span>, <span class="string">&quot;fix&quot;</span>],</span><br><span class="line">        <span class="attr">breaklineNumber</span>: <span class="number">100</span>,</span><br><span class="line">        <span class="attr">breaklineChar</span>: <span class="string">&quot;|&quot;</span>,</span><br><span class="line">        <span class="attr">skipQuestions</span>: [],</span><br><span class="line">        <span class="attr">issuePrefixes</span>: [</span><br><span class="line">            <span class="comment">// 如果使用 gitee 作为开发管理</span></span><br><span class="line">            &#123; <span class="attr">value</span>: <span class="string">&quot;link&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;link:     链接 ISSUES 进行中&quot;</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">value</span>: <span class="string">&quot;closed&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;closed:   标记 ISSUES 已完成&quot;</span> &#125;,</span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">customIssuePrefixAlign</span>: <span class="string">&quot;top&quot;</span>,</span><br><span class="line">        <span class="attr">emptyIssuePrefixAlias</span>: <span class="string">&quot;skip&quot;</span>,</span><br><span class="line">        <span class="attr">customIssuePrefixAlias</span>: <span class="string">&quot;custom&quot;</span>,</span><br><span class="line">        <span class="attr">allowCustomIssuePrefix</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">allowEmptyIssuePrefix</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">confirmColorize</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">maxHeaderLength</span>: <span class="title class_">Infinity</span>,</span><br><span class="line">        <span class="attr">maxSubjectLength</span>: <span class="title class_">Infinity</span>,</span><br><span class="line">        <span class="attr">minSubjectLength</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">scopeOverrides</span>: <span class="literal">undefined</span>,</span><br><span class="line">        <span class="attr">defaultBody</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">defaultIssues</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">defaultScope</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">defaultSubject</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>之后，将 npm cmt代替git commit使用</p><p>效果如图<br><img src="https://img-blog.csdnimg.cn/2de648ce078546c7b1927785959bd030.jpeg#pic_center" alt="终端内容"><br><img src="https://img-blog.csdnimg.cn/b2f710efa8a846ab875c2f3b1cf1f3ad.jpeg#pic_center" alt="github上的显示"></p><h1 id="commit时自动检查以及格式化代码"><a href="#commit时自动检查以及格式化代码" class="headerlink" title="commit时自动检查以及格式化代码"></a>commit时自动检查以及格式化代码</h1><blockquote><p>在编写代码时可能为了快捷，并没有注意代码的格式，比如缩进、空格等，单人项目还好，对自己的代码风格较为熟悉，可当项目为多人协作开发时，这会导致合作时的不便，因此就有了husky，在commit时自动处理代码</p></blockquote><blockquote><p>husky通过给git添加hook来实现为git添加功能，理论上来说它所能做的远不只自动格式化代码</p></blockquote><p>1.下载对应的包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//一步到位式，向package.json添加scripts，并创建了一个样例hook，并配置了hook的path</span><br><span class="line">//npm</span><br><span class="line">npx husky-init &amp;&amp; npm install</span><br><span class="line">//pnpm</span><br><span class="line">pnpm dlx husky-init &amp;&amp; pnpm install</span><br><span class="line"></span><br><span class="line">//逐步式</span><br><span class="line">npm install husky --save-dev</span><br><span class="line">npx husky install</span><br><span class="line">npm pkg <span class="built_in">set</span> scripts.prepare=<span class="string">&quot;husky install&quot;</span></span><br></pre></td></tr></table></figure><p>1.5(可选)新建hook</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npx husky add filename <span class="string">&quot;命令&quot;</span></span><br><span class="line">//例如npx husky add .husky/pre-commit <span class="string">&quot;npm test&quot;</span></span><br><span class="line">//命令（npm <span class="built_in">test</span>）执行失败时自动中断commit</span><br></pre></td></tr></table></figure><p>不难发现，husky的作用只是在git某一个命令执行前&#x2F;中&#x2F;后执行另外一个指定命令。因此实际上除前端以外，后端、或者算法也能够使用husky来规范化团队的git</p><p>而我们目前希望它做的是commit前格式化代码，因此我们需要一个将代码格式化的命令</p><p>在此，我使用的是Prettier包与lint-staged</p><p>Prettier是一个前端的代码格式化包，能够格式化<em>JavaScript · TypeScript · Flow · JSX · JSONCSS · SCSS · LessHTML · Vue · AngularGraphQL · Markdown · YAML。</em>可谓是非常满足前端的需要</p><p>而lint-staged是代码检查器，检查代码是否有语法错误，其github主页的about为“🚫💩 — Run linters on git staged files”, 可见该包是用来缓解💩 山构建过程的</p><p>2.下载Prettier与lint-staged</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i --save-dev prettier lint-staged</span><br></pre></td></tr></table></figure><p>3.项目根目录下创建文件.prettierrc.json 与 .prettierignore。内容空白即可，若需要自定义配置，请参考官方文档 <a href="https://prettier.io/docs/en/install">Install · Prettier</a></p><p>4.整合husky、Prettier以及lint-staged</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//npm</span><br><span class="line">npx husky add .husky/pre-commit <span class="string">&quot;npx lint-staged&quot;</span></span><br><span class="line"></span><br><span class="line">//pnpm</span><br><span class="line">pnpm <span class="built_in">exec</span> husky add .husky/pre-commit <span class="string">&quot;pnpm exec lint-staged&quot;</span></span><br></pre></td></tr></table></figure><p>并且在package.json中添加内容</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;lint-staged&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;**/*&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prettier --write --ignore-unknown&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>完成！现在git的整个流程如图<br><img src="https://img-blog.csdnimg.cn/7e07847eed60432ab69cdf76e96ca121.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> 工程化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对Linux的第一次尝试</title>
      <link href="/post/linux/tryLinux/"/>
      <url>/post/linux/tryLinux/</url>
      
        <content type="html"><![CDATA[<blockquote><p>电脑上的VMware在大一入学前就安装好了，一直在硬盘里吃灰。想着大二前怎么也要用一用，于是抓住假期的尾巴，浅玩了一下linux</p></blockquote><h2 id="linux的安装"><a href="#linux的安装" class="headerlink" title="linux的安装"></a>linux的安装</h2><p>跟着这个教程成功于VMware上安装上了centos7</p><p><a href="https://blog.csdn.net/weixin_52799373/article/details/124324077">VMware虚拟机安装Linux教程(超详细)_vmware安装linux虚拟机_七维大脑的博客-CSDN博客</a></p><p>然后隔天早上网络还出了点问题，跟着这篇教程修复了</p><p><a href="https://blog.csdn.net/m0_55710969/article/details/121331849">Linux [Error]错误：激活连接失败：No suitable device found for this connection.无网络图标【已解决】_hah杨大仙的博客-CSDN博客</a></p><h2 id="工具的安装"><a href="#工具的安装" class="headerlink" title="工具的安装"></a>工具的安装</h2><h3 id="yum"><a href="#yum" class="headerlink" title="yum"></a>yum</h3><p><a href="https://blog.csdn.net/weixin_44657888/article/details/117200381">linux如何安装yum_linux安装yum命令步骤_一个懒鬼的博客-CSDN博客</a></p><p>yum的安装比较容易，跟着上面这个教程走，没出一点问题</p><h3 id="curl"><a href="#curl" class="headerlink" title="curl"></a>curl</h3><p><a href="https://blog.csdn.net/qq_38215042/article/details/108768839">Linux安装curl完整步骤_linux 安装 curl_itfallrain的博客-CSDN博客</a></p><p>curl的安装麻烦了很多，即使是跟着上面这个教程走，但还是出了很多问题</p><ul><li>报错无c的编译器：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#于是安装</span></span><br><span class="line">yum groupinstall <span class="string">&quot;Development Tools&quot;</span> </span><br></pre></td></tr></table></figure><ul><li>报错**<code>configure: error: select TLS backend(s) or disable TLS with --without-ssl.</code>**</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#经搜索得知,这个错误是由于在安装curl时没有指定TLS后端的原因。</span></span><br><span class="line"><span class="comment">#TLS是一种用于保护网络通信的协议，它需要一些库来支持，</span></span><br><span class="line"><span class="comment">#例如OpenSSL、wolfSSL等。</span></span><br><span class="line"><span class="comment">#如果没有安装这些库，或者没有告诉curl使用哪个库，就会出现这个错误。</span></span><br><span class="line"><span class="comment">#于是</span></span><br><span class="line">yum install openssl</span><br></pre></td></tr></table></figure><ul><li>安装好了openssl, 命令openssl也有正常输出，但是设置prefix时仍然报错<code>-with-openssl was given but OpenSSL could not be detected</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#根据下面这篇文章</span></span><br><span class="line">yum -y install openssl-devel</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/navida/article/details/48315243?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~OPENSEARCH~default-1.no_search_link&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~OPENSEARCH~default-1.no_search_link">configure: error: –with-ssl&#x3D;openssl was given, but SSL is not available._舟自横的博客-CSDN博客</a></p><p>然后就没遇到问题了，开始编译与安装make&amp;&amp;make install，再执行curl –version, 正常输出版本，安装成功。</p><h3 id="git"><a href="#git" class="headerlink" title="git"></a>git</h3><p><a href="https://zhuanlan.zhihu.com/p/452605751#:~:text=linux%E4%B8%8B%E5%AE%89%E8%A3%85git%201%201.%E4%B8%8B%E8%BD%BDgit%20%E5%9C%A8%20Git%20-%20Downloads%20%28git-scm.com%29,3%203.%E9%AA%8C%E8%AF%81%E7%89%88%E6%9C%AC%20git%20--version%204%204.make%E7%BC%96%E8%AF%91%E6%97%B6%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98%20%E9%97%AE%E9%A2%981%EF%BC%9A%20">linux下安装git - 知乎 (zhihu.com)</a></p><p>教程整体没什么问题，只是最后向&#x2F;ect&#x2F;profile 内添加内容的部分有些晦涩</p><p>如果是刚装好的linux，则末尾添加以下两句就可以了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> GIT_HOME=/usr/local/git</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$GIT_HOME</span>/bin:</span><br></pre></td></tr></table></figure><p><code># source /etc/profile</code> 执行这句命令刷新资源依赖后，尝试git –version验证，确实正常出现了版本号。</p><p>但换个终端又出问题了，又无法正常启动，不过好在重启了一下虚拟机，又好了。应该是资源依赖的刷新只停留在执行命令的终端。</p><p>尝试连接github</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#生成ssh钥</span><br><span class="line">ssh-keygen</span><br><span class="line">#控制台输出：</span><br><span class="line">#<span class="title class_">Your</span> public key has been saved <span class="keyword">in</span> /root/.<span class="property">ssh</span>/id_rsa.<span class="property">pub</span></span><br><span class="line">#于是输入命令</span><br><span class="line">vim /root/.<span class="property">ssh</span>/id_rsa.<span class="property">pub</span></span><br><span class="line">#复制文件里的内容，粘贴到github添加ssh钥位置</span><br><span class="line">#输入命令，检测连接情况</span><br><span class="line">ssh -T git@github.<span class="property">com</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VeeValidate表单验证</title>
      <link href="/post/fontEnd/VeeValidate/"/>
      <url>/post/fontEnd/VeeValidate/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：element-ui 的表单用起来实在是太僵硬了，组长便让我去看一看VeeValidate的表单验证系统，粗略看了一下官方文档，确实要灵活好用很多，便在此记录一下用法</p></blockquote><h1 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h1><ul><li>无需使用v-model将input与变量绑定（但想的话也可以），而是使用v-bind与对应的field绑定。最后直接通过form的value读取。</li></ul><p>💡 导入<br><code>npm install --save vee-validate@next</code><br><code>import &#123; Form, Field, ErrorMessage &#125; from &#39;vee-validate&#39;;</code></p><p>官方文档：<a href="https://vee-validate.logaretm.com/v4/">VeeValidate: Painless Vue.js forms (logaretm.com)</a></p><h1 id="基础用法示例"><a href="#基础用法示例" class="headerlink" title="基础用法示例"></a><strong>基础用法示例</strong></h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; <span class="title class_">Form</span>, <span class="title class_">Field</span>, <span class="title class_">ErrorMessage</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vee-validate&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">validateEmail</span> = (<span class="params">value: any</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">return</span> <span class="regexp">/@/</span>.<span class="title function_">test</span>(value) ? <span class="literal">true</span> : <span class="string">&#x27;邮箱格式错误&#x27;</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">isRequired</span>=(<span class="params">value:string</span>)=&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">if</span> (value &amp;&amp; value.<span class="title function_">trim</span>()) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">return</span> <span class="string">&#x27;你没通过捏&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">onSubmit</span> = (<span class="params">values</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="comment">//values是一个对象，存有填好的表单的值，key是元素的name。</span></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(values)</span></span><br><span class="line"><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&#x27;验证通过时执行&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;Form&gt;包裹整个表单，&lt;Field&gt;包裹表单中的一个字段 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- @submit在所有Field都返回true时才触发 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Form</span> @<span class="attr">submit</span>=<span class="string">&quot;onSubmit&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Field</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;isRequired&quot;</span> <span class="attr">:validate-on-input</span>=<span class="string">&quot;true&quot;</span> #<span class="attr">default</span>=<span class="string">&quot;&#123; errorMessage, field &#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- field来自&lt;Field&gt;的v-slot, 意味着值的绑定与事件的绑定。在数据不方便双向绑定，如file时，或想自己配置绑定事件时不使用v-bind写法，具体请看官方文档 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-bind</span>=<span class="string">&quot;field&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- errMessage即为校验失败后显示的信息 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; errorMessage &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Field</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- onsubmit会监听内部每一个button的点击，点击时触发内部所有Field的验证 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="使用自定义输入框"><a href="#使用自定义输入框" class="headerlink" title="使用自定义输入框"></a><strong>使用自定义输入框</strong></h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Field</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;&#123; email: true &#125;&quot;</span>  #<span class="attr">default</span>=<span class="string">&quot;&#123; errorMessage, value &#125;&quot;</span>&gt;</span></span><br><span class="line">//自定义组件推荐使用update:modelValue事件实现与Field的绑定</span><br><span class="line"><span class="tag">&lt;<span class="name">CustomInput</span> <span class="attr">:modelValue</span>=<span class="string">&quot;value&quot;</span> @<span class="attr">update:modelValue</span>=<span class="string">&quot;handleChange&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Field</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Form</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="验证规则绑定"><a href="#验证规则绑定" class="headerlink" title="验证规则绑定"></a><strong>验证规则绑定</strong></h1><h2 id="声明验证规则"><a href="#声明验证规则" class="headerlink" title="声明验证规则"></a>声明验证规则</h2><p>验证规则有两种，一是直接使用函数，还有一种叫validator(个人感觉和函数区别也不大)</p><h3 id="使用函数"><a href="#使用函数" class="headerlink" title="使用函数"></a>使用函数</h3><p>声明一个函数，返回值是 bool或string 。return true 时errormessage为空， return false则errormessage为默认值， return string 则将该string赋值给errormessage。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">isRequired</span> = (<span class="params">value</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (value &amp;&amp; value.<span class="title function_">trim</span>()) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;This is required&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后使用:rules绑定</p><p><code>&lt;Field name=&quot;field&quot; :rules=&quot;isRequired&quot; /&gt;</code></p><h3 id="使用validator"><a href="#使用validator" class="headerlink" title="使用validator"></a>使用validator</h3><p>声明一个validator, 类似函数</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineRule &#125; <span class="keyword">from</span> <span class="string">&#x27;vee-validate&#x27;</span>;</span><br><span class="line"><span class="title function_">defineRule</span>(<span class="string">&#x27;required&#x27;</span>, <span class="function">(<span class="params">value :string</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (!value || !value.<span class="property">length</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;This field is required&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//需要参数的validator</span></span><br><span class="line"><span class="title function_">defineRule</span>(<span class="string">&#x27;minLength&#x27;</span>, <span class="function">(<span class="params">value, [limit]</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// The field is empty so it should pass</span></span><br><span class="line">  <span class="keyword">if</span> (!value || !value.<span class="property">length</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (value.<span class="property">length</span> &lt; limit) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`This field must be at least <span class="subst">$&#123;limit&#125;</span> characters`</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="title function_">defineRule</span>(<span class="string">&#x27;minMax&#x27;</span>, <span class="function">(<span class="params">value, [min, max]</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// The field is empty so it should pass</span></span><br><span class="line">  <span class="keyword">if</span> (!value || !value.<span class="property">length</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (value.<span class="property">length</span> &lt; min) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`This field must be at least <span class="subst">$&#123;min&#125;</span> characters`</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (value.<span class="property">length</span> &gt; max) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`This field must be at most <span class="subst">$&#123;max&#125;</span> characters`</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>而后用:rules绑定</p><p><code>绑定单个&lt;Field name=&quot;username3&quot; :rules=&quot;&#39;resquired&#39;&quot; &gt;</code></p><p><code>绑定多个&lt;Field name=&quot;username3&quot; :rules=&quot;&#39;resquired|email&#39;&quot; &gt;</code></p><p><code>绑定带参数的validator &lt;Field name=&quot;username3&quot; :rules=&quot;&#39;resquired|minLength:8&#39;&quot; &gt;</code></p><p><code>绑定带多个参数的validator &lt;Field name=&quot;username3&quot; :rules=&quot;&#39;minMax:5,8|resquired&#39;&quot; &gt;</code></p><h2 id="绑定规则"><a href="#绑定规则" class="headerlink" title="绑定规则"></a>绑定规则</h2><p>除每个field单独绑定外，还可定义一个schema控制所有rules后通过name分配rule</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;!-- 给<span class="title class_">Form</span>绑定schema --&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">Form</span> @<span class="attr">submit</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">:validation-schema</span>=<span class="string">&quot;schema&quot;</span> <span class="attr">v-slot</span>=<span class="string">&quot;&#123; errors &#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Field</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; errors.email &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Field</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; errors.password &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>Submit<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">Form</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> &#123; <span class="title class_">Form</span>, <span class="title class_">Field</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vee-validate&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> schema = &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">email</span>: <span class="string">&#x27;required|email&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">password</span>: <span class="string">&#x27;required|minLength:8&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h1 id="验证时机的设置"><a href="#验证时机的设置" class="headerlink" title="验证时机的设置"></a><strong>验证时机的设置</strong></h1><h2 id="单一Field验证："><a href="#单一Field验证：" class="headerlink" title="单一Field验证："></a>单一Field验证：</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Field</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;&#123; email: true &#125;&quot;</span> <span class="attr">:validateOnInput</span>=<span class="string">&quot;true&quot;</span> #<span class="attr">default</span>=<span class="string">&quot;&#123; errorMessage, field &#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-bind</span>=<span class="string">&quot;field&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; errorMessage &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Field</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>与时机有关的prop</th><th>默认值</th><th>介绍</th></tr></thead><tbody><tr><td>validateOnMount</td><td>false</td><td></td></tr><tr><td>validateOnInput</td><td>false</td><td></td></tr><tr><td>validateOnChange</td><td>true</td><td></td></tr><tr><td>validateOnBlur</td><td>true</td><td></td></tr><tr><td>validateOnModelUpdate</td><td>true</td><td></td></tr><tr><td>bails</td><td>true</td><td>绑定多个验证规则时，有一个验证规则未通过，直接结束验证，而不再继续验证其他规则</td></tr></tbody></table><h2 id="全表验证："><a href="#全表验证：" class="headerlink" title="全表验证："></a>全表验证：</h2><p>除最后的提交之外，可能还有其他地方也需要进行全表验证，VeeValidate为此提供了validate模块</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 导入validate模块 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Form</span> @<span class="attr">submit</span>=<span class="string">&quot;onSubmit&quot;</span> #<span class="attr">default</span>=<span class="string">&quot;&#123; validate &#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Field</span> <span class="attr">name</span>=<span class="string">&quot;username1&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;isRequired&quot;</span> #<span class="attr">default</span>=<span class="string">&quot;&#123; errorMessage, field&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-bind</span>=<span class="string">&quot;field&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; errorMessage &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Field</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Field</span> <span class="attr">name</span>=<span class="string">&quot;username2&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;isRequired&quot;</span>  #<span class="attr">default</span>=<span class="string">&quot;&#123; errorMessage, field &#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-bind</span>=<span class="string">&quot;field&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; errorMessage &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Field</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 使用validate模块 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">&quot;validate()&quot;</span>&gt;</span>11111<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="状态管理（trigger）"><a href="#状态管理（trigger）" class="headerlink" title="状态管理（trigger）"></a>状态管理（trigger）</h1><h2 id="Form"><a href="#Form" class="headerlink" title="Form"></a>Form</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 验证状态管理 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">Form</span> @<span class="attr">submit</span>=<span class="string">&quot;onSubmit&quot;</span> #<span class="attr">default</span>=<span class="string">&quot;&#123; meta &#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123; meta &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">Form</span>&gt;</span></span></span><br><span class="line"><span class="comment">//渲染结果&#123; &quot;initialValues&quot;: &#123;&#125;, &quot;touched&quot;: false, &quot;pending&quot;: false, &quot;valid&quot;: false, &quot;dirty&quot;: false &#125;</span></span><br><span class="line">meta.<span class="property">value</span>.<span class="property">initialValues</span>; <span class="comment">//一个对象，包含所有字段的初始值，key是字段的name</span></span><br><span class="line">meta.<span class="property">value</span>.<span class="property">touched</span>;<span class="comment">//是否有字段被focus过，并且已经blur</span></span><br><span class="line">meta.<span class="property">value</span>.<span class="property">pending</span>; <span class="comment">//是否有字段还在验证中</span></span><br><span class="line">meta.<span class="property">value</span>.<span class="property">valid</span>; <span class="comment">//是否全部通过验证</span></span><br><span class="line">meta.<span class="property">value</span>.<span class="property">dirty</span>; <span class="comment">//是否有字段更新</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 提交状态管理 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- isSubmitting在提交时值为true，提交完成后值变为false --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">v-form</span> <span class="attr">:validation-schema</span>=<span class="string">&quot;schema&quot;</span> @<span class="attr">submit</span>=<span class="string">&quot;onSubmit&quot;</span> <span class="attr">v-slot</span>=<span class="string">&quot;&#123; isSubmitting &#125;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Field"><a href="#Field" class="headerlink" title="Field"></a>Field</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Field</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;validateEmail&quot;</span> <span class="attr">v-slot</span>=<span class="string">&quot;&#123; field, meta &#125;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-bind</span>=<span class="string">&quot;field&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">pre</span>&gt;</span>&#123;&#123; meta &#125;&#125;<span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--渲染出的结果为&#123; &quot;touched&quot;: true, &quot;pending&quot;: false, &quot;valid&quot;: false, &quot;validated&quot;: false, &quot;dirty&quot;: true &#125;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Field</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="表单的提交"><a href="#表单的提交" class="headerlink" title="表单的提交"></a>表单的提交</h1><blockquote><p>You will rarely need to access the form values inside the template, but it is there if you ever need it. What’s interesting is that vee-validate follows the assumption that most likely you will need the form values at the submission phase.<br>您很少需要在提交这一步骤之外使用表单值，基于这个假设，vee-validate只在提交阶段提供表单值。但如果您有需要，请额外使用v-model绑定你想要的元素</p></blockquote><p>⬆️源自VeeValidate官方文档</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; <span class="title class_">Form</span>, <span class="title class_">Field</span>, <span class="title class_">ErrorMessage</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;vee-validate&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="comment">//values为表单内部的值，是一个对象，key为field的name</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">onSubmit</span> = (<span class="params">values</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(values);</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="comment">//value为用户填入的值，results存有验证是否通过的信息，errors为错误信息</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">onInvalidSubmit</span>=(<span class="params">&#123;values, errors, results&#125;</span>)=&gt;&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(values);</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(errors);</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(results);</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">isRequired</span>=(<span class="params">value:string</span>)=&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">if</span> (value &amp;&amp; value.<span class="title function_">trim</span>()) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">return</span> <span class="string">&#x27;你没通过捏&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 在所有验证都通过时触发submit事件，其handler默认带表单值为参数。有验证不通过时触发invalid</span></span><br><span class="line"><span class="comment">Submit事件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Form</span> @<span class="attr">submit</span>=<span class="string">&quot;onSubmit&quot;</span> @<span class="attr">invalid-submit</span>=<span class="string">&quot;onInvalidSubmit&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Field</span> <span class="attr">name</span>=<span class="string">&quot;username1&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;isRequired&quot;</span> #<span class="attr">default</span>=<span class="string">&quot;&#123; field&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-bind</span>=<span class="string">&quot;field&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Field</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Field</span> <span class="attr">name</span>=<span class="string">&quot;username2&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;isRequired&quot;</span>  #<span class="attr">default</span>=<span class="string">&quot;&#123; errorMessage, field &#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-bind</span>=<span class="string">&quot;field&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; errorMessage &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Field</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Form自动监听其间button的点击事件，点击则对所有field进行验证 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>一个按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h1><h2 id="绑定初始值"><a href="#绑定初始值" class="headerlink" title="绑定初始值"></a>绑定初始值</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 仍可以使用v-model来绑定初始值 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">setup</span>&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">...</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="comment">&lt;!-- 定义初始值 --&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">const formValues =&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">username1:&#x27;test1&#x27;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">username2:&#x27;test2&#x27;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 给Form绑定initialValues --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Form</span> @<span class="attr">submit</span>=<span class="string">&quot;onSubmit&quot;</span> <span class="attr">:initialValues</span>=<span class="string">&quot;formValues&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Field</span> <span class="attr">name</span>=<span class="string">&quot;username1&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;isRequired&quot;</span> #<span class="attr">default</span>=<span class="string">&quot;&#123; errorMessage, field&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-bind</span>=<span class="string">&quot;field&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; errorMessage &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Field</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Field</span> <span class="attr">name</span>=<span class="string">&quot;username2&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;isRequired&quot;</span>  #<span class="attr">default</span>=<span class="string">&quot;&#123; errorMessage, field &#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-bind</span>=<span class="string">&quot;field&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; errorMessage &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Field</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>1212<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="错误信息的显示"><a href="#错误信息的显示" class="headerlink" title="错误信息的显示"></a>错误信息的显示</h2><p><code>&lt;*ErrorMessage* *name*=&quot;field&quot; *as*=&quot;div&quot; /&gt;</code></p><p>可以通过修改as的值，将错误信息改为自定义组件</p><h2 id="更改值"><a href="#更改值" class="headerlink" title="更改值"></a>更改值</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 行内函数更改 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Form</span> <span class="attr">v-slot</span>=<span class="string">&quot;&#123; setFieldValue, setValues &#125;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Field</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span>  /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ErrorMessage</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Field</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>  /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ErrorMessage</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;setFieldValue(&#x27;email&#x27;, &#x27;test&#x27;)&quot;</span>&gt;</span>Set Field Value<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;setValues(&#123; email: &#x27;test&#x27;, password: &#x27;test12&#x27; &#125;)&quot;</span>&gt;</span></span><br><span class="line">    Set Multiple Values</span><br><span class="line">  <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- js中使用 ----------------------------------------------------------------------&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">setup</span>&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">...</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">const numval = ref(5)</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="comment">&lt;!--获取ref--&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">const myForm = ref()</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="comment">&lt;!-- 更改一个值 --&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">function changevalue()&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">myForm.value.setFieldValue(&#x27;username1&#x27;,numval.value++)</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="comment">&lt;!-- 更改多个值 --&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">function changevalues()&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">myForm.value.setValues(</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">username1: 1,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">username2: 2</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">)</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 获取ref --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Form</span> @<span class="attr">submit</span>=<span class="string">&quot;onSubmit&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;myForm&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Field</span> <span class="attr">name</span>=<span class="string">&quot;username1&quot;</span> #<span class="attr">default</span>=<span class="string">&quot;&#123; errorMessage, field&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-bind</span>=<span class="string">&quot;field&quot;</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; errorMessage &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Field</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Field</span> <span class="attr">name</span>=<span class="string">&quot;username2&quot;</span>  #<span class="attr">default</span>=<span class="string">&quot;&#123; errorMessage, field &#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-bind</span>=<span class="string">&quot;field&quot;</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; errorMessage &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Field</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">&quot;changevalue&quot;</span>&gt;</span>111<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">&quot;changevalues&quot;</span>&gt;</span>222<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -表单验证 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端性能优化</title>
      <link href="/post/fontEnd/fontEndImprove/"/>
      <url>/post/fontEnd/fontEndImprove/</url>
      
        <content type="html"><![CDATA[<h1 id="防抖"><a href="#防抖" class="headerlink" title="防抖"></a>防抖</h1><p>概念：避免在短时间内重复触发同一个事件</p><p>依赖安装<code>npm i lodash</code></p><p>导入<code>import _ from &#39;lodash’</code></p><p>代码示例：</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//随便定义一个函数：</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">fun</span>= (<span class="params">str</span>)=&gt;&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//声明一个debounce变量</span></span><br><span class="line"><span class="keyword">const</span> fun1 = _.<span class="title function_">debounce</span>(fun,<span class="number">500</span>)</span><br><span class="line"><span class="comment">//其中，fun是一个函数，在fun1的声明中fun不带参数，此后，就把 fun1当fan用</span></span><br><span class="line"><span class="comment">//如：&lt;button @click=&quot;fun1(&#x27;11111&#x27;)&quot;&gt;&lt;/button&gt;</span></span><br></pre></td></tr></table></figure><h1 id="axios取消请求"><a href="#axios取消请求" class="headerlink" title="axios取消请求"></a>axios取消请求</h1><p>概念：当用户需频繁发送请求，并且新请求的数据会覆盖旧请求时，应该在新请求发送时取消旧请求</p><p>axios仓库页面：<a href="https://github.com/axios/axios#cancellation">axios&#x2F;axios: Promise based HTTP client for the browser and node.js (github.com)</a>，取消为Cancellation部分</p><p>底层原理挺复杂的（原理讲解见<a href="https://zhuanlan.zhihu.com/p/432732779#:~:text=%2F%2F%20Axios%2Flib%2Fadapters%2Fxhr.js%20%2F%2F...%20if%20%28config.cancelToken%20%7C%7C%20config.signal%29%20%7B,%3F%20onCanceled%28%29%20%3A%20config.signal.addEventListener%28%27abort%27%2C%20onCanceled%29%3B%20%7D%20%7D%20%2F%2F">这次终于弄懂Axios是如何中断请求了</a>），但实际用起来很简单。只需new 一个AbortController实例后，在要取消请求时调用这个实例的abort方法即可。</p><p>代码示例：</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//请求控制器</span></span><br><span class="line"><span class="keyword">const</span> controller = <span class="title function_">ref</span>(<span class="keyword">new</span> <span class="title class_">AbortController</span>())</span><br><span class="line"></span><br><span class="line"><span class="comment">//关联搜索框</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">handleInputList</span> = (<span class="params">val</span>) =&gt; &#123;</span><br><span class="line"><span class="comment">//取消旧请求</span></span><br><span class="line">    controller.<span class="property">value</span>.<span class="title function_">abort</span>()</span><br><span class="line"><span class="comment">//创建新控制器</span></span><br><span class="line">    controller.<span class="property">value</span> = <span class="keyword">new</span> <span class="title class_">AbortController</span>()</span><br><span class="line"><span class="comment">//getMatchJobLists是一个封装了的axios方法,将controller.value.signal作为参数传入</span></span><br><span class="line">    <span class="title function_">getMatchJobLists</span>(&#123; <span class="attr">job</span>: val, <span class="attr">isSearch</span>: <span class="number">1</span> &#125;, controller.<span class="property">value</span>.<span class="property">signal</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        isInputSearchArr.<span class="property">value</span> = []</span><br><span class="line">        <span class="keyword">let</span> industry = <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="keyword">let</span> direction = <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> (res.<span class="property">code</span> === <span class="number">200</span>) &#123;</span><br><span class="line">            res.<span class="property">data</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (item.<span class="property">industry</span>) &#123;</span><br><span class="line">                    industry = item.<span class="property">industry</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                item.<span class="property">direction</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item2</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (item2.<span class="property">direction</span>) &#123;</span><br><span class="line">                        direction = item2.<span class="property">direction</span></span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    item2.<span class="property">jobs</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item3</span>) =&gt;</span> &#123;</span><br><span class="line">                        isInputSearchArr.<span class="property">value</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">                            <span class="attr">id</span>: item3.<span class="property">id</span>,</span><br><span class="line">                            <span class="attr">name</span>: item3.<span class="property">name</span>,</span><br><span class="line">                            industry,</span><br><span class="line">                            direction,</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该示例是一个类似浏览器的搜索下拉框，用户每次输入后都向服务器请求用户搜索的内容 ，用户打字较快的话，会在短时间内进行多次请求，而其中只有最后一次请求的结果有意义，因此可以通过取消之前的请求来提升性能。</p><p>代码段中的getMatchJobLists是一个封装了的axios方法，其定义如下：</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> getMatchJobLists = (<span class="attr">params</span>: <span class="built_in">any</span>, <span class="attr">signal</span>: <span class="title class_">GenericAbortSignal</span>): <span class="function"><span class="params">any</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">`/match_job_lists`</span>,</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&quot;get&quot;</span>,</span><br><span class="line">        signal,</span><br><span class="line">        params,</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> 性能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vscode配置vim&amp;&amp;vim的快捷键</title>
      <link href="/post/forAll/vim-in-vscode/"/>
      <url>/post/forAll/vim-in-vscode/</url>
      
        <content type="html"><![CDATA[<h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>💡 在组长的推荐下尝试了一把vim，一开始点进<a href="https://www.runoob.com/linux/linux-vim.html">Linux vi&#x2F;vim | 菜鸟教程 (runoob.com)</a>入门时，看着键盘图看得头皮发麻，各种快捷键用的速度还不如鼠标老老实实一下一下点击，但用了两个星期以后大呼过瘾，甚至觉得这个教程里快捷键有些不够，便去找了一下官方文档，</p><h2 id="vscode配置vim："><a href="#vscode配置vim：" class="headerlink" title="vscode配置vim："></a>vscode配置vim：</h2><p>配置过程分两步</p><p>1.在vscode的插件市场中下载vim插件</p><p><img src="https://img-blog.csdnimg.cn/2e8a3c545a224c0d83be4d3bda485c85.png#pic_center" alt="Untitled"></p><p>2.在头部导航栏中点击文件，按 文件&#x2F;首选项&#x2F;设置 的顺序来到设置页，然后拖动滚动条跑到页面最底部，点击 ‘在settings.json中编辑’</p><p>3.在settings.json最外部的{}中的最后一个元素后加上以下代码，然后保存，则完成配置，可以使用了。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;vim.easymotion&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vim.incsearch&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vim.useSystemClipboard&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vim.useCtrlKeys&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vim.hlsearch&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vim.insertModeKeyBindings&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;before&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;j&quot;</span><span class="punctuation">,</span> <span class="string">&quot;j&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;after&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;&lt;Esc&gt;&quot;</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vim.normalModeKeyBindingsNonRecursive&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;before&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;&lt;leader&gt;&quot;</span><span class="punctuation">,</span> <span class="string">&quot;d&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;after&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;d&quot;</span><span class="punctuation">,</span> <span class="string">&quot;d&quot;</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;before&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;&lt;C-n&gt;&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;commands&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;:nohl&quot;</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;before&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;K&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;commands&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;lineBreakInsert&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;silent&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vim.leader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&lt;space&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vim.handleKeys&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;&lt;C-a&gt;&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;&lt;C-f&gt;&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;&lt;C-c&gt;&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vue.splitEditors.layout.left&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">        <span class="string">&quot;script&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;scriptSetup&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;styles&quot;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br></pre></td></tr></table></figure><h2 id="vim快捷键"><a href="#vim快捷键" class="headerlink" title="vim快捷键"></a>vim快捷键</h2><p>以下内容为<a href="https://www.runoob.com/linux/linux-vim.html">Linux vi&#x2F;vim | 菜鸟教程 (runoob.com)</a>没有讲到，而我看官方文档后觉得比较常用的快捷键。新手入门还请先从菜鸟教程学习基础。</p><p><strong>标记与跳转</strong></p><table><thead><tr><th>快捷键</th><th>作用</th></tr></thead><tbody><tr><td>m{a-zA-Z}</td><td>mark current position with mark {a-zA-Z}</td></tr><tr><td>&#96;{a-z}</td><td>go to mark {a-z} within current file</td></tr><tr><td>‘.</td><td>go to the position of the last change in this file</td></tr><tr><td>‘“</td><td>go to the position when last editing this file</td></tr><tr><td>:marks</td><td>print the active marks</td></tr><tr><td>🔢 %</td><td>goto line N percentage down in the file; N must be given, otherwise it is the % command</td></tr></tbody></table><p><strong>查找</strong></p><table><thead><tr><th>快捷键</th><th>作用</th></tr></thead><tbody><tr><td>*</td><td>search forward for the identifier under the cursor</td></tr><tr><td>g*</td><td>like “*”, but also find partial matches</td></tr><tr><td>gd</td><td>goto local declaration of identifier under the cursor</td></tr><tr><td>gD</td><td>goto global declaration of identifier under the cursor</td></tr></tbody></table><p><strong>光标移动</strong></p><table><thead><tr><th>快捷键</th><th>作用</th></tr></thead><tbody><tr><td>%</td><td>find the next brace, bracket, comment, or “#if”&#x2F; “#else”&#x2F;“#endif” in this line and go to its match</td></tr><tr><td>‘&gt;</td><td>go to the end of the (previous) Visual area</td></tr><tr><td>‘&lt;</td><td>go to the start of the (previous) Visual area</td></tr><tr><td>f{char}</td><td>to the Nth occurrence of {char} to the right</td></tr><tr><td>F{char}</td><td>to the Nth occurrence of {char} to the left</td></tr><tr><td>t{char}</td><td>till before the Nth occurrence of {char} to the right</td></tr><tr><td>T{char}</td><td>till before the Nth occurrence of {char} to the left</td></tr></tbody></table><p><strong>普通模式的插入</strong></p><table><thead><tr><th>快捷键</th><th>作用</th></tr></thead><tbody><tr><td>K</td><td>上方插入一空行而不进入输入模式</td></tr><tr><td>cc</td><td>删除该行至行首且切换为输入模式</td></tr></tbody></table><p><strong>控制滚动条</strong></p><table><thead><tr><th>快捷键</th><th>作用</th></tr></thead><tbody><tr><td>🔢 CTRL-E</td><td>window N lines downwards (default: 1)</td></tr><tr><td>🔢 CTRL-Y</td><td>window N lines upwards (default: 1)</td></tr><tr><td>🔢 CTRL-D</td><td>window N lines Downwards (default: 1&#x2F;2 window)</td></tr><tr><td>🔢 CTRL-U</td><td>window N lines Upwards (default: 1&#x2F;2 window)</td></tr><tr><td>zt</td><td>redraw, current line at top of window</td></tr><tr><td>z. or zz</td><td>redraw, current line at center of window</td></tr><tr><td>zb</td><td>redraw, current line at bottom of window</td></tr><tr><td>🔢 zh</td><td>scroll screen N characters to the right</td></tr><tr><td>🔢 zl</td><td>scroll screen N characters to the left</td></tr><tr><td>🔢 zH</td><td>scroll screen half a screenwidth to the right</td></tr><tr><td>🔢 zL</td><td>scroll screen half a screenwidth to the left</td></tr></tbody></table><p><strong>视图模式（ CTRL-V ）命令</strong></p><table><thead><tr><th>快捷键</th><th>作用</th></tr></thead><tbody><tr><td>aw</td><td>Select a word(不包括符号)</td></tr><tr><td>aW</td><td>Select a word(包括符号)</td></tr><tr><td>ap</td><td>Select “a paragraph”(上下两个空行之间，)</td></tr><tr><td>a[]&lt;&gt;’’{}””</td><td>选择对应的一整个块</td></tr><tr><td>i[]&lt;&gt;’’{}””</td><td>选择块中的内容</td></tr><tr><td>at</td><td>Select “a tag block”</td></tr><tr><td>it</td><td>Select “inner tag block” (from <aaa> to </aaa>)</td></tr><tr><td>I</td><td>insert the same text in front of all the selected lines</td></tr><tr><td>A</td><td>append the same text after all the selected lines</td></tr><tr><td>c</td><td>Change each of the selected lines with the entered text</td></tr></tbody></table><p><strong>插入模式（ii）命令</strong></p><table><thead><tr><th>快捷键</th><th>作用</th></tr></thead><tbody><tr><td>CTRL-W</td><td>delete word before the cursor</td></tr><tr><td>CTRL-E</td><td>insert the character from below the cursor</td></tr><tr><td>CTRL-Y</td><td>insert the character from above the cursor</td></tr><tr><td>CTRL-A</td><td>inser previously inserted text</td></tr><tr><td>CTRL-@</td><td>insert previously inserted text and stop Insert mode</td></tr><tr><td>CTRL-U</td><td>delete all entered characters in the current line before the cursor</td></tr></tbody></table><p><strong>普通模式的命令</strong></p><table><thead><tr><th>快捷键</th><th>作用</th></tr></thead><tbody><tr><td>q{a-Z}</td><td>record typed characters into register {a-z}</td></tr><tr><td>q</td><td>stop recording</td></tr><tr><td>🔢 @{a-z}</td><td>execute the contents of register {a-z} (N times)</td></tr><tr><td>🔢 @@</td><td>repeat previous @{a-z} (N times)</td></tr><tr><td>“{char}</td><td>use register {char} for the next delete, yank, or put</td></tr><tr><td>“*</td><td>use register * to access system clipboard</td></tr><tr><td>:reg</td><td>show the contents of all registers</td></tr><tr><td>:reg {arg}</td><td>show the contents of registers mentioned in {arg}</td></tr></tbody></table><p><strong>基本命令</strong></p><table><thead><tr><th>快捷键</th><th>作用</th></tr></thead><tbody><tr><td>gp</td><td>like p, but leave cursor after the new text</td></tr><tr><td>🔢 CTRL-A</td><td>add N to the number at or after the cursor</td></tr><tr><td>🔢 CTRL-X</td><td>subtract N from the number at or after the cursor</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 综合 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vim </tag>
            
            <tag> VScode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用ssh代理加速github</title>
      <link href="/post/forAll/speedgit/"/>
      <url>/post/forAll/speedgit/</url>
      
        <content type="html"><![CDATA[<h1 id="使用ssh代理加速github"><a href="#使用ssh代理加速github" class="headerlink" title="使用ssh代理加速github"></a>使用ssh代理加速github</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>💡 <strong>背景</strong>：在公司摸鱼时偷偷整了个小项目存在github上，回到寝室兴高采烈地打开自己的小破笔记本准备接着完善项目, 但看着全局代理情况下git clone 27kb &#x2F; s 的龟速，我血压一下子就上来了，于是去学了以下如何提速。（请注意：本方法需要科学上网）</p></blockquote><blockquote><p>本方法学自：<a href="https://zhuanlan.zhihu.com/p/481574024">设置代理解决github被墙 - 知乎 (zhihu.com)</a>,  但该文章中还存有一些可能导致困惑的地方，我将在本篇文章中尽量避免</p></blockquote><hr><h2 id="使用ssh代理加速github的步骤"><a href="#使用ssh代理加速github的步骤" class="headerlink" title="使用ssh代理加速github的步骤"></a>使用ssh代理加速github的步骤</h2><h3 id="1-确认自己梯子的本地代理端口号"><a href="#1-确认自己梯子的本地代理端口号" class="headerlink" title="1. 确认自己梯子的本地代理端口号"></a>1. 确认自己梯子的本地代理端口号</h3><p>以我使用的vray为例，红色箭头所指的为梯子的三个端口号，其中，33612是与代理服务器进行连接的端口，而socks 与 http 是本地的端口号，也是我们接下来需要使用到的端口。</p><p><img src="https://img-blog.csdnimg.cn/05fb991394904388a68ef53b06cf8727.png#pic_center" alt="Untitled"></p><h3 id="2-确认自己Git连接执行文件的文件路径"><a href="#2-确认自己Git连接执行文件的文件路径" class="headerlink" title="2.确认自己Git连接执行文件的文件路径"></a>2.确认自己Git连接执行文件的文件路径</h3><p>Git 的连接执行文件是connect.exe</p><p>所在的路径一般为: <code>git的安装目录\mingw64\bin\connect</code></p><p>我将git安装在E盘的App目录中，该路径就为 <code>E:\App\Git\mingw64\bin\connect</code></p><p><img src="https://img-blog.csdnimg.cn/382c55b0fad84b13a3986172e4814184.png#pic_center" alt="Untitled"></p><h3 id="3-修改ssh的配置"><a href="#3-修改ssh的配置" class="headerlink" title="3.修改ssh的配置"></a>3.修改ssh的配置</h3><p>进入你的.ssh目录，路径一般为 <code>C:\User\你使用的用户名\.ssh</code>， 在这个目录下新建一个config文件（无后缀），将以下内容写入该文件中。 </p><p>其中：</p><p><strong>路径1：</strong> 第二步中确定的路径，如我使用的：<code>E:\APP\Git\mingw64\bin\connect</code></p><p><strong>端口：</strong> 第一步中确认的两个端口中的任意一个，如我使用的为socks端口，<strong>10808</strong></p><p><strong>路径2：</strong>.ssh目录中以id_为前缀的文件的路径，如我的.ssh中该文件名称为id_ed25519, 则我的路径2为 <code>C:\Users\我使用的用户名\.ssh\id_ed25519</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#Windows用户，注意替换你的端口号和connect.exe的路径</span><br><span class="line">ProxyCommand &quot;路径1&quot; -S 127.0.0.1:端口 -a none %h %p</span><br><span class="line"></span><br><span class="line">#MacOS用户用下方这条命令，注意替换你的端口号</span><br><span class="line">#ProxyCommand nc -v -x 127.0.0.1:端口 %h %p</span><br><span class="line"></span><br><span class="line">Host github.com</span><br><span class="line">  User git</span><br><span class="line">  Port 22</span><br><span class="line">  Hostname github.com</span><br><span class="line">  # 注意修改路径为你的路径</span><br><span class="line">  IdentityFile &quot;路径2&quot;</span><br><span class="line">  TCPKeepAlive yes</span><br><span class="line"></span><br><span class="line">Host ssh.github.com</span><br><span class="line">  User git</span><br><span class="line">  Port 443</span><br><span class="line">  Hostname ssh.github.com</span><br><span class="line">  # 注意修改路径为你的路径</span><br><span class="line">  IdentityFile &quot;路径2&quot;</span><br><span class="line">  TCPKeepAlive yes</span><br></pre></td></tr></table></figure><h3 id="4-验证"><a href="#4-验证" class="headerlink" title="4.验证"></a>4.验证</h3><p>win+r 并输入cmd 进入控制台， 输入<code>ssh -T git@github.com</code> ，回车，查看结果。返回successful之类的就意味着成功了。</p><p><img src="https://img-blog.csdnimg.cn/97e936ef9bc74634808a2ed171339fb6.png#pic_center" alt="速度变成了4MB每秒"></p><p>速度变成了4MB每秒</p>]]></content>
      
      
      <categories>
          
          <category> 综合 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> 加速 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/post/HelloWorld/"/>
      <url>/post/HelloWorld/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 杂物间 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
